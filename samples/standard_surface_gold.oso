OpenShadingLanguage 1.00
# Compiled by oslc 1.11.14
# options: -o /var/folders/s1/hz_4k9v51r3fwc5qgfn7s74r0000gn/T/tmp295qc7ll.oso -I/Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader
surface SR_gold	%meta{string,mtlx_category,"standard_surface"} %meta{string,mtlx_name,"SR_gold"} 
param	float	base	1		%meta{string,widget,"number"}  %read{32,2329} %write{2147483647,-1}
param	color	base_color	0.944000006 0.776000023 0.372999996		%read{32,363} %write{2147483647,-1}
param	float	diffuse_roughness	0		%meta{string,widget,"number"}  %read{2328,2328} %write{2147483647,-1}
param	float	metalness	1		%meta{string,widget,"number"}  %read{2380,2385} %write{2147483647,-1}
param	float	specular	1		%meta{string,widget,"number"}  %read{33,1712} %write{2147483647,-1}
param	color	specular_color	0.998000026 0.981000006 0.750999987		%read{33,1712} %write{2147483647,-1}
param	float	specular_roughness	0.0199999996		%meta{string,widget,"number"}  %read{326,326} %write{2147483647,-1}
param	float	specular_IOR	1.5		%meta{string,widget,"number"}  %read{1189,2246} %write{2147483647,-1}
param	float	specular_anisotropy	0		%meta{string,widget,"number"}  %read{343,358} %write{2147483647,-1}
param	float	specular_rotation	0		%meta{string,widget,"number"}  %read{36,36} %write{2147483647,-1}
param	float	transmission	0		%meta{string,widget,"number"}  %read{2359,2364} %write{2147483647,-1}
param	color	transmission_color	1 1 1		%read{1725,2247} %write{2147483647,-1}
param	float	transmission_depth	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	transmission_scatter	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	float	transmission_scatter_anisotropy	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	transmission_dispersion	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	transmission_extra_roughness	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	subsurface1	0		%meta{string,widget,"number"}  %read{2338,2343} %write{2147483647,-1}
param	color	subsurface_color	1 1 1		%read{362,362} %write{2147483647,-1}
param	color	subsurface_radius	1 1 1		%read{42,44} %write{2147483647,-1}
param	float	subsurface_scale	1		%meta{string,widget,"number"}  %read{322,322} %write{2147483647,-1}
param	float	subsurface_anisotropy	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	sheen	0		%meta{string,widget,"number"}  %read{2257,2283} %write{2147483647,-1}
param	color	sheen_color	1 1 1		%read{2285,2285} %write{2147483647,-1}
param	float	sheen_roughness	0.300000012		%meta{string,widget,"number"}  %read{2267,2267} %write{2147483647,-1}
param	float	coat	0		%meta{string,widget,"number"}  %read{34,894} %write{2147483647,-1}
param	color	coat_color	1 1 1		%read{49,52} %write{2147483647,-1}
param	float	coat_roughness	0.100000001		%meta{string,widget,"number"}  %read{12,202} %write{2147483647,-1}
param	float	coat_anisotropy	0		%meta{string,widget,"number"}  %read{16,332} %write{2147483647,-1}
param	float	coat_rotation	0		%meta{string,widget,"number"}  %read{31,31} %write{2147483647,-1}
param	float	coat_IOR	1.5		%meta{string,widget,"number"}  %read{371,893} %write{2147483647,-1}
param	float	coat_affect_color	0		%meta{string,widget,"number"}  %read{321,321} %write{2147483647,-1}
param	float	coat_affect_roughness	0		%meta{string,widget,"number"}  %read{34,34} %write{2147483647,-1}
param	float	thin_film_thickness	0		%meta{string,widget,"number"}  %read{1185,1185} %write{2147483647,-1}
param	float	thin_film_IOR	1.5		%meta{string,widget,"number"}  %read{1184,1184} %write{2147483647,-1}
param	float	emission1	0		%meta{string,widget,"number"}  %read{50,50} %write{2147483647,-1}
param	color	emission_color	1 1 1		%read{50,50} %write{2147483647,-1}
param	color	opacity	1 1 1		%read{55,55} %write{2147483647,-1}
param	int	thin_walled	0		%meta{string,widget,"checkBox"}  %read{46,46} %write{2147483647,-1}
param	string	geomprop_Nworld_space	"world"		%read{2,2} %write{2147483647,-1}
param	string	geomprop_Tworld_space	"world"		%read{5,5} %write{2147483647,-1}
param	int	geomprop_Tworld_index	0		%meta{string,widget,"number"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	closure color	out			%read{2147483647,-1} %write{2424,2424}
global	vector	I	%read{378,2262} %write{2147483647,-1}
global	normal	N	%read{2,2} %write{2147483647,-1}
global	vector	dPdu	%read{3,3} %write{2147483647,-1}
local	float	___741_roughness_sqr	%read{23,356} %write{15,342}
local	float	___742_aspect	%read{23,353} %write{22,349}
local	float	___749_c2	%read{919,920} %write{913,913}
local	vector	___749_n2_k2	%read{919,920} %write{916,916}
local	vector	___749_nc2	%read{922,926} %write{918,918}
local	vector	___749_rs_a	%read{922,923} %write{919,919}
local	vector	___749_rp_a	%read{925,926} %write{921,921}
local	vector	___749_rs	%read{928,928} %write{924,924}
local	vector	___749_rp	%read{928,928} %write{927,927}
local	float	___750_x	%read{396,1752} %write{393,1746}
local	float	___750_x5	%read{401,1754} %write{399,1752}
local	float	___756_a	%read{2279,2279} %write{2274,2274}
local	float	___756_b	%read{2279,2279} %write{2278,2278}
local	float	___757_dirAlbedo	%read{2281,2281} %write{2279,2279}
local	vector	___758_V	%read{2264,2264} %write{2263,2263}
local	float	___758_NdotV	%read{2271,2275} %write{2265,2265}
local	float	___758_alpha	%read{2273,2277} %write{2268,2268}
local	float	___758_albedo	%read{2285,2288} %write{2283,2283}
local	vector	___761_nAxis	%read{67,267} %write{63,209}
local	float	___761_s	%read{77,263} %write{64,210}
local	float	___761_c	%read{66,269} %write{65,211}
local	float	___761_oc	%read{68,266} %write{66,212}
local	float	___762_rotationRadians	%read{64,211} %write{61,207}
local	matrix	___762_m	%read{130,317} %write{124,270}
local	float	___762_trans.x	%read{174,320} %write{140,286} %mystruct{___762_trans} %mystructfield{0}
local	float	___762_trans.y	%read{174,320} %write{151,297} %mystruct{___762_trans} %mystructfield{1}
local	float	___762_trans.z	%read{174,320} %write{162,308} %mystruct{___762_trans} %mystructfield{2}
local	float	___762_trans.w	%read{2147483647,-1} %write{173,319} %mystruct{___762_trans} %mystructfield{3}
local	color	___763_r	%read{183,197} %write{182,182}
local	color	___763_r_sqrt	%read{187,188} %write{183,183}
local	color	___763_n_min	%read{190,190} %write{186,186}
local	color	___763_n_max	%read{190,190} %write{189,189}
local	color	___763_np1	%read{193,193} %write{191,191}
local	color	___763_nm1	%read{195,195} %write{192,192}
local	color	___763_k2	%read{200,201} %write{198,200}
local	float	___766_x	%read{428,2172} %write{425,2020}
local	float	___766_y	%read{430,2153} %write{426,2021}
local	float	___766_x2	%read{507,2201} %write{428,2023}
local	float	___766_y2	%read{526,2211} %write{430,2025}
local	float	___766_r.x	%read{627,2222} %write{623,2218} %mystruct{___766_r} %mystructfield{0}
local	float	___766_r.y	%read{628,2223} %write{624,2219} %mystruct{___766_r} %mystructfield{1}
local	float	___766_r.z	%read{629,2224} %write{625,2220} %mystruct{___766_r} %mystructfield{2}
local	float	___766_r.w	%read{630,2225} %write{626,2221} %mystruct{___766_r} %mystructfield{3}
local	float	___766_AB.x	%read{635,2237} %write{632,2232} %mystruct{___766_AB} %mystructfield{0}
local	float	___766_AB.y	%read{639,2238} %write{633,2236} %mystruct{___766_AB} %mystructfield{1}
local	color	___767_result	%read{645,1998} %write{644,1997}
local	color	___768_result	%read{887,2240} %write{886,2239}
local	float	___769_Ess	%read{646,2001} %write{645,1998}
local	color	___770_result	%read{650,2003} %write{649,2002}
local	float	___771_NdotV	%read{390,2020} %write{382,1735}
local	float	___771_F0	%read{400,1755} %write{388,1741}
local	float	___771_F	%read{419,1772} %write{402,1755}
local	float	___771_safeAlpha.x	%read{416,2246} %write{411,1764} %mystruct{___771_safeAlpha} %mystructfield{0}
local	float	___771_safeAlpha.y	%read{416,2246} %write{414,1767} %mystruct{___771_safeAlpha} %mystructfield{1}
local	float	___771_avgAlpha	%read{426,2021} %write{417,1770}
local	float	___771_comp	%read{655,2248} %write{650,2003}
local	float	___773_dirAlbedo	%read{889,2242} %write{888,2241}
local	float	___775_NdotV	%read{913,950} %write{911,911}
local	color	___775_F	%read{1172,1176} %write{929,929}
local	float	___775_safeAlpha.x	%read{943,1175} %write{938,938} %mystruct{___775_safeAlpha} %mystructfield{0}
local	float	___775_safeAlpha.y	%read{943,1175} %write{941,941} %mystruct{___775_safeAlpha} %mystructfield{1}
local	float	___775_avgAlpha	%read{951,951} %write{944,944}
local	color	___775_comp	%read{1176,1176} %write{1174,1174}
local	float	___780_opacity_weight	%read{2418,2420} %write{2416,2416}
local	closure color	___781_null_closure	%read{364,2411} %write{8,8}
local	float	___781_coat_roughness_vector_out.x	%read{25,410} %write{9,28} %mystruct{___781_coat_roughness_vector_out} %mystructfield{0}
local	float	___781_coat_roughness_vector_out.y	%read{27,413} %write{10,29} %mystruct{___781_coat_roughness_vector_out} %mystructfield{1}
local	float	___781_coat_tangent_rotate_degree_in2_tmp	%read{31,31} %write{30,30}
local	float	___781_coat_tangent_rotate_degree_out	%read{61,61} %write{31,31}
local	color	___781_metal_reflectivity_out	%read{181,181} %write{32,32}
local	color	___781_metal_edgecolor_out	%read{190,190} %write{33,33}
local	float	___781_coat_affect_roughness_multiply1_out	%read{202,202} %write{34,34}
local	float	___781_tangent_rotate_degree_in2_tmp	%read{36,36} %write{35,35}
local	float	___781_tangent_rotate_degree_out	%read{207,207} %write{36,36}
local	float	___781_coat_clamped_low_tmp	%read{41,41} %write{37,37}
local	float	___781_coat_clamped_high_tmp	%read{40,40} %write{38,38}
local	float	___781_coat_clamped_out	%read{321,321} %write{41,41}
local	vector	___781_subsurface_radius_vector_out	%read{322,322} %write{45,45}
local	float	___781_subsurface_selector_out	%read{2316,2321} %write{47,47}
local	color	___781_coat_attenuation_bg_tmp	%read{49,49} %write{48,48}
local	color	___781_coat_attenuation_out	%read{2390,2390} %write{49,49}
local	color	___781_emission_weight_out	%read{323,323} %write{50,50}
local	color	___781_coat_emission_attenuation_bg_tmp	%read{52,52} %write{51,51}
local	color	___781_coat_emission_attenuation_out	%read{323,323} %write{52,52}
local	color	___781_opacity_luminance_out	%read{2412,2412} %write{53,56}
local	vector	___781_coat_tangent_rotate_out	%read{324,324} %write{57,174}
local	color	___781_artistic_ior_ior	%read{191,917} %write{175,190}
local	color	___781_artistic_ior_extinction	%read{915,915} %write{176,201}
local	float	___781_coat_affect_roughness_multiply2_out	%read{326,326} %write{202,202}
local	vector	___781_tangent_rotate_out	%read{327,327} %write{203,320}
local	float	___781_coat_gamma_multiply_out	%read{330,330} %write{321,321}
local	vector	___781_subsurface_radius_scaled_out	%read{2147483647,-1} %write{322,322}
local	color	___781_emission_weight_attenuated_out	%read{2410,2410} %write{323,323}
local	vector	___781_coat_tangent_rotate_normalize_out	%read{334,334} %write{324,324}
local	float	___781_coat_affected_roughness_fg_tmp	%read{326,326} %write{325,325}
local	float	___781_coat_affected_roughness_out	%read{339,339} %write{326,326}
local	vector	___781_tangent_rotate_normalize_out	%read{360,360} %write{327,327}
local	float	___781_coat_gamma_in2_tmp	%read{330,330} %write{328,328}
local	float	___781_coat_gamma_out	%read{362,363} %write{330,330}
local	vector	___781_coat_tangent_out	%read{371,893} %write{331,335}
local	float	___781_main_roughness_out.x	%read{352,1763} %write{336,355} %mystruct{___781_main_roughness_out} %mystructfield{0}
local	float	___781_main_roughness_out.y	%read{354,1766} %write{337,356} %mystruct{___781_main_roughness_out} %mystructfield{1}
local	vector	___781_main_tangent_out	%read{1175,2246} %write{357,361}
local	color	___781_coat_affected_subsurface_color_out	%read{2297,2307} %write{362,362}
local	color	___781_coat_affected_diffuse_color_out	%read{2329,2329} %write{363,363}
local	closure color	___781_coat_bsdf_out.response	%read{374,2405} %write{364,897} %mystruct{___781_coat_bsdf_out} %mystructfield{0}
local	color	___781_coat_bsdf_out.throughput	%read{376,2407} %write{365,898} %mystruct{___781_coat_bsdf_out} %mystructfield{1}
local	float	___781_coat_bsdf_out.thickness	%read{2147483647,-1} %write{366,366} %mystruct{___781_coat_bsdf_out} %mystructfield{2}
local	float	___781_coat_bsdf_out.ior	%read{2147483647,-1} %write{367,367} %mystruct{___781_coat_bsdf_out} %mystructfield{3}
local	closure color	___781_metal_bsdf_out.response	%read{1179,2382} %write{899,1179} %mystruct{___781_metal_bsdf_out} %mystructfield{0}
local	color	___781_metal_bsdf_out.throughput	%read{2385,2385} %write{900,904} %mystruct{___781_metal_bsdf_out} %mystructfield{1}
local	float	___781_metal_bsdf_out.thickness	%read{2147483647,-1} %write{901,901} %mystruct{___781_metal_bsdf_out} %mystructfield{2}
local	float	___781_metal_bsdf_out.ior	%read{2147483647,-1} %write{902,902} %mystruct{___781_metal_bsdf_out} %mystructfield{3}
local	closure color	___781_specular_bsdf_out.response	%read{1192,2371} %write{1180,1715} %mystruct{___781_specular_bsdf_out} %mystructfield{0}
local	color	___781_specular_bsdf_out.throughput	%read{1194,2373} %write{1181,1716} %mystruct{___781_specular_bsdf_out} %mystructfield{1}
local	float	___781_specular_bsdf_out.thickness	%read{2147483647,-1} %write{1182,1185} %mystruct{___781_specular_bsdf_out} %mystructfield{2}
local	float	___781_specular_bsdf_out.ior	%read{2147483647,-1} %write{1183,1184} %mystruct{___781_specular_bsdf_out} %mystructfield{3}
local	closure color	___781_transmission_bsdf_out.response	%read{1727,2361} %write{1717,2250} %mystruct{___781_transmission_bsdf_out} %mystructfield{0}
local	color	___781_transmission_bsdf_out.throughput	%read{1729,2364} %write{1718,2251} %mystruct{___781_transmission_bsdf_out} %mystructfield{1}
local	float	___781_transmission_bsdf_out.thickness	%read{2147483647,-1} %write{1719,1719} %mystruct{___781_transmission_bsdf_out} %mystructfield{2}
local	float	___781_transmission_bsdf_out.ior	%read{2147483647,-1} %write{1720,1720} %mystruct{___781_transmission_bsdf_out} %mystructfield{3}
local	closure color	___781_sheen_bsdf_out.response	%read{2287,2350} %write{2252,2287} %mystruct{___781_sheen_bsdf_out} %mystructfield{0}
local	color	___781_sheen_bsdf_out.throughput	%read{2349,2352} %write{2253,2290} %mystruct{___781_sheen_bsdf_out} %mystructfield{1}
local	float	___781_sheen_bsdf_out.thickness	%read{2147483647,-1} %write{2254,2254} %mystruct{___781_sheen_bsdf_out} %mystructfield{2}
local	float	___781_sheen_bsdf_out.ior	%read{2147483647,-1} %write{2255,2255} %mystruct{___781_sheen_bsdf_out} %mystructfield{3}
local	closure color	___781_translucent_bsdf_out.response	%read{2299,2318} %write{2291,2299} %mystruct{___781_translucent_bsdf_out} %mystructfield{0}
local	color	___781_translucent_bsdf_out.throughput	%read{2321,2321} %write{2292,2300} %mystruct{___781_translucent_bsdf_out} %mystructfield{1}
local	float	___781_translucent_bsdf_out.thickness	%read{2147483647,-1} %write{2293,2293} %mystruct{___781_translucent_bsdf_out} %mystructfield{2}
local	float	___781_translucent_bsdf_out.ior	%read{2147483647,-1} %write{2294,2294} %mystruct{___781_translucent_bsdf_out} %mystructfield{3}
local	closure color	___781_subsurface_bsdf_out.response	%read{2309,2317} %write{2301,2309} %mystruct{___781_subsurface_bsdf_out} %mystructfield{0}
local	color	___781_subsurface_bsdf_out.throughput	%read{2321,2321} %write{2302,2310} %mystruct{___781_subsurface_bsdf_out} %mystructfield{1}
local	float	___781_subsurface_bsdf_out.thickness	%read{2147483647,-1} %write{2303,2303} %mystruct{___781_subsurface_bsdf_out} %mystructfield{2}
local	float	___781_subsurface_bsdf_out.ior	%read{2147483647,-1} %write{2304,2304} %mystruct{___781_subsurface_bsdf_out} %mystructfield{3}
local	closure color	___781_selected_subsurface_bsdf_out.response	%read{2320,2340} %write{2311,2320} %mystruct{___781_selected_subsurface_bsdf_out} %mystructfield{0}
local	color	___781_selected_subsurface_bsdf_out.throughput	%read{2322,2343} %write{2312,2322} %mystruct{___781_selected_subsurface_bsdf_out} %mystructfield{1}
local	float	___781_selected_subsurface_bsdf_out.thickness	%read{2147483647,-1} %write{2313,2313} %mystruct{___781_selected_subsurface_bsdf_out} %mystructfield{2}
local	float	___781_selected_subsurface_bsdf_out.ior	%read{2147483647,-1} %write{2314,2314} %mystruct{___781_selected_subsurface_bsdf_out} %mystructfield{3}
local	closure color	___781_diffuse_bsdf_out.response	%read{2331,2339} %write{2323,2331} %mystruct{___781_diffuse_bsdf_out} %mystructfield{0}
local	color	___781_diffuse_bsdf_out.throughput	%read{2343,2343} %write{2324,2332} %mystruct{___781_diffuse_bsdf_out} %mystructfield{1}
local	float	___781_diffuse_bsdf_out.thickness	%read{2147483647,-1} %write{2325,2325} %mystruct{___781_diffuse_bsdf_out} %mystructfield{2}
local	float	___781_diffuse_bsdf_out.ior	%read{2147483647,-1} %write{2326,2326} %mystruct{___781_diffuse_bsdf_out} %mystructfield{3}
local	closure color	___781_subsurface_mix_out.response	%read{2342,2349} %write{2333,2342} %mystruct{___781_subsurface_mix_out} %mystructfield{0}
local	color	___781_subsurface_mix_out.throughput	%read{2344,2352} %write{2334,2344} %mystruct{___781_subsurface_mix_out} %mystructfield{1}
local	float	___781_subsurface_mix_out.thickness	%read{2147483647,-1} %write{2335,2335} %mystruct{___781_subsurface_mix_out} %mystructfield{2}
local	float	___781_subsurface_mix_out.ior	%read{2147483647,-1} %write{2336,2336} %mystruct{___781_subsurface_mix_out} %mystructfield{3}
local	closure color	___781_sheen_layer_out.response	%read{2351,2360} %write{2345,2351} %mystruct{___781_sheen_layer_out} %mystructfield{0}
local	color	___781_sheen_layer_out.throughput	%read{2353,2364} %write{2346,2353} %mystruct{___781_sheen_layer_out} %mystructfield{1}
local	float	___781_sheen_layer_out.thickness	%read{2147483647,-1} %write{2347,2347} %mystruct{___781_sheen_layer_out} %mystructfield{2}
local	float	___781_sheen_layer_out.ior	%read{2147483647,-1} %write{2348,2348} %mystruct{___781_sheen_layer_out} %mystructfield{3}
local	closure color	___781_transmission_mix_out.response	%read{2363,2370} %write{2354,2363} %mystruct{___781_transmission_mix_out} %mystructfield{0}
local	color	___781_transmission_mix_out.throughput	%read{2365,2373} %write{2355,2365} %mystruct{___781_transmission_mix_out} %mystructfield{1}
local	float	___781_transmission_mix_out.thickness	%read{2147483647,-1} %write{2356,2356} %mystruct{___781_transmission_mix_out} %mystructfield{2}
local	float	___781_transmission_mix_out.ior	%read{2147483647,-1} %write{2357,2357} %mystruct{___781_transmission_mix_out} %mystructfield{3}
local	closure color	___781_specular_layer_with_thin_film_out.response	%read{2372,2381} %write{2366,2372} %mystruct{___781_specular_layer_with_thin_film_out} %mystructfield{0}
local	color	___781_specular_layer_with_thin_film_out.throughput	%read{2374,2385} %write{2367,2374} %mystruct{___781_specular_layer_with_thin_film_out} %mystructfield{1}
local	float	___781_specular_layer_with_thin_film_out.thickness	%read{2147483647,-1} %write{2368,2368} %mystruct{___781_specular_layer_with_thin_film_out} %mystructfield{2}
local	float	___781_specular_layer_with_thin_film_out.ior	%read{2147483647,-1} %write{2369,2369} %mystruct{___781_specular_layer_with_thin_film_out} %mystructfield{3}
local	closure color	___781_metalness_mix_out.response	%read{2384,2396} %write{2375,2384} %mystruct{___781_metalness_mix_out} %mystructfield{0}
local	color	___781_metalness_mix_out.throughput	%read{2386,2398} %write{2376,2386} %mystruct{___781_metalness_mix_out} %mystructfield{1}
local	float	___781_metalness_mix_out.thickness	%read{2147483647,-1} %write{2377,2377} %mystruct{___781_metalness_mix_out} %mystructfield{2}
local	float	___781_metalness_mix_out.ior	%read{2147483647,-1} %write{2378,2378} %mystruct{___781_metalness_mix_out} %mystructfield{3}
local	color	___781_metalness_mix_attenuated_out_in2_clamped	%read{2396,2398} %write{2391,2391}
local	closure color	___781_metalness_mix_attenuated_out.response	%read{2397,2404} %write{2392,2397} %mystruct{___781_metalness_mix_attenuated_out} %mystructfield{0}
local	color	___781_metalness_mix_attenuated_out.throughput	%read{2399,2407} %write{2393,2399} %mystruct{___781_metalness_mix_attenuated_out} %mystructfield{1}
local	float	___781_metalness_mix_attenuated_out.thickness	%read{2147483647,-1} %write{2394,2394} %mystruct{___781_metalness_mix_attenuated_out} %mystructfield{2}
local	float	___781_metalness_mix_attenuated_out.ior	%read{2147483647,-1} %write{2395,2395} %mystruct{___781_metalness_mix_attenuated_out} %mystructfield{3}
local	closure color	___781_coat_layer_out.response	%read{2406,2417} %write{2400,2406} %mystruct{___781_coat_layer_out} %mystructfield{0}
local	color	___781_coat_layer_out.throughput	%read{2408,2408} %write{2401,2408} %mystruct{___781_coat_layer_out} %mystructfield{1}
local	float	___781_coat_layer_out.thickness	%read{2147483647,-1} %write{2402,2402} %mystruct{___781_coat_layer_out} %mystructfield{2}
local	float	___781_coat_layer_out.ior	%read{2147483647,-1} %write{2403,2403} %mystruct{___781_coat_layer_out} %mystructfield{3}
local	closure color	___781_emission_edf_out	%read{2417,2417} %write{2410,2410}
local	closure color	___781_shader_constructor_out	%read{2423,2423} %write{2411,2422}
local	closure color	null_closure	%read{6,6} %write{0,0}
local	vector	geomprop_Nworld_out	%read{63,2328} %write{2,2}
local	vector	geomprop_Tworld_out	%read{125,361} %write{5,5}
local	closure color	SR_gold_out	%read{2424,2424} %write{6,2423}
const	int	$const1	0		%read{0,2412} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,275} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,5} %write{2147483647,-1}
temp	vector	$tmp1	%read{5,5} %write{3,3}
const	string	$const4	"NG_standard_surface_surfaceshader_100"		%read{7,7} %write{2147483647,-1}
const	float	$const5	0		%read{9,2416} %write{2147483647,-1}
const	string	$const6	"mx_roughness_anisotropy"		%read{11,338} %write{2147483647,-1}
temp	float	$tmp2	%read{14,14} %write{12,12}
const	float	$const7	9.99999994e-09		%read{15,2268} %write{2147483647,-1}
const	float	$const8	1		%read{14,2420} %write{2147483647,-1}
const	string	$const9	"clamp"		%read{13,2414} %write{2147483647,-1}
temp	float	$tmp3	%read{15,15} %write{14,14}
temp	int	$tmp4	%read{17,17} %write{16,16}
temp	float	$tmp5	%read{21,21} %write{20,20}
const	float	$const10	0.980000019		%read{19,346} %write{2147483647,-1}
temp	float	$tmp6	%read{20,20} %write{19,19}
temp	float	$tmp7	%read{22,22} %write{21,21}
temp	float	$tmp8	%read{24,24} %write{23,23}
const	int	$const11	360		%read{30,35} %write{2147483647,-1}
const	int	$const12	1		%read{38,1724} %write{2147483647,-1}
temp	float	$tmp9	%read{41,41} %write{40,40}
temp	float	$tmp10	%read{45,45} %write{42,42}
temp	float	$tmp11	%read{45,45} %write{43,43}
const	int	$const13	2		%read{44,2246} %write{2147483647,-1}
temp	float	$tmp12	%read{45,45} %write{44,44}
temp	float	$tmp13	%read{47,47} %write{46,46}
const	color	$const14	1 1 1		%read{48,2401} %write{2147483647,-1}
const	color	$const15	0 0 0		%read{53,2332} %write{2147483647,-1}
const	color	$const16	0.272228986 0.674081981 0.0536894985		%read{55,55} %write{2147483647,-1}
const	string	$const17	"mx_luminance_color3"		%read{54,54} %write{2147483647,-1}
temp	float	$tmp15	%read{56,56} %write{55,55}
const	vector	$const18	0 0 0		%read{57,357} %write{2147483647,-1}
const	string	$const19	"mx_rotate_vector3"		%read{58,204} %write{2147483647,-1}
const	string	$const20	"radians"		%read{59,205} %write{2147483647,-1}
const	float	$const21	3.14159274		%read{60,206} %write{2147483647,-1}
const	float	$const22	180		%read{60,206} %write{2147483647,-1}
temp	float	$tmp16	%read{61,61} %write{60,60}
const	string	$const23	"rotationMatrix"		%read{62,208} %write{2147483647,-1}
temp	float	$tmp17	%read{68,68} %write{67,67}
temp	float	$tmp18	%read{70,70} %write{68,68}
temp	float	$tmp19	%read{70,70} %write{69,69}
temp	float	$tmp20	%read{71,71} %write{70,70}
temp	float	$tmp21	%read{124,124} %write{71,71}
temp	float	$tmp22	%read{73,73} %write{72,72}
temp	float	$tmp23	%read{75,75} %write{73,73}
temp	float	$tmp24	%read{75,75} %write{74,74}
temp	float	$tmp25	%read{78,78} %write{75,75}
temp	float	$tmp26	%read{77,77} %write{76,76}
temp	float	$tmp27	%read{78,78} %write{77,77}
temp	float	$tmp28	%read{124,124} %write{78,78}
temp	float	$tmp29	%read{80,80} %write{79,79}
temp	float	$tmp30	%read{82,82} %write{80,80}
temp	float	$tmp31	%read{82,82} %write{81,81}
temp	float	$tmp32	%read{85,85} %write{82,82}
temp	float	$tmp33	%read{84,84} %write{83,83}
temp	float	$tmp34	%read{85,85} %write{84,84}
temp	float	$tmp35	%read{124,124} %write{85,85}
temp	float	$tmp36	%read{87,87} %write{86,86}
temp	float	$tmp37	%read{89,89} %write{87,87}
temp	float	$tmp38	%read{89,89} %write{88,88}
temp	float	$tmp39	%read{92,92} %write{89,89}
temp	float	$tmp40	%read{91,91} %write{90,90}
temp	float	$tmp41	%read{92,92} %write{91,91}
temp	float	$tmp42	%read{124,124} %write{92,92}
temp	float	$tmp43	%read{94,94} %write{93,93}
temp	float	$tmp44	%read{96,96} %write{94,94}
temp	float	$tmp45	%read{96,96} %write{95,95}
temp	float	$tmp46	%read{97,97} %write{96,96}
temp	float	$tmp47	%read{124,124} %write{97,97}
temp	float	$tmp48	%read{99,99} %write{98,98}
temp	float	$tmp49	%read{101,101} %write{99,99}
temp	float	$tmp50	%read{101,101} %write{100,100}
temp	float	$tmp51	%read{104,104} %write{101,101}
temp	float	$tmp52	%read{103,103} %write{102,102}
temp	float	$tmp53	%read{104,104} %write{103,103}
temp	float	$tmp54	%read{124,124} %write{104,104}
temp	float	$tmp55	%read{106,106} %write{105,105}
temp	float	$tmp56	%read{108,108} %write{106,106}
temp	float	$tmp57	%read{108,108} %write{107,107}
temp	float	$tmp58	%read{111,111} %write{108,108}
temp	float	$tmp59	%read{110,110} %write{109,109}
temp	float	$tmp60	%read{111,111} %write{110,110}
temp	float	$tmp61	%read{124,124} %write{111,111}
temp	float	$tmp62	%read{113,113} %write{112,112}
temp	float	$tmp63	%read{115,115} %write{113,113}
temp	float	$tmp64	%read{115,115} %write{114,114}
temp	float	$tmp65	%read{118,118} %write{115,115}
temp	float	$tmp66	%read{117,117} %write{116,116}
temp	float	$tmp67	%read{118,118} %write{117,117}
temp	float	$tmp68	%read{124,124} %write{118,118}
temp	float	$tmp69	%read{120,120} %write{119,119}
temp	float	$tmp70	%read{122,122} %write{120,120}
temp	float	$tmp71	%read{122,122} %write{121,121}
temp	float	$tmp72	%read{123,123} %write{122,122}
temp	float	$tmp73	%read{124,124} %write{123,123}
temp	float	$tmp74.x	%read{131,164} %write{125,125}
temp	float	$tmp74.y	%read{133,166} %write{126,126}
temp	float	$tmp74.z	%read{136,169} %write{127,127}
temp	float	$tmp74.w	%read{139,172} %write{128,128}
temp	float	$tmp75	%read{131,131} %write{130,130}
temp	float	$tmp76	%read{134,134} %write{131,131}
temp	float	$tmp77	%read{133,133} %write{132,132}
temp	float	$tmp78	%read{134,134} %write{133,133}
temp	float	$tmp79	%read{137,137} %write{134,134}
temp	float	$tmp80	%read{136,136} %write{135,135}
temp	float	$tmp81	%read{137,137} %write{136,136}
temp	float	$tmp82	%read{140,140} %write{137,137}
temp	float	$tmp83	%read{139,139} %write{138,138}
temp	float	$tmp84	%read{140,140} %write{139,139}
temp	float	$tmp85	%read{142,142} %write{141,141}
temp	float	$tmp86	%read{145,145} %write{142,142}
temp	float	$tmp87	%read{144,144} %write{143,143}
temp	float	$tmp88	%read{145,145} %write{144,144}
temp	float	$tmp89	%read{148,148} %write{145,145}
temp	float	$tmp90	%read{147,147} %write{146,146}
temp	float	$tmp91	%read{148,148} %write{147,147}
temp	float	$tmp92	%read{151,151} %write{148,148}
temp	float	$tmp93	%read{150,150} %write{149,149}
temp	float	$tmp94	%read{151,151} %write{150,150}
temp	float	$tmp95	%read{153,153} %write{152,152}
temp	float	$tmp96	%read{156,156} %write{153,153}
temp	float	$tmp97	%read{155,155} %write{154,154}
temp	float	$tmp98	%read{156,156} %write{155,155}
temp	float	$tmp99	%read{159,159} %write{156,156}
temp	float	$tmp100	%read{158,158} %write{157,157}
temp	float	$tmp101	%read{159,159} %write{158,158}
temp	float	$tmp102	%read{162,162} %write{159,159}
temp	float	$tmp103	%read{161,161} %write{160,160}
temp	float	$tmp104	%read{162,162} %write{161,161}
const	int	$const24	3		%read{163,317} %write{2147483647,-1}
temp	float	$tmp105	%read{164,164} %write{163,163}
temp	float	$tmp106	%read{167,167} %write{164,164}
temp	float	$tmp107	%read{166,166} %write{165,165}
temp	float	$tmp108	%read{167,167} %write{166,166}
temp	float	$tmp109	%read{170,170} %write{167,167}
temp	float	$tmp110	%read{169,169} %write{168,168}
temp	float	$tmp111	%read{170,170} %write{169,169}
temp	float	$tmp112	%read{173,173} %write{170,170}
temp	float	$tmp113	%read{172,172} %write{171,171}
temp	float	$tmp114	%read{173,173} %write{172,172}
const	string	$const25	"mx_artistic_ior"		%read{177,177} %write{2147483647,-1}
temp	color	$tmp115	%read{182,182} %write{178,178}
const	float	$const26	0.99000001		%read{179,179} %write{2147483647,-1}
temp	color	$tmp116	%read{181,181} %write{179,179}
temp	color	$tmp117	%read{182,182} %write{181,181}
temp	color	$tmp118	%read{186,186} %write{184,184}
temp	color	$tmp119	%read{186,186} %write{185,185}
temp	color	$tmp120	%read{189,189} %write{187,187}
temp	color	$tmp121	%read{189,189} %write{188,188}
temp	color	$tmp122	%read{194,194} %write{193,193}
temp	color	$tmp123	%read{196,196} %write{194,194}
temp	color	$tmp124	%read{196,196} %write{195,195}
temp	color	$tmp125	%read{198,198} %write{196,196}
temp	color	$tmp126	%read{198,198} %write{197,197}
temp	color	$tmp127	%read{200,200} %write{199,199}
temp	float	$tmp128	%read{207,207} %write{206,206}
temp	float	$tmp129	%read{214,214} %write{213,213}
temp	float	$tmp130	%read{216,216} %write{214,214}
temp	float	$tmp131	%read{216,216} %write{215,215}
temp	float	$tmp132	%read{217,217} %write{216,216}
temp	float	$tmp133	%read{270,270} %write{217,217}
temp	float	$tmp134	%read{219,219} %write{218,218}
temp	float	$tmp135	%read{221,221} %write{219,219}
temp	float	$tmp136	%read{221,221} %write{220,220}
temp	float	$tmp137	%read{224,224} %write{221,221}
temp	float	$tmp138	%read{223,223} %write{222,222}
temp	float	$tmp139	%read{224,224} %write{223,223}
temp	float	$tmp140	%read{270,270} %write{224,224}
temp	float	$tmp141	%read{226,226} %write{225,225}
temp	float	$tmp142	%read{228,228} %write{226,226}
temp	float	$tmp143	%read{228,228} %write{227,227}
temp	float	$tmp144	%read{231,231} %write{228,228}
temp	float	$tmp145	%read{230,230} %write{229,229}
temp	float	$tmp146	%read{231,231} %write{230,230}
temp	float	$tmp147	%read{270,270} %write{231,231}
temp	float	$tmp148	%read{233,233} %write{232,232}
temp	float	$tmp149	%read{235,235} %write{233,233}
temp	float	$tmp150	%read{235,235} %write{234,234}
temp	float	$tmp151	%read{238,238} %write{235,235}
temp	float	$tmp152	%read{237,237} %write{236,236}
temp	float	$tmp153	%read{238,238} %write{237,237}
temp	float	$tmp154	%read{270,270} %write{238,238}
temp	float	$tmp155	%read{240,240} %write{239,239}
temp	float	$tmp156	%read{242,242} %write{240,240}
temp	float	$tmp157	%read{242,242} %write{241,241}
temp	float	$tmp158	%read{243,243} %write{242,242}
temp	float	$tmp159	%read{270,270} %write{243,243}
temp	float	$tmp160	%read{245,245} %write{244,244}
temp	float	$tmp161	%read{247,247} %write{245,245}
temp	float	$tmp162	%read{247,247} %write{246,246}
temp	float	$tmp163	%read{250,250} %write{247,247}
temp	float	$tmp164	%read{249,249} %write{248,248}
temp	float	$tmp165	%read{250,250} %write{249,249}
temp	float	$tmp166	%read{270,270} %write{250,250}
temp	float	$tmp167	%read{252,252} %write{251,251}
temp	float	$tmp168	%read{254,254} %write{252,252}
temp	float	$tmp169	%read{254,254} %write{253,253}
temp	float	$tmp170	%read{257,257} %write{254,254}
temp	float	$tmp171	%read{256,256} %write{255,255}
temp	float	$tmp172	%read{257,257} %write{256,256}
temp	float	$tmp173	%read{270,270} %write{257,257}
temp	float	$tmp174	%read{259,259} %write{258,258}
temp	float	$tmp175	%read{261,261} %write{259,259}
temp	float	$tmp176	%read{261,261} %write{260,260}
temp	float	$tmp177	%read{264,264} %write{261,261}
temp	float	$tmp178	%read{263,263} %write{262,262}
temp	float	$tmp179	%read{264,264} %write{263,263}
temp	float	$tmp180	%read{270,270} %write{264,264}
temp	float	$tmp181	%read{266,266} %write{265,265}
temp	float	$tmp182	%read{268,268} %write{266,266}
temp	float	$tmp183	%read{268,268} %write{267,267}
temp	float	$tmp184	%read{269,269} %write{268,268}
temp	float	$tmp185	%read{270,270} %write{269,269}
temp	float	$tmp186.x	%read{277,310} %write{271,271}
temp	float	$tmp186.y	%read{279,312} %write{272,272}
temp	float	$tmp186.z	%read{282,315} %write{273,273}
temp	float	$tmp186.w	%read{285,318} %write{274,274}
temp	float	$tmp187	%read{277,277} %write{276,276}
temp	float	$tmp188	%read{280,280} %write{277,277}
temp	float	$tmp189	%read{279,279} %write{278,278}
temp	float	$tmp190	%read{280,280} %write{279,279}
temp	float	$tmp191	%read{283,283} %write{280,280}
temp	float	$tmp192	%read{282,282} %write{281,281}
temp	float	$tmp193	%read{283,283} %write{282,282}
temp	float	$tmp194	%read{286,286} %write{283,283}
temp	float	$tmp195	%read{285,285} %write{284,284}
temp	float	$tmp196	%read{286,286} %write{285,285}
temp	float	$tmp197	%read{288,288} %write{287,287}
temp	float	$tmp198	%read{291,291} %write{288,288}
temp	float	$tmp199	%read{290,290} %write{289,289}
temp	float	$tmp200	%read{291,291} %write{290,290}
temp	float	$tmp201	%read{294,294} %write{291,291}
temp	float	$tmp202	%read{293,293} %write{292,292}
temp	float	$tmp203	%read{294,294} %write{293,293}
temp	float	$tmp204	%read{297,297} %write{294,294}
temp	float	$tmp205	%read{296,296} %write{295,295}
temp	float	$tmp206	%read{297,297} %write{296,296}
temp	float	$tmp207	%read{299,299} %write{298,298}
temp	float	$tmp208	%read{302,302} %write{299,299}
temp	float	$tmp209	%read{301,301} %write{300,300}
temp	float	$tmp210	%read{302,302} %write{301,301}
temp	float	$tmp211	%read{305,305} %write{302,302}
temp	float	$tmp212	%read{304,304} %write{303,303}
temp	float	$tmp213	%read{305,305} %write{304,304}
temp	float	$tmp214	%read{308,308} %write{305,305}
temp	float	$tmp215	%read{307,307} %write{306,306}
temp	float	$tmp216	%read{308,308} %write{307,307}
temp	float	$tmp217	%read{310,310} %write{309,309}
temp	float	$tmp218	%read{313,313} %write{310,310}
temp	float	$tmp219	%read{312,312} %write{311,311}
temp	float	$tmp220	%read{313,313} %write{312,312}
temp	float	$tmp221	%read{316,316} %write{313,313}
temp	float	$tmp222	%read{315,315} %write{314,314}
temp	float	$tmp223	%read{316,316} %write{315,315}
temp	float	$tmp224	%read{319,319} %write{316,316}
temp	float	$tmp225	%read{318,318} %write{317,317}
temp	float	$tmp226	%read{319,319} %write{318,318}
const	string	$const27	"mx_add"		%read{329,329} %write{2147483647,-1}
temp	int	$tmp227	%read{333,333} %write{332,332}
temp	float	$tmp228	%read{341,341} %write{339,339}
temp	float	$tmp229	%read{342,342} %write{341,341}
temp	int	$tmp230	%read{344,344} %write{343,343}
temp	float	$tmp231	%read{348,348} %write{347,347}
temp	float	$tmp232	%read{347,347} %write{346,346}
temp	float	$tmp233	%read{349,349} %write{348,348}
temp	float	$tmp234	%read{351,351} %write{350,350}
temp	int	$tmp235	%read{359,359} %write{358,358}
const	string	$const28	"ggx"		%read{371,2246} %write{2147483647,-1}
const	string	$const29	"R"		%read{369,2004} %write{2147483647,-1}
const	string	$const30	"mx_dielectric_bsdf"		%read{368,1721} %write{2147483647,-1}
const	string	$const31	"T"		%read{369,2004} %write{2147483647,-1}
temp	int	$tmp237	%read{370,370} %write{369,369}
temp	closure color	$tmp238	%read{373,373} %write{371,371}
const	string	$const32	"microfacet"		%read{371,2246} %write{2147483647,-1}
temp	color	$tmp239	%read{373,373} %write{372,372}
temp	float	$tmp240	%read{381,381} %write{379,379}
temp	vector	$tmp241	%read{379,379} %write{378,378}
temp	float	$tmp242	%read{382,382} %write{381,381}
const	string	$const33	"mx_ior_to_f0"		%read{383,2012} %write{2147483647,-1}
temp	float	$tmp243	%read{386,386} %write{384,384}
temp	float	$tmp244	%read{386,386} %write{385,385}
temp	float	$tmp245	%read{388,388} %write{386,386}
const	string	$const34	"mx_square"		%read{387,2024} %write{2147483647,-1}
const	string	$const35	"mx_fresnel_schlick"		%read{389,1742} %write{2147483647,-1}
temp	float	$tmp246	%read{392,392} %write{390,390}
temp	float	$tmp247	%read{393,393} %write{392,392}
const	string	$const36	"mx_pow5"		%read{394,1747} %write{2147483647,-1}
temp	float	$tmp248	%read{399,399} %write{398,398}
temp	float	$tmp249	%read{398,398} %write{396,396}
temp	float	$tmp250	%read{401,401} %write{400,400}
temp	float	$tmp251	%read{402,402} %write{401,401}
temp	float	$tmp252.x	%read{411,411} %write{404,404}
temp	float	$tmp252.y	%read{414,414} %write{405,405}
temp	float	$tmp253.x	%read{410,410} %write{406,406}
temp	float	$tmp253.y	%read{413,413} %write{407,407}
temp	float	$tmp254	%read{411,411} %write{410,410}
temp	float	$tmp255	%read{414,414} %write{413,413}
const	string	$const37	"mx_average_alpha"		%read{415,1768} %write{2147483647,-1}
temp	float	$tmp256	%read{417,417} %write{416,416}
const	string	$const38	"mx_ggx_energy_compensation"		%read{418,1773} %write{2147483647,-1}
temp	color	$tmp257	%read{647,647} %write{419,419}
const	string	$const39	"mx_ggx_dir_albedo"		%read{421,2019} %write{2147483647,-1}
temp	color	$tmp258	%read{642,642} %write{422,422}
temp	color	$tmp259	%read{643,643} %write{423,423}
temp	float	$tmp260.x	%read{623,623} %write{594,594}
temp	float	$tmp260.y	%read{624,624} %write{595,595}
temp	float	$tmp260.z	%read{625,625} %write{596,596}
temp	float	$tmp260.w	%read{626,626} %write{597,597}
temp	float	$tmp261.x	%read{594,594} %write{565,565}
temp	float	$tmp261.y	%read{595,595} %write{566,566}
temp	float	$tmp261.z	%read{596,596} %write{567,567}
temp	float	$tmp261.w	%read{597,597} %write{568,568}
temp	float	$tmp262.x	%read{565,565} %write{536,536}
temp	float	$tmp262.y	%read{566,566} %write{537,537}
temp	float	$tmp262.z	%read{567,567} %write{538,538}
temp	float	$tmp262.w	%read{568,568} %write{539,539}
temp	float	$tmp263.x	%read{536,536} %write{517,517}
temp	float	$tmp263.y	%read{537,537} %write{518,518}
temp	float	$tmp263.z	%read{538,538} %write{519,519}
temp	float	$tmp263.w	%read{539,539} %write{520,520}
temp	float	$tmp264.x	%read{517,517} %write{498,498}
temp	float	$tmp264.y	%read{518,518} %write{499,499}
temp	float	$tmp264.z	%read{519,519} %write{500,500}
temp	float	$tmp264.w	%read{520,520} %write{501,501}
temp	float	$tmp265.x	%read{498,498} %write{469,469}
temp	float	$tmp265.y	%read{499,499} %write{470,470}
temp	float	$tmp265.z	%read{500,500} %write{471,471}
temp	float	$tmp265.w	%read{501,501} %write{472,472}
temp	float	$tmp266.x	%read{469,469} %write{450,450}
temp	float	$tmp266.y	%read{470,470} %write{451,451}
temp	float	$tmp266.z	%read{471,471} %write{452,452}
temp	float	$tmp266.w	%read{472,472} %write{453,453}
temp	float	$tmp267.x	%read{450,450} %write{431,431}
temp	float	$tmp267.y	%read{451,451} %write{432,432}
temp	float	$tmp267.z	%read{452,452} %write{433,433}
temp	float	$tmp267.w	%read{453,453} %write{434,434}
const	float	$const40	0.100299999		%read{431,2026} %write{2147483647,-1}
const	float	$const41	0.934499979		%read{432,2027} %write{2147483647,-1}
temp	float	$tmp268.x	%read{450,450} %write{445,445}
temp	float	$tmp268.y	%read{451,451} %write{446,446}
temp	float	$tmp268.z	%read{452,452} %write{447,447}
temp	float	$tmp268.w	%read{453,453} %write{448,448}
temp	float	$tmp269.x	%read{445,445} %write{435,435}
temp	float	$tmp269.y	%read{446,446} %write{436,436}
temp	float	$tmp269.z	%read{447,447} %write{437,437}
temp	float	$tmp269.w	%read{448,448} %write{438,438}
const	float	$const42	-0.630299985		%read{435,2030} %write{2147483647,-1}
const	float	$const43	-2.32299995		%read{436,2031} %write{2147483647,-1}
const	float	$const44	-1.76499999		%read{437,2032} %write{2147483647,-1}
const	float	$const45	0.228100002		%read{438,2033} %write{2147483647,-1}
const	string	$const46	"__operator__mul__"		%read{439,2212} %write{2147483647,-1}
temp	float	$tmp270.x	%read{445,445} %write{440,440}
temp	float	$tmp270.y	%read{446,446} %write{441,441}
temp	float	$tmp270.z	%read{447,447} %write{442,442}
temp	float	$tmp270.w	%read{448,448} %write{443,443}
const	string	$const47	"__operator__add__"		%read{449,2217} %write{2147483647,-1}
temp	float	$tmp271.x	%read{469,469} %write{464,464}
temp	float	$tmp271.y	%read{470,470} %write{465,465}
temp	float	$tmp271.z	%read{471,471} %write{466,466}
temp	float	$tmp271.w	%read{472,472} %write{467,467}
temp	float	$tmp272.x	%read{464,464} %write{454,454}
temp	float	$tmp272.y	%read{465,465} %write{455,455}
temp	float	$tmp272.z	%read{466,466} %write{456,456}
temp	float	$tmp272.w	%read{467,467} %write{457,457}
const	float	$const48	9.74800014		%read{454,2049} %write{2147483647,-1}
const	float	$const49	2.22900009		%read{455,2050} %write{2147483647,-1}
const	float	$const50	8.26299953		%read{456,2051} %write{2147483647,-1}
const	float	$const51	15.9399996		%read{457,2052} %write{2147483647,-1}
temp	float	$tmp273.x	%read{464,464} %write{459,459}
temp	float	$tmp273.y	%read{465,465} %write{460,460}
temp	float	$tmp273.z	%read{466,466} %write{461,461}
temp	float	$tmp273.w	%read{467,467} %write{462,462}
temp	float	$tmp274.x	%read{498,498} %write{493,493}
temp	float	$tmp274.y	%read{499,499} %write{494,494}
temp	float	$tmp274.z	%read{500,500} %write{495,495}
temp	float	$tmp274.w	%read{501,501} %write{496,496}
temp	float	$tmp275.x	%read{493,493} %write{483,483}
temp	float	$tmp275.y	%read{494,494} %write{484,484}
temp	float	$tmp275.z	%read{495,495} %write{485,485}
temp	float	$tmp275.w	%read{496,496} %write{486,486}
temp	float	$tmp276.x	%read{483,483} %write{473,473}
temp	float	$tmp276.y	%read{484,484} %write{474,474}
temp	float	$tmp276.z	%read{485,485} %write{475,475}
temp	float	$tmp276.w	%read{486,486} %write{476,476}
const	float	$const52	-2.03800011		%read{473,2068} %write{2147483647,-1}
const	float	$const53	-3.74799991		%read{474,2069} %write{2147483647,-1}
const	float	$const54	11.5299997		%read{475,2070} %write{2147483647,-1}
const	float	$const55	-55.8300018		%read{476,2071} %write{2147483647,-1}
temp	float	$tmp277.x	%read{483,483} %write{478,478}
temp	float	$tmp277.y	%read{484,484} %write{479,479}
temp	float	$tmp277.z	%read{485,485} %write{480,480}
temp	float	$tmp277.w	%read{486,486} %write{481,481}
temp	float	$tmp278.x	%read{493,493} %write{488,488}
temp	float	$tmp278.y	%read{494,494} %write{489,489}
temp	float	$tmp278.z	%read{495,495} %write{490,490}
temp	float	$tmp278.w	%read{496,496} %write{491,491}
temp	float	$tmp279.x	%read{517,517} %write{512,512}
temp	float	$tmp279.y	%read{518,518} %write{513,513}
temp	float	$tmp279.z	%read{519,519} %write{514,514}
temp	float	$tmp279.w	%read{520,520} %write{515,515}
temp	float	$tmp280.x	%read{512,512} %write{502,502}
temp	float	$tmp280.y	%read{513,513} %write{503,503}
temp	float	$tmp280.z	%read{514,514} %write{504,504}
temp	float	$tmp280.w	%read{515,515} %write{505,505}
const	float	$const56	29.3400002		%read{502,2097} %write{2147483647,-1}
const	float	$const57	1.42400002		%read{503,2098} %write{2147483647,-1}
const	float	$const58	28.9599991		%read{504,2099} %write{2147483647,-1}
const	float	$const59	13.0799999		%read{505,2100} %write{2147483647,-1}
temp	float	$tmp281.x	%read{512,512} %write{507,507}
temp	float	$tmp281.y	%read{513,513} %write{508,508}
temp	float	$tmp281.z	%read{514,514} %write{509,509}
temp	float	$tmp281.w	%read{515,515} %write{510,510}
temp	float	$tmp282.x	%read{536,536} %write{531,531}
temp	float	$tmp282.y	%read{537,537} %write{532,532}
temp	float	$tmp282.z	%read{538,538} %write{533,533}
temp	float	$tmp282.w	%read{539,539} %write{534,534}
temp	float	$tmp283.x	%read{531,531} %write{521,521}
temp	float	$tmp283.y	%read{532,532} %write{522,522}
temp	float	$tmp283.z	%read{533,533} %write{523,523}
temp	float	$tmp283.w	%read{534,534} %write{524,524}
const	float	$const60	-8.24499989		%read{521,2116} %write{2147483647,-1}
const	float	$const61	-0.768400013		%read{522,2117} %write{2147483647,-1}
const	float	$const62	-7.50699997		%read{523,2118} %write{2147483647,-1}
const	float	$const63	41.2599983		%read{524,2119} %write{2147483647,-1}
temp	float	$tmp284.x	%read{531,531} %write{526,526}
temp	float	$tmp284.y	%read{532,532} %write{527,527}
temp	float	$tmp284.z	%read{533,533} %write{528,528}
temp	float	$tmp284.w	%read{534,534} %write{529,529}
temp	float	$tmp285.x	%read{565,565} %write{560,560}
temp	float	$tmp285.y	%read{566,566} %write{561,561}
temp	float	$tmp285.z	%read{567,567} %write{562,562}
temp	float	$tmp285.w	%read{568,568} %write{563,563}
temp	float	$tmp286.x	%read{560,560} %write{550,550}
temp	float	$tmp286.y	%read{561,561} %write{551,551}
temp	float	$tmp286.z	%read{562,562} %write{552,552}
temp	float	$tmp286.w	%read{563,563} %write{553,553}
temp	float	$tmp287.x	%read{550,550} %write{540,540}
temp	float	$tmp287.y	%read{551,551} %write{541,541}
temp	float	$tmp287.z	%read{552,552} %write{542,542}
temp	float	$tmp287.w	%read{553,553} %write{543,543}
const	float	$const64	-26.4400005		%read{540,2135} %write{2147483647,-1}
const	float	$const65	1.43599999		%read{541,2136} %write{2147483647,-1}
const	float	$const66	-36.1100006		%read{542,2137} %write{2147483647,-1}
const	float	$const67	54.9000015		%read{543,2138} %write{2147483647,-1}
temp	float	$tmp288.x	%read{550,550} %write{545,545}
temp	float	$tmp288.y	%read{551,551} %write{546,546}
temp	float	$tmp288.z	%read{552,552} %write{547,547}
temp	float	$tmp288.w	%read{553,553} %write{548,548}
temp	float	$tmp289.x	%read{560,560} %write{555,555}
temp	float	$tmp289.y	%read{561,561} %write{556,556}
temp	float	$tmp289.z	%read{562,562} %write{557,557}
temp	float	$tmp289.w	%read{563,563} %write{558,558}
temp	float	$tmp290.x	%read{594,594} %write{589,589}
temp	float	$tmp290.y	%read{595,595} %write{590,590}
temp	float	$tmp290.z	%read{596,596} %write{591,591}
temp	float	$tmp290.w	%read{597,597} %write{592,592}
temp	float	$tmp291.x	%read{589,589} %write{579,579}
temp	float	$tmp291.y	%read{590,590} %write{580,580}
temp	float	$tmp291.z	%read{591,591} %write{581,581}
temp	float	$tmp291.w	%read{592,592} %write{582,582}
temp	float	$tmp292.x	%read{579,579} %write{569,569}
temp	float	$tmp292.y	%read{580,580} %write{570,570}
temp	float	$tmp292.z	%read{581,581} %write{571,571}
temp	float	$tmp292.w	%read{582,582} %write{572,572}
const	float	$const68	19.9899998		%read{569,2164} %write{2147483647,-1}
const	float	$const69	0.291299999		%read{570,2165} %write{2147483647,-1}
const	float	$const70	15.8599997		%read{571,2166} %write{2147483647,-1}
const	float	$const71	300.200012		%read{572,2167} %write{2147483647,-1}
temp	float	$tmp293.x	%read{579,579} %write{574,574}
temp	float	$tmp293.y	%read{580,580} %write{575,575}
temp	float	$tmp293.z	%read{581,581} %write{576,576}
temp	float	$tmp293.w	%read{582,582} %write{577,577}
temp	float	$tmp294.x	%read{589,589} %write{584,584}
temp	float	$tmp294.y	%read{590,590} %write{585,585}
temp	float	$tmp294.z	%read{591,591} %write{586,586}
temp	float	$tmp294.w	%read{592,592} %write{587,587}
temp	float	$tmp295.x	%read{623,623} %write{618,618}
temp	float	$tmp295.y	%read{624,624} %write{619,619}
temp	float	$tmp295.z	%read{625,625} %write{620,620}
temp	float	$tmp295.w	%read{626,626} %write{621,621}
temp	float	$tmp296.x	%read{618,618} %write{608,608}
temp	float	$tmp296.y	%read{619,619} %write{609,609}
temp	float	$tmp296.z	%read{620,620} %write{610,610}
temp	float	$tmp296.w	%read{621,621} %write{611,611}
temp	float	$tmp297.x	%read{608,608} %write{598,598}
temp	float	$tmp297.y	%read{609,609} %write{599,599}
temp	float	$tmp297.z	%read{610,610} %write{600,600}
temp	float	$tmp297.w	%read{611,611} %write{601,601}
const	float	$const72	-5.44799995		%read{598,2193} %write{2147483647,-1}
const	float	$const73	0.628600001		%read{599,2194} %write{2147483647,-1}
const	float	$const74	33.3699989		%read{600,2195} %write{2147483647,-1}
const	float	$const75	-285.100006		%read{601,2196} %write{2147483647,-1}
temp	float	$tmp298.x	%read{608,608} %write{603,603}
temp	float	$tmp298.y	%read{609,609} %write{604,604}
temp	float	$tmp298.z	%read{610,610} %write{605,605}
temp	float	$tmp298.w	%read{611,611} %write{606,606}
temp	float	$tmp299.x	%read{618,618} %write{613,613}
temp	float	$tmp299.y	%read{619,619} %write{614,614}
temp	float	$tmp299.z	%read{620,620} %write{615,615}
temp	float	$tmp299.w	%read{621,621} %write{616,616}
temp	float	$tmp300.x	%read{632,632} %write{627,627}
temp	float	$tmp300.y	%read{633,633} %write{628,628}
temp	float	$tmp301.x	%read{632,632} %write{629,629}
temp	float	$tmp301.y	%read{633,633} %write{630,630}
const	string	$const76	"__operator__div__"		%read{631,2226} %write{2147483647,-1}
temp	float	$tmp302	%read{636,636} %write{635,635}
temp	float	$tmp303	%read{640,640} %write{639,639}
temp	color	$tmp304	%read{644,644} %write{642,642}
temp	color	$tmp305	%read{644,644} %write{643,643}
temp	float	$tmp306	%read{647,647} %write{646,646}
temp	color	$tmp307	%read{648,648} %write{647,647}
temp	color	$tmp308	%read{649,649} %write{648,648}
temp	int	$tmp309	%read{652,652} %write{651,651}
temp	closure color	$tmp310	%read{656,656} %write{653,653}
temp	color	$tmp311	%read{655,655} %write{654,654}
temp	color	$tmp312	%read{656,656} %write{655,655}
temp	float	$tmp313	%read{888,888} %write{887,887}
temp	color	$tmp314	%read{884,884} %write{665,665}
temp	float	$tmp315	%read{665,665} %write{664,664}
temp	float	$tmp316	%read{662,662} %write{660,660}
temp	float	$tmp317	%read{662,662} %write{661,661}
temp	float	$tmp318	%read{664,664} %write{662,662}
temp	float	$tmp320.x	%read{865,865} %write{836,836}
temp	float	$tmp320.y	%read{866,866} %write{837,837}
temp	float	$tmp320.z	%read{867,867} %write{838,838}
temp	float	$tmp320.w	%read{868,868} %write{839,839}
temp	float	$tmp321.x	%read{836,836} %write{807,807}
temp	float	$tmp321.y	%read{837,837} %write{808,808}
temp	float	$tmp321.z	%read{838,838} %write{809,809}
temp	float	$tmp321.w	%read{839,839} %write{810,810}
temp	float	$tmp322.x	%read{807,807} %write{778,778}
temp	float	$tmp322.y	%read{808,808} %write{779,779}
temp	float	$tmp322.z	%read{809,809} %write{780,780}
temp	float	$tmp322.w	%read{810,810} %write{781,781}
temp	float	$tmp323.x	%read{778,778} %write{759,759}
temp	float	$tmp323.y	%read{779,779} %write{760,760}
temp	float	$tmp323.z	%read{780,780} %write{761,761}
temp	float	$tmp323.w	%read{781,781} %write{762,762}
temp	float	$tmp324.x	%read{759,759} %write{740,740}
temp	float	$tmp324.y	%read{760,760} %write{741,741}
temp	float	$tmp324.z	%read{761,761} %write{742,742}
temp	float	$tmp324.w	%read{762,762} %write{743,743}
temp	float	$tmp325.x	%read{740,740} %write{711,711}
temp	float	$tmp325.y	%read{741,741} %write{712,712}
temp	float	$tmp325.z	%read{742,742} %write{713,713}
temp	float	$tmp325.w	%read{743,743} %write{714,714}
temp	float	$tmp326.x	%read{711,711} %write{692,692}
temp	float	$tmp326.y	%read{712,712} %write{693,693}
temp	float	$tmp326.z	%read{713,713} %write{694,694}
temp	float	$tmp326.w	%read{714,714} %write{695,695}
temp	float	$tmp327.x	%read{692,692} %write{673,673}
temp	float	$tmp327.y	%read{693,693} %write{674,674}
temp	float	$tmp327.z	%read{694,694} %write{675,675}
temp	float	$tmp327.w	%read{695,695} %write{676,676}
temp	float	$tmp328.x	%read{692,692} %write{687,687}
temp	float	$tmp328.y	%read{693,693} %write{688,688}
temp	float	$tmp328.z	%read{694,694} %write{689,689}
temp	float	$tmp328.w	%read{695,695} %write{690,690}
temp	float	$tmp329.x	%read{687,687} %write{677,677}
temp	float	$tmp329.y	%read{688,688} %write{678,678}
temp	float	$tmp329.z	%read{689,689} %write{679,679}
temp	float	$tmp329.w	%read{690,690} %write{680,680}
temp	float	$tmp330.x	%read{687,687} %write{682,682}
temp	float	$tmp330.y	%read{688,688} %write{683,683}
temp	float	$tmp330.z	%read{689,689} %write{684,684}
temp	float	$tmp330.w	%read{690,690} %write{685,685}
temp	float	$tmp331.x	%read{711,711} %write{706,706}
temp	float	$tmp331.y	%read{712,712} %write{707,707}
temp	float	$tmp331.z	%read{713,713} %write{708,708}
temp	float	$tmp331.w	%read{714,714} %write{709,709}
temp	float	$tmp332.x	%read{706,706} %write{696,696}
temp	float	$tmp332.y	%read{707,707} %write{697,697}
temp	float	$tmp332.z	%read{708,708} %write{698,698}
temp	float	$tmp332.w	%read{709,709} %write{699,699}
temp	float	$tmp333.x	%read{706,706} %write{701,701}
temp	float	$tmp333.y	%read{707,707} %write{702,702}
temp	float	$tmp333.z	%read{708,708} %write{703,703}
temp	float	$tmp333.w	%read{709,709} %write{704,704}
temp	float	$tmp334.x	%read{740,740} %write{735,735}
temp	float	$tmp334.y	%read{741,741} %write{736,736}
temp	float	$tmp334.z	%read{742,742} %write{737,737}
temp	float	$tmp334.w	%read{743,743} %write{738,738}
temp	float	$tmp335.x	%read{735,735} %write{725,725}
temp	float	$tmp335.y	%read{736,736} %write{726,726}
temp	float	$tmp335.z	%read{737,737} %write{727,727}
temp	float	$tmp335.w	%read{738,738} %write{728,728}
temp	float	$tmp336.x	%read{725,725} %write{715,715}
temp	float	$tmp336.y	%read{726,726} %write{716,716}
temp	float	$tmp336.z	%read{727,727} %write{717,717}
temp	float	$tmp336.w	%read{728,728} %write{718,718}
temp	float	$tmp337.x	%read{725,725} %write{720,720}
temp	float	$tmp337.y	%read{726,726} %write{721,721}
temp	float	$tmp337.z	%read{727,727} %write{722,722}
temp	float	$tmp337.w	%read{728,728} %write{723,723}
temp	float	$tmp338.x	%read{735,735} %write{730,730}
temp	float	$tmp338.y	%read{736,736} %write{731,731}
temp	float	$tmp338.z	%read{737,737} %write{732,732}
temp	float	$tmp338.w	%read{738,738} %write{733,733}
temp	float	$tmp339.x	%read{759,759} %write{754,754}
temp	float	$tmp339.y	%read{760,760} %write{755,755}
temp	float	$tmp339.z	%read{761,761} %write{756,756}
temp	float	$tmp339.w	%read{762,762} %write{757,757}
temp	float	$tmp340.x	%read{754,754} %write{744,744}
temp	float	$tmp340.y	%read{755,755} %write{745,745}
temp	float	$tmp340.z	%read{756,756} %write{746,746}
temp	float	$tmp340.w	%read{757,757} %write{747,747}
temp	float	$tmp341.x	%read{754,754} %write{749,749}
temp	float	$tmp341.y	%read{755,755} %write{750,750}
temp	float	$tmp341.z	%read{756,756} %write{751,751}
temp	float	$tmp341.w	%read{757,757} %write{752,752}
temp	float	$tmp342.x	%read{778,778} %write{773,773}
temp	float	$tmp342.y	%read{779,779} %write{774,774}
temp	float	$tmp342.z	%read{780,780} %write{775,775}
temp	float	$tmp342.w	%read{781,781} %write{776,776}
temp	float	$tmp343.x	%read{773,773} %write{763,763}
temp	float	$tmp343.y	%read{774,774} %write{764,764}
temp	float	$tmp343.z	%read{775,775} %write{765,765}
temp	float	$tmp343.w	%read{776,776} %write{766,766}
temp	float	$tmp344.x	%read{773,773} %write{768,768}
temp	float	$tmp344.y	%read{774,774} %write{769,769}
temp	float	$tmp344.z	%read{775,775} %write{770,770}
temp	float	$tmp344.w	%read{776,776} %write{771,771}
temp	float	$tmp345.x	%read{807,807} %write{802,802}
temp	float	$tmp345.y	%read{808,808} %write{803,803}
temp	float	$tmp345.z	%read{809,809} %write{804,804}
temp	float	$tmp345.w	%read{810,810} %write{805,805}
temp	float	$tmp346.x	%read{802,802} %write{792,792}
temp	float	$tmp346.y	%read{803,803} %write{793,793}
temp	float	$tmp346.z	%read{804,804} %write{794,794}
temp	float	$tmp346.w	%read{805,805} %write{795,795}
temp	float	$tmp347.x	%read{792,792} %write{782,782}
temp	float	$tmp347.y	%read{793,793} %write{783,783}
temp	float	$tmp347.z	%read{794,794} %write{784,784}
temp	float	$tmp347.w	%read{795,795} %write{785,785}
temp	float	$tmp348.x	%read{792,792} %write{787,787}
temp	float	$tmp348.y	%read{793,793} %write{788,788}
temp	float	$tmp348.z	%read{794,794} %write{789,789}
temp	float	$tmp348.w	%read{795,795} %write{790,790}
temp	float	$tmp349.x	%read{802,802} %write{797,797}
temp	float	$tmp349.y	%read{803,803} %write{798,798}
temp	float	$tmp349.z	%read{804,804} %write{799,799}
temp	float	$tmp349.w	%read{805,805} %write{800,800}
temp	float	$tmp350.x	%read{836,836} %write{831,831}
temp	float	$tmp350.y	%read{837,837} %write{832,832}
temp	float	$tmp350.z	%read{838,838} %write{833,833}
temp	float	$tmp350.w	%read{839,839} %write{834,834}
temp	float	$tmp351.x	%read{831,831} %write{821,821}
temp	float	$tmp351.y	%read{832,832} %write{822,822}
temp	float	$tmp351.z	%read{833,833} %write{823,823}
temp	float	$tmp351.w	%read{834,834} %write{824,824}
temp	float	$tmp352.x	%read{821,821} %write{811,811}
temp	float	$tmp352.y	%read{822,822} %write{812,812}
temp	float	$tmp352.z	%read{823,823} %write{813,813}
temp	float	$tmp352.w	%read{824,824} %write{814,814}
temp	float	$tmp353.x	%read{821,821} %write{816,816}
temp	float	$tmp353.y	%read{822,822} %write{817,817}
temp	float	$tmp353.z	%read{823,823} %write{818,818}
temp	float	$tmp353.w	%read{824,824} %write{819,819}
temp	float	$tmp354.x	%read{831,831} %write{826,826}
temp	float	$tmp354.y	%read{832,832} %write{827,827}
temp	float	$tmp354.z	%read{833,833} %write{828,828}
temp	float	$tmp354.w	%read{834,834} %write{829,829}
temp	float	$tmp355.x	%read{865,865} %write{860,860}
temp	float	$tmp355.y	%read{866,866} %write{861,861}
temp	float	$tmp355.z	%read{867,867} %write{862,862}
temp	float	$tmp355.w	%read{868,868} %write{863,863}
temp	float	$tmp356.x	%read{860,860} %write{850,850}
temp	float	$tmp356.y	%read{861,861} %write{851,851}
temp	float	$tmp356.z	%read{862,862} %write{852,852}
temp	float	$tmp356.w	%read{863,863} %write{853,853}
temp	float	$tmp357.x	%read{850,850} %write{840,840}
temp	float	$tmp357.y	%read{851,851} %write{841,841}
temp	float	$tmp357.z	%read{852,852} %write{842,842}
temp	float	$tmp357.w	%read{853,853} %write{843,843}
temp	float	$tmp358.x	%read{850,850} %write{845,845}
temp	float	$tmp358.y	%read{851,851} %write{846,846}
temp	float	$tmp358.z	%read{852,852} %write{847,847}
temp	float	$tmp358.w	%read{853,853} %write{848,848}
temp	float	$tmp359.x	%read{860,860} %write{855,855}
temp	float	$tmp359.y	%read{861,861} %write{856,856}
temp	float	$tmp359.z	%read{862,862} %write{857,857}
temp	float	$tmp359.w	%read{863,863} %write{858,858}
temp	float	$tmp360.x	%read{874,874} %write{869,869}
temp	float	$tmp360.y	%read{875,875} %write{870,870}
temp	float	$tmp361.x	%read{874,874} %write{871,871}
temp	float	$tmp361.y	%read{875,875} %write{872,872}
temp	float	$tmp362	%read{878,878} %write{877,877}
temp	float	$tmp363	%read{882,882} %write{881,881}
temp	color	$tmp364	%read{886,886} %write{884,884}
temp	color	$tmp365	%read{886,886} %write{885,885}
temp	float	$tmp366	%read{890,890} %write{889,889}
temp	float	$tmp367	%read{891,891} %write{890,890}
temp	color	$tmp368	%read{892,892} %write{891,891}
temp	closure color	$tmp369	%read{896,896} %write{893,893}
temp	color	$tmp370	%read{895,895} %write{894,894}
temp	color	$tmp371	%read{896,896} %write{895,895}
const	string	$const77	"mx_conductor_bsdf"		%read{903,903} %write{2147483647,-1}
temp	int	$tmp372	%read{906,906} %write{905,905}
temp	float	$tmp373	%read{911,911} %write{910,910}
temp	vector	$tmp374	%read{910,910} %write{909,909}
const	string	$const78	"mx_fresnel_conductor"		%read{912,912} %write{2147483647,-1}
temp	vector	$tmp375	%read{916,916} %write{914,914}
temp	vector	$tmp376	%read{916,916} %write{915,915}
const	float	$const79	2		%read{917,917} %write{2147483647,-1}
temp	vector	$tmp377	%read{918,918} %write{917,917}
temp	vector	$tmp378	%read{921,921} %write{920,920}
temp	vector	$tmp379	%read{924,924} %write{922,922}
temp	vector	$tmp380	%read{924,924} %write{923,923}
temp	vector	$tmp381	%read{927,927} %write{925,925}
temp	vector	$tmp382	%read{927,927} %write{926,926}
const	float	$const80	0.5		%read{929,929} %write{2147483647,-1}
temp	vector	$tmp383	%read{929,929} %write{928,928}
temp	float	$tmp384.x	%read{938,938} %write{931,931}
temp	float	$tmp384.y	%read{941,941} %write{932,932}
temp	float	$tmp385.x	%read{937,937} %write{933,933}
temp	float	$tmp385.y	%read{940,940} %write{934,934}
temp	float	$tmp386	%read{938,938} %write{937,937}
temp	float	$tmp387	%read{941,941} %write{940,940}
temp	float	$tmp388	%read{944,944} %write{943,943}
temp	color	$tmp389	%read{1167,1167} %write{947,947}
temp	color	$tmp390	%read{1168,1168} %write{948,948}
temp	float	$tmp391.x	%read{1148,1148} %write{1119,1119}
temp	float	$tmp391.y	%read{1149,1149} %write{1120,1120}
temp	float	$tmp391.z	%read{1150,1150} %write{1121,1121}
temp	float	$tmp391.w	%read{1151,1151} %write{1122,1122}
temp	float	$tmp392.x	%read{1119,1119} %write{1090,1090}
temp	float	$tmp392.y	%read{1120,1120} %write{1091,1091}
temp	float	$tmp392.z	%read{1121,1121} %write{1092,1092}
temp	float	$tmp392.w	%read{1122,1122} %write{1093,1093}
temp	float	$tmp393.x	%read{1090,1090} %write{1061,1061}
temp	float	$tmp393.y	%read{1091,1091} %write{1062,1062}
temp	float	$tmp393.z	%read{1092,1092} %write{1063,1063}
temp	float	$tmp393.w	%read{1093,1093} %write{1064,1064}
temp	float	$tmp394.x	%read{1061,1061} %write{1042,1042}
temp	float	$tmp394.y	%read{1062,1062} %write{1043,1043}
temp	float	$tmp394.z	%read{1063,1063} %write{1044,1044}
temp	float	$tmp394.w	%read{1064,1064} %write{1045,1045}
temp	float	$tmp395.x	%read{1042,1042} %write{1023,1023}
temp	float	$tmp395.y	%read{1043,1043} %write{1024,1024}
temp	float	$tmp395.z	%read{1044,1044} %write{1025,1025}
temp	float	$tmp395.w	%read{1045,1045} %write{1026,1026}
temp	float	$tmp396.x	%read{1023,1023} %write{994,994}
temp	float	$tmp396.y	%read{1024,1024} %write{995,995}
temp	float	$tmp396.z	%read{1025,1025} %write{996,996}
temp	float	$tmp396.w	%read{1026,1026} %write{997,997}
temp	float	$tmp397.x	%read{994,994} %write{975,975}
temp	float	$tmp397.y	%read{995,995} %write{976,976}
temp	float	$tmp397.z	%read{996,996} %write{977,977}
temp	float	$tmp397.w	%read{997,997} %write{978,978}
temp	float	$tmp398.x	%read{975,975} %write{956,956}
temp	float	$tmp398.y	%read{976,976} %write{957,957}
temp	float	$tmp398.z	%read{977,977} %write{958,958}
temp	float	$tmp398.w	%read{978,978} %write{959,959}
temp	float	$tmp399.x	%read{975,975} %write{970,970}
temp	float	$tmp399.y	%read{976,976} %write{971,971}
temp	float	$tmp399.z	%read{977,977} %write{972,972}
temp	float	$tmp399.w	%read{978,978} %write{973,973}
temp	float	$tmp400.x	%read{970,970} %write{960,960}
temp	float	$tmp400.y	%read{971,971} %write{961,961}
temp	float	$tmp400.z	%read{972,972} %write{962,962}
temp	float	$tmp400.w	%read{973,973} %write{963,963}
temp	float	$tmp401.x	%read{970,970} %write{965,965}
temp	float	$tmp401.y	%read{971,971} %write{966,966}
temp	float	$tmp401.z	%read{972,972} %write{967,967}
temp	float	$tmp401.w	%read{973,973} %write{968,968}
temp	float	$tmp402.x	%read{994,994} %write{989,989}
temp	float	$tmp402.y	%read{995,995} %write{990,990}
temp	float	$tmp402.z	%read{996,996} %write{991,991}
temp	float	$tmp402.w	%read{997,997} %write{992,992}
temp	float	$tmp403.x	%read{989,989} %write{979,979}
temp	float	$tmp403.y	%read{990,990} %write{980,980}
temp	float	$tmp403.z	%read{991,991} %write{981,981}
temp	float	$tmp403.w	%read{992,992} %write{982,982}
temp	float	$tmp404.x	%read{989,989} %write{984,984}
temp	float	$tmp404.y	%read{990,990} %write{985,985}
temp	float	$tmp404.z	%read{991,991} %write{986,986}
temp	float	$tmp404.w	%read{992,992} %write{987,987}
temp	float	$tmp405.x	%read{1023,1023} %write{1018,1018}
temp	float	$tmp405.y	%read{1024,1024} %write{1019,1019}
temp	float	$tmp405.z	%read{1025,1025} %write{1020,1020}
temp	float	$tmp405.w	%read{1026,1026} %write{1021,1021}
temp	float	$tmp406.x	%read{1018,1018} %write{1008,1008}
temp	float	$tmp406.y	%read{1019,1019} %write{1009,1009}
temp	float	$tmp406.z	%read{1020,1020} %write{1010,1010}
temp	float	$tmp406.w	%read{1021,1021} %write{1011,1011}
temp	float	$tmp407.x	%read{1008,1008} %write{998,998}
temp	float	$tmp407.y	%read{1009,1009} %write{999,999}
temp	float	$tmp407.z	%read{1010,1010} %write{1000,1000}
temp	float	$tmp407.w	%read{1011,1011} %write{1001,1001}
temp	float	$tmp408.x	%read{1008,1008} %write{1003,1003}
temp	float	$tmp408.y	%read{1009,1009} %write{1004,1004}
temp	float	$tmp408.z	%read{1010,1010} %write{1005,1005}
temp	float	$tmp408.w	%read{1011,1011} %write{1006,1006}
temp	float	$tmp409.x	%read{1018,1018} %write{1013,1013}
temp	float	$tmp409.y	%read{1019,1019} %write{1014,1014}
temp	float	$tmp409.z	%read{1020,1020} %write{1015,1015}
temp	float	$tmp409.w	%read{1021,1021} %write{1016,1016}
temp	float	$tmp410.x	%read{1042,1042} %write{1037,1037}
temp	float	$tmp410.y	%read{1043,1043} %write{1038,1038}
temp	float	$tmp410.z	%read{1044,1044} %write{1039,1039}
temp	float	$tmp410.w	%read{1045,1045} %write{1040,1040}
temp	float	$tmp411.x	%read{1037,1037} %write{1027,1027}
temp	float	$tmp411.y	%read{1038,1038} %write{1028,1028}
temp	float	$tmp411.z	%read{1039,1039} %write{1029,1029}
temp	float	$tmp411.w	%read{1040,1040} %write{1030,1030}
temp	float	$tmp412.x	%read{1037,1037} %write{1032,1032}
temp	float	$tmp412.y	%read{1038,1038} %write{1033,1033}
temp	float	$tmp412.z	%read{1039,1039} %write{1034,1034}
temp	float	$tmp412.w	%read{1040,1040} %write{1035,1035}
temp	float	$tmp413.x	%read{1061,1061} %write{1056,1056}
temp	float	$tmp413.y	%read{1062,1062} %write{1057,1057}
temp	float	$tmp413.z	%read{1063,1063} %write{1058,1058}
temp	float	$tmp413.w	%read{1064,1064} %write{1059,1059}
temp	float	$tmp414.x	%read{1056,1056} %write{1046,1046}
temp	float	$tmp414.y	%read{1057,1057} %write{1047,1047}
temp	float	$tmp414.z	%read{1058,1058} %write{1048,1048}
temp	float	$tmp414.w	%read{1059,1059} %write{1049,1049}
temp	float	$tmp415.x	%read{1056,1056} %write{1051,1051}
temp	float	$tmp415.y	%read{1057,1057} %write{1052,1052}
temp	float	$tmp415.z	%read{1058,1058} %write{1053,1053}
temp	float	$tmp415.w	%read{1059,1059} %write{1054,1054}
temp	float	$tmp416.x	%read{1090,1090} %write{1085,1085}
temp	float	$tmp416.y	%read{1091,1091} %write{1086,1086}
temp	float	$tmp416.z	%read{1092,1092} %write{1087,1087}
temp	float	$tmp416.w	%read{1093,1093} %write{1088,1088}
temp	float	$tmp417.x	%read{1085,1085} %write{1075,1075}
temp	float	$tmp417.y	%read{1086,1086} %write{1076,1076}
temp	float	$tmp417.z	%read{1087,1087} %write{1077,1077}
temp	float	$tmp417.w	%read{1088,1088} %write{1078,1078}
temp	float	$tmp418.x	%read{1075,1075} %write{1065,1065}
temp	float	$tmp418.y	%read{1076,1076} %write{1066,1066}
temp	float	$tmp418.z	%read{1077,1077} %write{1067,1067}
temp	float	$tmp418.w	%read{1078,1078} %write{1068,1068}
temp	float	$tmp419.x	%read{1075,1075} %write{1070,1070}
temp	float	$tmp419.y	%read{1076,1076} %write{1071,1071}
temp	float	$tmp419.z	%read{1077,1077} %write{1072,1072}
temp	float	$tmp419.w	%read{1078,1078} %write{1073,1073}
temp	float	$tmp420.x	%read{1085,1085} %write{1080,1080}
temp	float	$tmp420.y	%read{1086,1086} %write{1081,1081}
temp	float	$tmp420.z	%read{1087,1087} %write{1082,1082}
temp	float	$tmp420.w	%read{1088,1088} %write{1083,1083}
temp	float	$tmp421.x	%read{1119,1119} %write{1114,1114}
temp	float	$tmp421.y	%read{1120,1120} %write{1115,1115}
temp	float	$tmp421.z	%read{1121,1121} %write{1116,1116}
temp	float	$tmp421.w	%read{1122,1122} %write{1117,1117}
temp	float	$tmp422.x	%read{1114,1114} %write{1104,1104}
temp	float	$tmp422.y	%read{1115,1115} %write{1105,1105}
temp	float	$tmp422.z	%read{1116,1116} %write{1106,1106}
temp	float	$tmp422.w	%read{1117,1117} %write{1107,1107}
temp	float	$tmp423.x	%read{1104,1104} %write{1094,1094}
temp	float	$tmp423.y	%read{1105,1105} %write{1095,1095}
temp	float	$tmp423.z	%read{1106,1106} %write{1096,1096}
temp	float	$tmp423.w	%read{1107,1107} %write{1097,1097}
temp	float	$tmp424.x	%read{1104,1104} %write{1099,1099}
temp	float	$tmp424.y	%read{1105,1105} %write{1100,1100}
temp	float	$tmp424.z	%read{1106,1106} %write{1101,1101}
temp	float	$tmp424.w	%read{1107,1107} %write{1102,1102}
temp	float	$tmp425.x	%read{1114,1114} %write{1109,1109}
temp	float	$tmp425.y	%read{1115,1115} %write{1110,1110}
temp	float	$tmp425.z	%read{1116,1116} %write{1111,1111}
temp	float	$tmp425.w	%read{1117,1117} %write{1112,1112}
temp	float	$tmp426.x	%read{1148,1148} %write{1143,1143}
temp	float	$tmp426.y	%read{1149,1149} %write{1144,1144}
temp	float	$tmp426.z	%read{1150,1150} %write{1145,1145}
temp	float	$tmp426.w	%read{1151,1151} %write{1146,1146}
temp	float	$tmp427.x	%read{1143,1143} %write{1133,1133}
temp	float	$tmp427.y	%read{1144,1144} %write{1134,1134}
temp	float	$tmp427.z	%read{1145,1145} %write{1135,1135}
temp	float	$tmp427.w	%read{1146,1146} %write{1136,1136}
temp	float	$tmp428.x	%read{1133,1133} %write{1123,1123}
temp	float	$tmp428.y	%read{1134,1134} %write{1124,1124}
temp	float	$tmp428.z	%read{1135,1135} %write{1125,1125}
temp	float	$tmp428.w	%read{1136,1136} %write{1126,1126}
temp	float	$tmp429.x	%read{1133,1133} %write{1128,1128}
temp	float	$tmp429.y	%read{1134,1134} %write{1129,1129}
temp	float	$tmp429.z	%read{1135,1135} %write{1130,1130}
temp	float	$tmp429.w	%read{1136,1136} %write{1131,1131}
temp	float	$tmp430.x	%read{1143,1143} %write{1138,1138}
temp	float	$tmp430.y	%read{1144,1144} %write{1139,1139}
temp	float	$tmp430.z	%read{1145,1145} %write{1140,1140}
temp	float	$tmp430.w	%read{1146,1146} %write{1141,1141}
temp	float	$tmp431.x	%read{1157,1157} %write{1152,1152}
temp	float	$tmp431.y	%read{1158,1158} %write{1153,1153}
temp	float	$tmp432.x	%read{1157,1157} %write{1154,1154}
temp	float	$tmp432.y	%read{1158,1158} %write{1155,1155}
temp	float	$tmp433	%read{1161,1161} %write{1160,1160}
temp	float	$tmp434	%read{1165,1165} %write{1164,1164}
temp	color	$tmp435	%read{1169,1169} %write{1167,1167}
temp	color	$tmp436	%read{1169,1169} %write{1168,1168}
temp	float	$tmp437	%read{1172,1172} %write{1171,1171}
temp	color	$tmp438	%read{1173,1173} %write{1172,1172}
temp	color	$tmp439	%read{1174,1174} %write{1173,1173}
temp	closure color	$tmp440	%read{1178,1178} %write{1175,1175}
temp	color	$tmp441	%read{1177,1177} %write{1176,1176}
temp	color	$tmp442	%read{1178,1178} %write{1177,1177}
temp	int	$tmp443	%read{1188,1188} %write{1187,1187}
temp	closure color	$tmp444	%read{1191,1191} %write{1189,1189}
temp	color	$tmp445	%read{1191,1191} %write{1190,1190}
temp	float	$tmp446	%read{1199,1199} %write{1197,1197}
temp	vector	$tmp447	%read{1197,1197} %write{1196,1196}
temp	float	$tmp448	%read{1200,1200} %write{1199,1199}
temp	float	$tmp449	%read{1204,1204} %write{1202,1202}
temp	float	$tmp450	%read{1204,1204} %write{1203,1203}
temp	float	$tmp451	%read{1206,1206} %write{1204,1204}
temp	float	$tmp452	%read{1210,1210} %write{1208,1208}
temp	float	$tmp453	%read{1211,1211} %write{1210,1210}
temp	float	$tmp454	%read{1217,1217} %write{1216,1216}
temp	float	$tmp455	%read{1216,1216} %write{1214,1214}
temp	float	$tmp456	%read{1219,1219} %write{1218,1218}
temp	float	$tmp457	%read{1220,1220} %write{1219,1219}
temp	float	$tmp458.x	%read{1229,1229} %write{1222,1222}
temp	float	$tmp458.y	%read{1232,1232} %write{1223,1223}
temp	float	$tmp459.x	%read{1228,1228} %write{1224,1224}
temp	float	$tmp459.y	%read{1231,1231} %write{1225,1225}
temp	float	$tmp460	%read{1229,1229} %write{1228,1228}
temp	float	$tmp461	%read{1232,1232} %write{1231,1231}
temp	float	$tmp462	%read{1235,1235} %write{1234,1234}
temp	color	$tmp463	%read{1465,1465} %write{1237,1237}
temp	color	$tmp464	%read{1460,1460} %write{1240,1240}
temp	color	$tmp465	%read{1461,1461} %write{1241,1241}
temp	float	$tmp466.x	%read{1441,1441} %write{1412,1412}
temp	float	$tmp466.y	%read{1442,1442} %write{1413,1413}
temp	float	$tmp466.z	%read{1443,1443} %write{1414,1414}
temp	float	$tmp466.w	%read{1444,1444} %write{1415,1415}
temp	float	$tmp467.x	%read{1412,1412} %write{1383,1383}
temp	float	$tmp467.y	%read{1413,1413} %write{1384,1384}
temp	float	$tmp467.z	%read{1414,1414} %write{1385,1385}
temp	float	$tmp467.w	%read{1415,1415} %write{1386,1386}
temp	float	$tmp468.x	%read{1383,1383} %write{1354,1354}
temp	float	$tmp468.y	%read{1384,1384} %write{1355,1355}
temp	float	$tmp468.z	%read{1385,1385} %write{1356,1356}
temp	float	$tmp468.w	%read{1386,1386} %write{1357,1357}
temp	float	$tmp469.x	%read{1354,1354} %write{1335,1335}
temp	float	$tmp469.y	%read{1355,1355} %write{1336,1336}
temp	float	$tmp469.z	%read{1356,1356} %write{1337,1337}
temp	float	$tmp469.w	%read{1357,1357} %write{1338,1338}
temp	float	$tmp470.x	%read{1335,1335} %write{1316,1316}
temp	float	$tmp470.y	%read{1336,1336} %write{1317,1317}
temp	float	$tmp470.z	%read{1337,1337} %write{1318,1318}
temp	float	$tmp470.w	%read{1338,1338} %write{1319,1319}
temp	float	$tmp471.x	%read{1316,1316} %write{1287,1287}
temp	float	$tmp471.y	%read{1317,1317} %write{1288,1288}
temp	float	$tmp471.z	%read{1318,1318} %write{1289,1289}
temp	float	$tmp471.w	%read{1319,1319} %write{1290,1290}
temp	float	$tmp472.x	%read{1287,1287} %write{1268,1268}
temp	float	$tmp472.y	%read{1288,1288} %write{1269,1269}
temp	float	$tmp472.z	%read{1289,1289} %write{1270,1270}
temp	float	$tmp472.w	%read{1290,1290} %write{1271,1271}
temp	float	$tmp473.x	%read{1268,1268} %write{1249,1249}
temp	float	$tmp473.y	%read{1269,1269} %write{1250,1250}
temp	float	$tmp473.z	%read{1270,1270} %write{1251,1251}
temp	float	$tmp473.w	%read{1271,1271} %write{1252,1252}
temp	float	$tmp474.x	%read{1268,1268} %write{1263,1263}
temp	float	$tmp474.y	%read{1269,1269} %write{1264,1264}
temp	float	$tmp474.z	%read{1270,1270} %write{1265,1265}
temp	float	$tmp474.w	%read{1271,1271} %write{1266,1266}
temp	float	$tmp475.x	%read{1263,1263} %write{1253,1253}
temp	float	$tmp475.y	%read{1264,1264} %write{1254,1254}
temp	float	$tmp475.z	%read{1265,1265} %write{1255,1255}
temp	float	$tmp475.w	%read{1266,1266} %write{1256,1256}
temp	float	$tmp476.x	%read{1263,1263} %write{1258,1258}
temp	float	$tmp476.y	%read{1264,1264} %write{1259,1259}
temp	float	$tmp476.z	%read{1265,1265} %write{1260,1260}
temp	float	$tmp476.w	%read{1266,1266} %write{1261,1261}
temp	float	$tmp477.x	%read{1287,1287} %write{1282,1282}
temp	float	$tmp477.y	%read{1288,1288} %write{1283,1283}
temp	float	$tmp477.z	%read{1289,1289} %write{1284,1284}
temp	float	$tmp477.w	%read{1290,1290} %write{1285,1285}
temp	float	$tmp478.x	%read{1282,1282} %write{1272,1272}
temp	float	$tmp478.y	%read{1283,1283} %write{1273,1273}
temp	float	$tmp478.z	%read{1284,1284} %write{1274,1274}
temp	float	$tmp478.w	%read{1285,1285} %write{1275,1275}
temp	float	$tmp479.x	%read{1282,1282} %write{1277,1277}
temp	float	$tmp479.y	%read{1283,1283} %write{1278,1278}
temp	float	$tmp479.z	%read{1284,1284} %write{1279,1279}
temp	float	$tmp479.w	%read{1285,1285} %write{1280,1280}
temp	float	$tmp480.x	%read{1316,1316} %write{1311,1311}
temp	float	$tmp480.y	%read{1317,1317} %write{1312,1312}
temp	float	$tmp480.z	%read{1318,1318} %write{1313,1313}
temp	float	$tmp480.w	%read{1319,1319} %write{1314,1314}
temp	float	$tmp481.x	%read{1311,1311} %write{1301,1301}
temp	float	$tmp481.y	%read{1312,1312} %write{1302,1302}
temp	float	$tmp481.z	%read{1313,1313} %write{1303,1303}
temp	float	$tmp481.w	%read{1314,1314} %write{1304,1304}
temp	float	$tmp482.x	%read{1301,1301} %write{1291,1291}
temp	float	$tmp482.y	%read{1302,1302} %write{1292,1292}
temp	float	$tmp482.z	%read{1303,1303} %write{1293,1293}
temp	float	$tmp482.w	%read{1304,1304} %write{1294,1294}
temp	float	$tmp483.x	%read{1301,1301} %write{1296,1296}
temp	float	$tmp483.y	%read{1302,1302} %write{1297,1297}
temp	float	$tmp483.z	%read{1303,1303} %write{1298,1298}
temp	float	$tmp483.w	%read{1304,1304} %write{1299,1299}
temp	float	$tmp484.x	%read{1311,1311} %write{1306,1306}
temp	float	$tmp484.y	%read{1312,1312} %write{1307,1307}
temp	float	$tmp484.z	%read{1313,1313} %write{1308,1308}
temp	float	$tmp484.w	%read{1314,1314} %write{1309,1309}
temp	float	$tmp485.x	%read{1335,1335} %write{1330,1330}
temp	float	$tmp485.y	%read{1336,1336} %write{1331,1331}
temp	float	$tmp485.z	%read{1337,1337} %write{1332,1332}
temp	float	$tmp485.w	%read{1338,1338} %write{1333,1333}
temp	float	$tmp486.x	%read{1330,1330} %write{1320,1320}
temp	float	$tmp486.y	%read{1331,1331} %write{1321,1321}
temp	float	$tmp486.z	%read{1332,1332} %write{1322,1322}
temp	float	$tmp486.w	%read{1333,1333} %write{1323,1323}
temp	float	$tmp487.x	%read{1330,1330} %write{1325,1325}
temp	float	$tmp487.y	%read{1331,1331} %write{1326,1326}
temp	float	$tmp487.z	%read{1332,1332} %write{1327,1327}
temp	float	$tmp487.w	%read{1333,1333} %write{1328,1328}
temp	float	$tmp488.x	%read{1354,1354} %write{1349,1349}
temp	float	$tmp488.y	%read{1355,1355} %write{1350,1350}
temp	float	$tmp488.z	%read{1356,1356} %write{1351,1351}
temp	float	$tmp488.w	%read{1357,1357} %write{1352,1352}
temp	float	$tmp489.x	%read{1349,1349} %write{1339,1339}
temp	float	$tmp489.y	%read{1350,1350} %write{1340,1340}
temp	float	$tmp489.z	%read{1351,1351} %write{1341,1341}
temp	float	$tmp489.w	%read{1352,1352} %write{1342,1342}
temp	float	$tmp490.x	%read{1349,1349} %write{1344,1344}
temp	float	$tmp490.y	%read{1350,1350} %write{1345,1345}
temp	float	$tmp490.z	%read{1351,1351} %write{1346,1346}
temp	float	$tmp490.w	%read{1352,1352} %write{1347,1347}
temp	float	$tmp491.x	%read{1383,1383} %write{1378,1378}
temp	float	$tmp491.y	%read{1384,1384} %write{1379,1379}
temp	float	$tmp491.z	%read{1385,1385} %write{1380,1380}
temp	float	$tmp491.w	%read{1386,1386} %write{1381,1381}
temp	float	$tmp492.x	%read{1378,1378} %write{1368,1368}
temp	float	$tmp492.y	%read{1379,1379} %write{1369,1369}
temp	float	$tmp492.z	%read{1380,1380} %write{1370,1370}
temp	float	$tmp492.w	%read{1381,1381} %write{1371,1371}
temp	float	$tmp493.x	%read{1368,1368} %write{1358,1358}
temp	float	$tmp493.y	%read{1369,1369} %write{1359,1359}
temp	float	$tmp493.z	%read{1370,1370} %write{1360,1360}
temp	float	$tmp493.w	%read{1371,1371} %write{1361,1361}
temp	float	$tmp494.x	%read{1368,1368} %write{1363,1363}
temp	float	$tmp494.y	%read{1369,1369} %write{1364,1364}
temp	float	$tmp494.z	%read{1370,1370} %write{1365,1365}
temp	float	$tmp494.w	%read{1371,1371} %write{1366,1366}
temp	float	$tmp495.x	%read{1378,1378} %write{1373,1373}
temp	float	$tmp495.y	%read{1379,1379} %write{1374,1374}
temp	float	$tmp495.z	%read{1380,1380} %write{1375,1375}
temp	float	$tmp495.w	%read{1381,1381} %write{1376,1376}
temp	float	$tmp496.x	%read{1412,1412} %write{1407,1407}
temp	float	$tmp496.y	%read{1413,1413} %write{1408,1408}
temp	float	$tmp496.z	%read{1414,1414} %write{1409,1409}
temp	float	$tmp496.w	%read{1415,1415} %write{1410,1410}
temp	float	$tmp497.x	%read{1407,1407} %write{1397,1397}
temp	float	$tmp497.y	%read{1408,1408} %write{1398,1398}
temp	float	$tmp497.z	%read{1409,1409} %write{1399,1399}
temp	float	$tmp497.w	%read{1410,1410} %write{1400,1400}
temp	float	$tmp498.x	%read{1397,1397} %write{1387,1387}
temp	float	$tmp498.y	%read{1398,1398} %write{1388,1388}
temp	float	$tmp498.z	%read{1399,1399} %write{1389,1389}
temp	float	$tmp498.w	%read{1400,1400} %write{1390,1390}
temp	float	$tmp499.x	%read{1397,1397} %write{1392,1392}
temp	float	$tmp499.y	%read{1398,1398} %write{1393,1393}
temp	float	$tmp499.z	%read{1399,1399} %write{1394,1394}
temp	float	$tmp499.w	%read{1400,1400} %write{1395,1395}
temp	float	$tmp500.x	%read{1407,1407} %write{1402,1402}
temp	float	$tmp500.y	%read{1408,1408} %write{1403,1403}
temp	float	$tmp500.z	%read{1409,1409} %write{1404,1404}
temp	float	$tmp500.w	%read{1410,1410} %write{1405,1405}
temp	float	$tmp501.x	%read{1441,1441} %write{1436,1436}
temp	float	$tmp501.y	%read{1442,1442} %write{1437,1437}
temp	float	$tmp501.z	%read{1443,1443} %write{1438,1438}
temp	float	$tmp501.w	%read{1444,1444} %write{1439,1439}
temp	float	$tmp502.x	%read{1436,1436} %write{1426,1426}
temp	float	$tmp502.y	%read{1437,1437} %write{1427,1427}
temp	float	$tmp502.z	%read{1438,1438} %write{1428,1428}
temp	float	$tmp502.w	%read{1439,1439} %write{1429,1429}
temp	float	$tmp503.x	%read{1426,1426} %write{1416,1416}
temp	float	$tmp503.y	%read{1427,1427} %write{1417,1417}
temp	float	$tmp503.z	%read{1428,1428} %write{1418,1418}
temp	float	$tmp503.w	%read{1429,1429} %write{1419,1419}
temp	float	$tmp504.x	%read{1426,1426} %write{1421,1421}
temp	float	$tmp504.y	%read{1427,1427} %write{1422,1422}
temp	float	$tmp504.z	%read{1428,1428} %write{1423,1423}
temp	float	$tmp504.w	%read{1429,1429} %write{1424,1424}
temp	float	$tmp505.x	%read{1436,1436} %write{1431,1431}
temp	float	$tmp505.y	%read{1437,1437} %write{1432,1432}
temp	float	$tmp505.z	%read{1438,1438} %write{1433,1433}
temp	float	$tmp505.w	%read{1439,1439} %write{1434,1434}
temp	float	$tmp506.x	%read{1450,1450} %write{1445,1445}
temp	float	$tmp506.y	%read{1451,1451} %write{1446,1446}
temp	float	$tmp507.x	%read{1450,1450} %write{1447,1447}
temp	float	$tmp507.y	%read{1451,1451} %write{1448,1448}
temp	float	$tmp508	%read{1454,1454} %write{1453,1453}
temp	float	$tmp509	%read{1458,1458} %write{1457,1457}
temp	color	$tmp510	%read{1462,1462} %write{1460,1460}
temp	color	$tmp511	%read{1462,1462} %write{1461,1461}
temp	float	$tmp512	%read{1465,1465} %write{1464,1464}
temp	color	$tmp513	%read{1466,1466} %write{1465,1465}
temp	color	$tmp514	%read{1467,1467} %write{1466,1466}
temp	int	$tmp515	%read{1470,1470} %write{1469,1469}
temp	closure color	$tmp516	%read{1474,1474} %write{1471,1471}
temp	color	$tmp517	%read{1473,1473} %write{1472,1472}
temp	color	$tmp518	%read{1474,1474} %write{1473,1473}
temp	float	$tmp519	%read{1706,1706} %write{1705,1705}
temp	color	$tmp520	%read{1702,1702} %write{1483,1483}
temp	float	$tmp521	%read{1483,1483} %write{1482,1482}
temp	float	$tmp522	%read{1480,1480} %write{1478,1478}
temp	float	$tmp523	%read{1480,1480} %write{1479,1479}
temp	float	$tmp524	%read{1482,1482} %write{1480,1480}
temp	float	$tmp526.x	%read{1683,1683} %write{1654,1654}
temp	float	$tmp526.y	%read{1684,1684} %write{1655,1655}
temp	float	$tmp526.z	%read{1685,1685} %write{1656,1656}
temp	float	$tmp526.w	%read{1686,1686} %write{1657,1657}
temp	float	$tmp527.x	%read{1654,1654} %write{1625,1625}
temp	float	$tmp527.y	%read{1655,1655} %write{1626,1626}
temp	float	$tmp527.z	%read{1656,1656} %write{1627,1627}
temp	float	$tmp527.w	%read{1657,1657} %write{1628,1628}
temp	float	$tmp528.x	%read{1625,1625} %write{1596,1596}
temp	float	$tmp528.y	%read{1626,1626} %write{1597,1597}
temp	float	$tmp528.z	%read{1627,1627} %write{1598,1598}
temp	float	$tmp528.w	%read{1628,1628} %write{1599,1599}
temp	float	$tmp529.x	%read{1596,1596} %write{1577,1577}
temp	float	$tmp529.y	%read{1597,1597} %write{1578,1578}
temp	float	$tmp529.z	%read{1598,1598} %write{1579,1579}
temp	float	$tmp529.w	%read{1599,1599} %write{1580,1580}
temp	float	$tmp530.x	%read{1577,1577} %write{1558,1558}
temp	float	$tmp530.y	%read{1578,1578} %write{1559,1559}
temp	float	$tmp530.z	%read{1579,1579} %write{1560,1560}
temp	float	$tmp530.w	%read{1580,1580} %write{1561,1561}
temp	float	$tmp531.x	%read{1558,1558} %write{1529,1529}
temp	float	$tmp531.y	%read{1559,1559} %write{1530,1530}
temp	float	$tmp531.z	%read{1560,1560} %write{1531,1531}
temp	float	$tmp531.w	%read{1561,1561} %write{1532,1532}
temp	float	$tmp532.x	%read{1529,1529} %write{1510,1510}
temp	float	$tmp532.y	%read{1530,1530} %write{1511,1511}
temp	float	$tmp532.z	%read{1531,1531} %write{1512,1512}
temp	float	$tmp532.w	%read{1532,1532} %write{1513,1513}
temp	float	$tmp533.x	%read{1510,1510} %write{1491,1491}
temp	float	$tmp533.y	%read{1511,1511} %write{1492,1492}
temp	float	$tmp533.z	%read{1512,1512} %write{1493,1493}
temp	float	$tmp533.w	%read{1513,1513} %write{1494,1494}
temp	float	$tmp534.x	%read{1510,1510} %write{1505,1505}
temp	float	$tmp534.y	%read{1511,1511} %write{1506,1506}
temp	float	$tmp534.z	%read{1512,1512} %write{1507,1507}
temp	float	$tmp534.w	%read{1513,1513} %write{1508,1508}
temp	float	$tmp535.x	%read{1505,1505} %write{1495,1495}
temp	float	$tmp535.y	%read{1506,1506} %write{1496,1496}
temp	float	$tmp535.z	%read{1507,1507} %write{1497,1497}
temp	float	$tmp535.w	%read{1508,1508} %write{1498,1498}
temp	float	$tmp536.x	%read{1505,1505} %write{1500,1500}
temp	float	$tmp536.y	%read{1506,1506} %write{1501,1501}
temp	float	$tmp536.z	%read{1507,1507} %write{1502,1502}
temp	float	$tmp536.w	%read{1508,1508} %write{1503,1503}
temp	float	$tmp537.x	%read{1529,1529} %write{1524,1524}
temp	float	$tmp537.y	%read{1530,1530} %write{1525,1525}
temp	float	$tmp537.z	%read{1531,1531} %write{1526,1526}
temp	float	$tmp537.w	%read{1532,1532} %write{1527,1527}
temp	float	$tmp538.x	%read{1524,1524} %write{1514,1514}
temp	float	$tmp538.y	%read{1525,1525} %write{1515,1515}
temp	float	$tmp538.z	%read{1526,1526} %write{1516,1516}
temp	float	$tmp538.w	%read{1527,1527} %write{1517,1517}
temp	float	$tmp539.x	%read{1524,1524} %write{1519,1519}
temp	float	$tmp539.y	%read{1525,1525} %write{1520,1520}
temp	float	$tmp539.z	%read{1526,1526} %write{1521,1521}
temp	float	$tmp539.w	%read{1527,1527} %write{1522,1522}
temp	float	$tmp540.x	%read{1558,1558} %write{1553,1553}
temp	float	$tmp540.y	%read{1559,1559} %write{1554,1554}
temp	float	$tmp540.z	%read{1560,1560} %write{1555,1555}
temp	float	$tmp540.w	%read{1561,1561} %write{1556,1556}
temp	float	$tmp541.x	%read{1553,1553} %write{1543,1543}
temp	float	$tmp541.y	%read{1554,1554} %write{1544,1544}
temp	float	$tmp541.z	%read{1555,1555} %write{1545,1545}
temp	float	$tmp541.w	%read{1556,1556} %write{1546,1546}
temp	float	$tmp542.x	%read{1543,1543} %write{1533,1533}
temp	float	$tmp542.y	%read{1544,1544} %write{1534,1534}
temp	float	$tmp542.z	%read{1545,1545} %write{1535,1535}
temp	float	$tmp542.w	%read{1546,1546} %write{1536,1536}
temp	float	$tmp543.x	%read{1543,1543} %write{1538,1538}
temp	float	$tmp543.y	%read{1544,1544} %write{1539,1539}
temp	float	$tmp543.z	%read{1545,1545} %write{1540,1540}
temp	float	$tmp543.w	%read{1546,1546} %write{1541,1541}
temp	float	$tmp544.x	%read{1553,1553} %write{1548,1548}
temp	float	$tmp544.y	%read{1554,1554} %write{1549,1549}
temp	float	$tmp544.z	%read{1555,1555} %write{1550,1550}
temp	float	$tmp544.w	%read{1556,1556} %write{1551,1551}
temp	float	$tmp545.x	%read{1577,1577} %write{1572,1572}
temp	float	$tmp545.y	%read{1578,1578} %write{1573,1573}
temp	float	$tmp545.z	%read{1579,1579} %write{1574,1574}
temp	float	$tmp545.w	%read{1580,1580} %write{1575,1575}
temp	float	$tmp546.x	%read{1572,1572} %write{1562,1562}
temp	float	$tmp546.y	%read{1573,1573} %write{1563,1563}
temp	float	$tmp546.z	%read{1574,1574} %write{1564,1564}
temp	float	$tmp546.w	%read{1575,1575} %write{1565,1565}
temp	float	$tmp547.x	%read{1572,1572} %write{1567,1567}
temp	float	$tmp547.y	%read{1573,1573} %write{1568,1568}
temp	float	$tmp547.z	%read{1574,1574} %write{1569,1569}
temp	float	$tmp547.w	%read{1575,1575} %write{1570,1570}
temp	float	$tmp548.x	%read{1596,1596} %write{1591,1591}
temp	float	$tmp548.y	%read{1597,1597} %write{1592,1592}
temp	float	$tmp548.z	%read{1598,1598} %write{1593,1593}
temp	float	$tmp548.w	%read{1599,1599} %write{1594,1594}
temp	float	$tmp549.x	%read{1591,1591} %write{1581,1581}
temp	float	$tmp549.y	%read{1592,1592} %write{1582,1582}
temp	float	$tmp549.z	%read{1593,1593} %write{1583,1583}
temp	float	$tmp549.w	%read{1594,1594} %write{1584,1584}
temp	float	$tmp550.x	%read{1591,1591} %write{1586,1586}
temp	float	$tmp550.y	%read{1592,1592} %write{1587,1587}
temp	float	$tmp550.z	%read{1593,1593} %write{1588,1588}
temp	float	$tmp550.w	%read{1594,1594} %write{1589,1589}
temp	float	$tmp551.x	%read{1625,1625} %write{1620,1620}
temp	float	$tmp551.y	%read{1626,1626} %write{1621,1621}
temp	float	$tmp551.z	%read{1627,1627} %write{1622,1622}
temp	float	$tmp551.w	%read{1628,1628} %write{1623,1623}
temp	float	$tmp552.x	%read{1620,1620} %write{1610,1610}
temp	float	$tmp552.y	%read{1621,1621} %write{1611,1611}
temp	float	$tmp552.z	%read{1622,1622} %write{1612,1612}
temp	float	$tmp552.w	%read{1623,1623} %write{1613,1613}
temp	float	$tmp553.x	%read{1610,1610} %write{1600,1600}
temp	float	$tmp553.y	%read{1611,1611} %write{1601,1601}
temp	float	$tmp553.z	%read{1612,1612} %write{1602,1602}
temp	float	$tmp553.w	%read{1613,1613} %write{1603,1603}
temp	float	$tmp554.x	%read{1610,1610} %write{1605,1605}
temp	float	$tmp554.y	%read{1611,1611} %write{1606,1606}
temp	float	$tmp554.z	%read{1612,1612} %write{1607,1607}
temp	float	$tmp554.w	%read{1613,1613} %write{1608,1608}
temp	float	$tmp555.x	%read{1620,1620} %write{1615,1615}
temp	float	$tmp555.y	%read{1621,1621} %write{1616,1616}
temp	float	$tmp555.z	%read{1622,1622} %write{1617,1617}
temp	float	$tmp555.w	%read{1623,1623} %write{1618,1618}
temp	float	$tmp556.x	%read{1654,1654} %write{1649,1649}
temp	float	$tmp556.y	%read{1655,1655} %write{1650,1650}
temp	float	$tmp556.z	%read{1656,1656} %write{1651,1651}
temp	float	$tmp556.w	%read{1657,1657} %write{1652,1652}
temp	float	$tmp557.x	%read{1649,1649} %write{1639,1639}
temp	float	$tmp557.y	%read{1650,1650} %write{1640,1640}
temp	float	$tmp557.z	%read{1651,1651} %write{1641,1641}
temp	float	$tmp557.w	%read{1652,1652} %write{1642,1642}
temp	float	$tmp558.x	%read{1639,1639} %write{1629,1629}
temp	float	$tmp558.y	%read{1640,1640} %write{1630,1630}
temp	float	$tmp558.z	%read{1641,1641} %write{1631,1631}
temp	float	$tmp558.w	%read{1642,1642} %write{1632,1632}
temp	float	$tmp559.x	%read{1639,1639} %write{1634,1634}
temp	float	$tmp559.y	%read{1640,1640} %write{1635,1635}
temp	float	$tmp559.z	%read{1641,1641} %write{1636,1636}
temp	float	$tmp559.w	%read{1642,1642} %write{1637,1637}
temp	float	$tmp560.x	%read{1649,1649} %write{1644,1644}
temp	float	$tmp560.y	%read{1650,1650} %write{1645,1645}
temp	float	$tmp560.z	%read{1651,1651} %write{1646,1646}
temp	float	$tmp560.w	%read{1652,1652} %write{1647,1647}
temp	float	$tmp561.x	%read{1683,1683} %write{1678,1678}
temp	float	$tmp561.y	%read{1684,1684} %write{1679,1679}
temp	float	$tmp561.z	%read{1685,1685} %write{1680,1680}
temp	float	$tmp561.w	%read{1686,1686} %write{1681,1681}
temp	float	$tmp562.x	%read{1678,1678} %write{1668,1668}
temp	float	$tmp562.y	%read{1679,1679} %write{1669,1669}
temp	float	$tmp562.z	%read{1680,1680} %write{1670,1670}
temp	float	$tmp562.w	%read{1681,1681} %write{1671,1671}
temp	float	$tmp563.x	%read{1668,1668} %write{1658,1658}
temp	float	$tmp563.y	%read{1669,1669} %write{1659,1659}
temp	float	$tmp563.z	%read{1670,1670} %write{1660,1660}
temp	float	$tmp563.w	%read{1671,1671} %write{1661,1661}
temp	float	$tmp564.x	%read{1668,1668} %write{1663,1663}
temp	float	$tmp564.y	%read{1669,1669} %write{1664,1664}
temp	float	$tmp564.z	%read{1670,1670} %write{1665,1665}
temp	float	$tmp564.w	%read{1671,1671} %write{1666,1666}
temp	float	$tmp565.x	%read{1678,1678} %write{1673,1673}
temp	float	$tmp565.y	%read{1679,1679} %write{1674,1674}
temp	float	$tmp565.z	%read{1680,1680} %write{1675,1675}
temp	float	$tmp565.w	%read{1681,1681} %write{1676,1676}
temp	float	$tmp566.x	%read{1692,1692} %write{1687,1687}
temp	float	$tmp566.y	%read{1693,1693} %write{1688,1688}
temp	float	$tmp567.x	%read{1692,1692} %write{1689,1689}
temp	float	$tmp567.y	%read{1693,1693} %write{1690,1690}
temp	float	$tmp568	%read{1696,1696} %write{1695,1695}
temp	float	$tmp569	%read{1700,1700} %write{1699,1699}
temp	color	$tmp570	%read{1704,1704} %write{1702,1702}
temp	color	$tmp571	%read{1704,1704} %write{1703,1703}
temp	float	$tmp572	%read{1708,1708} %write{1707,1707}
temp	float	$tmp573	%read{1709,1709} %write{1708,1708}
temp	color	$tmp574	%read{1710,1710} %write{1709,1709}
temp	closure color	$tmp575	%read{1714,1714} %write{1711,1711}
temp	color	$tmp576	%read{1713,1713} %write{1712,1712}
temp	color	$tmp577	%read{1714,1714} %write{1713,1713}
temp	int	$tmp578	%read{1723,1723} %write{1722,1722}
temp	closure color	$tmp579	%read{1726,1726} %write{1724,1724}
temp	color	$tmp580	%read{1726,1726} %write{1725,1725}
temp	float	$tmp581	%read{1734,1734} %write{1732,1732}
temp	vector	$tmp582	%read{1732,1732} %write{1731,1731}
temp	float	$tmp583	%read{1735,1735} %write{1734,1734}
temp	float	$tmp584	%read{1739,1739} %write{1737,1737}
temp	float	$tmp585	%read{1739,1739} %write{1738,1738}
temp	float	$tmp586	%read{1741,1741} %write{1739,1739}
temp	float	$tmp587	%read{1745,1745} %write{1743,1743}
temp	float	$tmp588	%read{1746,1746} %write{1745,1745}
temp	float	$tmp589	%read{1752,1752} %write{1751,1751}
temp	float	$tmp590	%read{1751,1751} %write{1749,1749}
temp	float	$tmp591	%read{1754,1754} %write{1753,1753}
temp	float	$tmp592	%read{1755,1755} %write{1754,1754}
temp	float	$tmp593.x	%read{1764,1764} %write{1757,1757}
temp	float	$tmp593.y	%read{1767,1767} %write{1758,1758}
temp	float	$tmp594.x	%read{1763,1763} %write{1759,1759}
temp	float	$tmp594.y	%read{1766,1766} %write{1760,1760}
temp	float	$tmp595	%read{1764,1764} %write{1763,1763}
temp	float	$tmp596	%read{1767,1767} %write{1766,1766}
temp	float	$tmp597	%read{1770,1770} %write{1769,1769}
temp	color	$tmp598	%read{2000,2000} %write{1772,1772}
temp	color	$tmp599	%read{1995,1995} %write{1775,1775}
temp	color	$tmp600	%read{1996,1996} %write{1776,1776}
temp	float	$tmp601.x	%read{1976,1976} %write{1947,1947}
temp	float	$tmp601.y	%read{1977,1977} %write{1948,1948}
temp	float	$tmp601.z	%read{1978,1978} %write{1949,1949}
temp	float	$tmp601.w	%read{1979,1979} %write{1950,1950}
temp	float	$tmp602.x	%read{1947,1947} %write{1918,1918}
temp	float	$tmp602.y	%read{1948,1948} %write{1919,1919}
temp	float	$tmp602.z	%read{1949,1949} %write{1920,1920}
temp	float	$tmp602.w	%read{1950,1950} %write{1921,1921}
temp	float	$tmp603.x	%read{1918,1918} %write{1889,1889}
temp	float	$tmp603.y	%read{1919,1919} %write{1890,1890}
temp	float	$tmp603.z	%read{1920,1920} %write{1891,1891}
temp	float	$tmp603.w	%read{1921,1921} %write{1892,1892}
temp	float	$tmp604.x	%read{1889,1889} %write{1870,1870}
temp	float	$tmp604.y	%read{1890,1890} %write{1871,1871}
temp	float	$tmp604.z	%read{1891,1891} %write{1872,1872}
temp	float	$tmp604.w	%read{1892,1892} %write{1873,1873}
temp	float	$tmp605.x	%read{1870,1870} %write{1851,1851}
temp	float	$tmp605.y	%read{1871,1871} %write{1852,1852}
temp	float	$tmp605.z	%read{1872,1872} %write{1853,1853}
temp	float	$tmp605.w	%read{1873,1873} %write{1854,1854}
temp	float	$tmp606.x	%read{1851,1851} %write{1822,1822}
temp	float	$tmp606.y	%read{1852,1852} %write{1823,1823}
temp	float	$tmp606.z	%read{1853,1853} %write{1824,1824}
temp	float	$tmp606.w	%read{1854,1854} %write{1825,1825}
temp	float	$tmp607.x	%read{1822,1822} %write{1803,1803}
temp	float	$tmp607.y	%read{1823,1823} %write{1804,1804}
temp	float	$tmp607.z	%read{1824,1824} %write{1805,1805}
temp	float	$tmp607.w	%read{1825,1825} %write{1806,1806}
temp	float	$tmp608.x	%read{1803,1803} %write{1784,1784}
temp	float	$tmp608.y	%read{1804,1804} %write{1785,1785}
temp	float	$tmp608.z	%read{1805,1805} %write{1786,1786}
temp	float	$tmp608.w	%read{1806,1806} %write{1787,1787}
temp	float	$tmp609.x	%read{1803,1803} %write{1798,1798}
temp	float	$tmp609.y	%read{1804,1804} %write{1799,1799}
temp	float	$tmp609.z	%read{1805,1805} %write{1800,1800}
temp	float	$tmp609.w	%read{1806,1806} %write{1801,1801}
temp	float	$tmp610.x	%read{1798,1798} %write{1788,1788}
temp	float	$tmp610.y	%read{1799,1799} %write{1789,1789}
temp	float	$tmp610.z	%read{1800,1800} %write{1790,1790}
temp	float	$tmp610.w	%read{1801,1801} %write{1791,1791}
temp	float	$tmp611.x	%read{1798,1798} %write{1793,1793}
temp	float	$tmp611.y	%read{1799,1799} %write{1794,1794}
temp	float	$tmp611.z	%read{1800,1800} %write{1795,1795}
temp	float	$tmp611.w	%read{1801,1801} %write{1796,1796}
temp	float	$tmp612.x	%read{1822,1822} %write{1817,1817}
temp	float	$tmp612.y	%read{1823,1823} %write{1818,1818}
temp	float	$tmp612.z	%read{1824,1824} %write{1819,1819}
temp	float	$tmp612.w	%read{1825,1825} %write{1820,1820}
temp	float	$tmp613.x	%read{1817,1817} %write{1807,1807}
temp	float	$tmp613.y	%read{1818,1818} %write{1808,1808}
temp	float	$tmp613.z	%read{1819,1819} %write{1809,1809}
temp	float	$tmp613.w	%read{1820,1820} %write{1810,1810}
temp	float	$tmp614.x	%read{1817,1817} %write{1812,1812}
temp	float	$tmp614.y	%read{1818,1818} %write{1813,1813}
temp	float	$tmp614.z	%read{1819,1819} %write{1814,1814}
temp	float	$tmp614.w	%read{1820,1820} %write{1815,1815}
temp	float	$tmp615.x	%read{1851,1851} %write{1846,1846}
temp	float	$tmp615.y	%read{1852,1852} %write{1847,1847}
temp	float	$tmp615.z	%read{1853,1853} %write{1848,1848}
temp	float	$tmp615.w	%read{1854,1854} %write{1849,1849}
temp	float	$tmp616.x	%read{1846,1846} %write{1836,1836}
temp	float	$tmp616.y	%read{1847,1847} %write{1837,1837}
temp	float	$tmp616.z	%read{1848,1848} %write{1838,1838}
temp	float	$tmp616.w	%read{1849,1849} %write{1839,1839}
temp	float	$tmp617.x	%read{1836,1836} %write{1826,1826}
temp	float	$tmp617.y	%read{1837,1837} %write{1827,1827}
temp	float	$tmp617.z	%read{1838,1838} %write{1828,1828}
temp	float	$tmp617.w	%read{1839,1839} %write{1829,1829}
temp	float	$tmp618.x	%read{1836,1836} %write{1831,1831}
temp	float	$tmp618.y	%read{1837,1837} %write{1832,1832}
temp	float	$tmp618.z	%read{1838,1838} %write{1833,1833}
temp	float	$tmp618.w	%read{1839,1839} %write{1834,1834}
temp	float	$tmp619.x	%read{1846,1846} %write{1841,1841}
temp	float	$tmp619.y	%read{1847,1847} %write{1842,1842}
temp	float	$tmp619.z	%read{1848,1848} %write{1843,1843}
temp	float	$tmp619.w	%read{1849,1849} %write{1844,1844}
temp	float	$tmp620.x	%read{1870,1870} %write{1865,1865}
temp	float	$tmp620.y	%read{1871,1871} %write{1866,1866}
temp	float	$tmp620.z	%read{1872,1872} %write{1867,1867}
temp	float	$tmp620.w	%read{1873,1873} %write{1868,1868}
temp	float	$tmp621.x	%read{1865,1865} %write{1855,1855}
temp	float	$tmp621.y	%read{1866,1866} %write{1856,1856}
temp	float	$tmp621.z	%read{1867,1867} %write{1857,1857}
temp	float	$tmp621.w	%read{1868,1868} %write{1858,1858}
temp	float	$tmp622.x	%read{1865,1865} %write{1860,1860}
temp	float	$tmp622.y	%read{1866,1866} %write{1861,1861}
temp	float	$tmp622.z	%read{1867,1867} %write{1862,1862}
temp	float	$tmp622.w	%read{1868,1868} %write{1863,1863}
temp	float	$tmp623.x	%read{1889,1889} %write{1884,1884}
temp	float	$tmp623.y	%read{1890,1890} %write{1885,1885}
temp	float	$tmp623.z	%read{1891,1891} %write{1886,1886}
temp	float	$tmp623.w	%read{1892,1892} %write{1887,1887}
temp	float	$tmp624.x	%read{1884,1884} %write{1874,1874}
temp	float	$tmp624.y	%read{1885,1885} %write{1875,1875}
temp	float	$tmp624.z	%read{1886,1886} %write{1876,1876}
temp	float	$tmp624.w	%read{1887,1887} %write{1877,1877}
temp	float	$tmp625.x	%read{1884,1884} %write{1879,1879}
temp	float	$tmp625.y	%read{1885,1885} %write{1880,1880}
temp	float	$tmp625.z	%read{1886,1886} %write{1881,1881}
temp	float	$tmp625.w	%read{1887,1887} %write{1882,1882}
temp	float	$tmp626.x	%read{1918,1918} %write{1913,1913}
temp	float	$tmp626.y	%read{1919,1919} %write{1914,1914}
temp	float	$tmp626.z	%read{1920,1920} %write{1915,1915}
temp	float	$tmp626.w	%read{1921,1921} %write{1916,1916}
temp	float	$tmp627.x	%read{1913,1913} %write{1903,1903}
temp	float	$tmp627.y	%read{1914,1914} %write{1904,1904}
temp	float	$tmp627.z	%read{1915,1915} %write{1905,1905}
temp	float	$tmp627.w	%read{1916,1916} %write{1906,1906}
temp	float	$tmp628.x	%read{1903,1903} %write{1893,1893}
temp	float	$tmp628.y	%read{1904,1904} %write{1894,1894}
temp	float	$tmp628.z	%read{1905,1905} %write{1895,1895}
temp	float	$tmp628.w	%read{1906,1906} %write{1896,1896}
temp	float	$tmp629.x	%read{1903,1903} %write{1898,1898}
temp	float	$tmp629.y	%read{1904,1904} %write{1899,1899}
temp	float	$tmp629.z	%read{1905,1905} %write{1900,1900}
temp	float	$tmp629.w	%read{1906,1906} %write{1901,1901}
temp	float	$tmp630.x	%read{1913,1913} %write{1908,1908}
temp	float	$tmp630.y	%read{1914,1914} %write{1909,1909}
temp	float	$tmp630.z	%read{1915,1915} %write{1910,1910}
temp	float	$tmp630.w	%read{1916,1916} %write{1911,1911}
temp	float	$tmp631.x	%read{1947,1947} %write{1942,1942}
temp	float	$tmp631.y	%read{1948,1948} %write{1943,1943}
temp	float	$tmp631.z	%read{1949,1949} %write{1944,1944}
temp	float	$tmp631.w	%read{1950,1950} %write{1945,1945}
temp	float	$tmp632.x	%read{1942,1942} %write{1932,1932}
temp	float	$tmp632.y	%read{1943,1943} %write{1933,1933}
temp	float	$tmp632.z	%read{1944,1944} %write{1934,1934}
temp	float	$tmp632.w	%read{1945,1945} %write{1935,1935}
temp	float	$tmp633.x	%read{1932,1932} %write{1922,1922}
temp	float	$tmp633.y	%read{1933,1933} %write{1923,1923}
temp	float	$tmp633.z	%read{1934,1934} %write{1924,1924}
temp	float	$tmp633.w	%read{1935,1935} %write{1925,1925}
temp	float	$tmp634.x	%read{1932,1932} %write{1927,1927}
temp	float	$tmp634.y	%read{1933,1933} %write{1928,1928}
temp	float	$tmp634.z	%read{1934,1934} %write{1929,1929}
temp	float	$tmp634.w	%read{1935,1935} %write{1930,1930}
temp	float	$tmp635.x	%read{1942,1942} %write{1937,1937}
temp	float	$tmp635.y	%read{1943,1943} %write{1938,1938}
temp	float	$tmp635.z	%read{1944,1944} %write{1939,1939}
temp	float	$tmp635.w	%read{1945,1945} %write{1940,1940}
temp	float	$tmp636.x	%read{1976,1976} %write{1971,1971}
temp	float	$tmp636.y	%read{1977,1977} %write{1972,1972}
temp	float	$tmp636.z	%read{1978,1978} %write{1973,1973}
temp	float	$tmp636.w	%read{1979,1979} %write{1974,1974}
temp	float	$tmp637.x	%read{1971,1971} %write{1961,1961}
temp	float	$tmp637.y	%read{1972,1972} %write{1962,1962}
temp	float	$tmp637.z	%read{1973,1973} %write{1963,1963}
temp	float	$tmp637.w	%read{1974,1974} %write{1964,1964}
temp	float	$tmp638.x	%read{1961,1961} %write{1951,1951}
temp	float	$tmp638.y	%read{1962,1962} %write{1952,1952}
temp	float	$tmp638.z	%read{1963,1963} %write{1953,1953}
temp	float	$tmp638.w	%read{1964,1964} %write{1954,1954}
temp	float	$tmp639.x	%read{1961,1961} %write{1956,1956}
temp	float	$tmp639.y	%read{1962,1962} %write{1957,1957}
temp	float	$tmp639.z	%read{1963,1963} %write{1958,1958}
temp	float	$tmp639.w	%read{1964,1964} %write{1959,1959}
temp	float	$tmp640.x	%read{1971,1971} %write{1966,1966}
temp	float	$tmp640.y	%read{1972,1972} %write{1967,1967}
temp	float	$tmp640.z	%read{1973,1973} %write{1968,1968}
temp	float	$tmp640.w	%read{1974,1974} %write{1969,1969}
temp	float	$tmp641.x	%read{1985,1985} %write{1980,1980}
temp	float	$tmp641.y	%read{1986,1986} %write{1981,1981}
temp	float	$tmp642.x	%read{1985,1985} %write{1982,1982}
temp	float	$tmp642.y	%read{1986,1986} %write{1983,1983}
temp	float	$tmp643	%read{1989,1989} %write{1988,1988}
temp	float	$tmp644	%read{1993,1993} %write{1992,1992}
temp	color	$tmp645	%read{1997,1997} %write{1995,1995}
temp	color	$tmp646	%read{1997,1997} %write{1996,1996}
temp	float	$tmp647	%read{2000,2000} %write{1999,1999}
temp	color	$tmp648	%read{2001,2001} %write{2000,2000}
temp	color	$tmp649	%read{2002,2002} %write{2001,2001}
temp	int	$tmp650	%read{2005,2005} %write{2004,2004}
temp	closure color	$tmp651	%read{2009,2009} %write{2006,2006}
temp	color	$tmp652	%read{2008,2008} %write{2007,2007}
temp	color	$tmp653	%read{2009,2009} %write{2008,2008}
temp	float	$tmp654	%read{2241,2241} %write{2240,2240}
temp	color	$tmp655	%read{2237,2237} %write{2018,2018}
temp	float	$tmp656	%read{2018,2018} %write{2017,2017}
temp	float	$tmp657	%read{2015,2015} %write{2013,2013}
temp	float	$tmp658	%read{2015,2015} %write{2014,2014}
temp	float	$tmp659	%read{2017,2017} %write{2015,2015}
temp	float	$tmp661.x	%read{2218,2218} %write{2189,2189}
temp	float	$tmp661.y	%read{2219,2219} %write{2190,2190}
temp	float	$tmp661.z	%read{2220,2220} %write{2191,2191}
temp	float	$tmp661.w	%read{2221,2221} %write{2192,2192}
temp	float	$tmp662.x	%read{2189,2189} %write{2160,2160}
temp	float	$tmp662.y	%read{2190,2190} %write{2161,2161}
temp	float	$tmp662.z	%read{2191,2191} %write{2162,2162}
temp	float	$tmp662.w	%read{2192,2192} %write{2163,2163}
temp	float	$tmp663.x	%read{2160,2160} %write{2131,2131}
temp	float	$tmp663.y	%read{2161,2161} %write{2132,2132}
temp	float	$tmp663.z	%read{2162,2162} %write{2133,2133}
temp	float	$tmp663.w	%read{2163,2163} %write{2134,2134}
temp	float	$tmp664.x	%read{2131,2131} %write{2112,2112}
temp	float	$tmp664.y	%read{2132,2132} %write{2113,2113}
temp	float	$tmp664.z	%read{2133,2133} %write{2114,2114}
temp	float	$tmp664.w	%read{2134,2134} %write{2115,2115}
temp	float	$tmp665.x	%read{2112,2112} %write{2093,2093}
temp	float	$tmp665.y	%read{2113,2113} %write{2094,2094}
temp	float	$tmp665.z	%read{2114,2114} %write{2095,2095}
temp	float	$tmp665.w	%read{2115,2115} %write{2096,2096}
temp	float	$tmp666.x	%read{2093,2093} %write{2064,2064}
temp	float	$tmp666.y	%read{2094,2094} %write{2065,2065}
temp	float	$tmp666.z	%read{2095,2095} %write{2066,2066}
temp	float	$tmp666.w	%read{2096,2096} %write{2067,2067}
temp	float	$tmp667.x	%read{2064,2064} %write{2045,2045}
temp	float	$tmp667.y	%read{2065,2065} %write{2046,2046}
temp	float	$tmp667.z	%read{2066,2066} %write{2047,2047}
temp	float	$tmp667.w	%read{2067,2067} %write{2048,2048}
temp	float	$tmp668.x	%read{2045,2045} %write{2026,2026}
temp	float	$tmp668.y	%read{2046,2046} %write{2027,2027}
temp	float	$tmp668.z	%read{2047,2047} %write{2028,2028}
temp	float	$tmp668.w	%read{2048,2048} %write{2029,2029}
temp	float	$tmp669.x	%read{2045,2045} %write{2040,2040}
temp	float	$tmp669.y	%read{2046,2046} %write{2041,2041}
temp	float	$tmp669.z	%read{2047,2047} %write{2042,2042}
temp	float	$tmp669.w	%read{2048,2048} %write{2043,2043}
temp	float	$tmp670.x	%read{2040,2040} %write{2030,2030}
temp	float	$tmp670.y	%read{2041,2041} %write{2031,2031}
temp	float	$tmp670.z	%read{2042,2042} %write{2032,2032}
temp	float	$tmp670.w	%read{2043,2043} %write{2033,2033}
temp	float	$tmp671.x	%read{2040,2040} %write{2035,2035}
temp	float	$tmp671.y	%read{2041,2041} %write{2036,2036}
temp	float	$tmp671.z	%read{2042,2042} %write{2037,2037}
temp	float	$tmp671.w	%read{2043,2043} %write{2038,2038}
temp	float	$tmp672.x	%read{2064,2064} %write{2059,2059}
temp	float	$tmp672.y	%read{2065,2065} %write{2060,2060}
temp	float	$tmp672.z	%read{2066,2066} %write{2061,2061}
temp	float	$tmp672.w	%read{2067,2067} %write{2062,2062}
temp	float	$tmp673.x	%read{2059,2059} %write{2049,2049}
temp	float	$tmp673.y	%read{2060,2060} %write{2050,2050}
temp	float	$tmp673.z	%read{2061,2061} %write{2051,2051}
temp	float	$tmp673.w	%read{2062,2062} %write{2052,2052}
temp	float	$tmp674.x	%read{2059,2059} %write{2054,2054}
temp	float	$tmp674.y	%read{2060,2060} %write{2055,2055}
temp	float	$tmp674.z	%read{2061,2061} %write{2056,2056}
temp	float	$tmp674.w	%read{2062,2062} %write{2057,2057}
temp	float	$tmp675.x	%read{2093,2093} %write{2088,2088}
temp	float	$tmp675.y	%read{2094,2094} %write{2089,2089}
temp	float	$tmp675.z	%read{2095,2095} %write{2090,2090}
temp	float	$tmp675.w	%read{2096,2096} %write{2091,2091}
temp	float	$tmp676.x	%read{2088,2088} %write{2078,2078}
temp	float	$tmp676.y	%read{2089,2089} %write{2079,2079}
temp	float	$tmp676.z	%read{2090,2090} %write{2080,2080}
temp	float	$tmp676.w	%read{2091,2091} %write{2081,2081}
temp	float	$tmp677.x	%read{2078,2078} %write{2068,2068}
temp	float	$tmp677.y	%read{2079,2079} %write{2069,2069}
temp	float	$tmp677.z	%read{2080,2080} %write{2070,2070}
temp	float	$tmp677.w	%read{2081,2081} %write{2071,2071}
temp	float	$tmp678.x	%read{2078,2078} %write{2073,2073}
temp	float	$tmp678.y	%read{2079,2079} %write{2074,2074}
temp	float	$tmp678.z	%read{2080,2080} %write{2075,2075}
temp	float	$tmp678.w	%read{2081,2081} %write{2076,2076}
temp	float	$tmp679.x	%read{2088,2088} %write{2083,2083}
temp	float	$tmp679.y	%read{2089,2089} %write{2084,2084}
temp	float	$tmp679.z	%read{2090,2090} %write{2085,2085}
temp	float	$tmp679.w	%read{2091,2091} %write{2086,2086}
temp	float	$tmp680.x	%read{2112,2112} %write{2107,2107}
temp	float	$tmp680.y	%read{2113,2113} %write{2108,2108}
temp	float	$tmp680.z	%read{2114,2114} %write{2109,2109}
temp	float	$tmp680.w	%read{2115,2115} %write{2110,2110}
temp	float	$tmp681.x	%read{2107,2107} %write{2097,2097}
temp	float	$tmp681.y	%read{2108,2108} %write{2098,2098}
temp	float	$tmp681.z	%read{2109,2109} %write{2099,2099}
temp	float	$tmp681.w	%read{2110,2110} %write{2100,2100}
temp	float	$tmp682.x	%read{2107,2107} %write{2102,2102}
temp	float	$tmp682.y	%read{2108,2108} %write{2103,2103}
temp	float	$tmp682.z	%read{2109,2109} %write{2104,2104}
temp	float	$tmp682.w	%read{2110,2110} %write{2105,2105}
temp	float	$tmp683.x	%read{2131,2131} %write{2126,2126}
temp	float	$tmp683.y	%read{2132,2132} %write{2127,2127}
temp	float	$tmp683.z	%read{2133,2133} %write{2128,2128}
temp	float	$tmp683.w	%read{2134,2134} %write{2129,2129}
temp	float	$tmp684.x	%read{2126,2126} %write{2116,2116}
temp	float	$tmp684.y	%read{2127,2127} %write{2117,2117}
temp	float	$tmp684.z	%read{2128,2128} %write{2118,2118}
temp	float	$tmp684.w	%read{2129,2129} %write{2119,2119}
temp	float	$tmp685.x	%read{2126,2126} %write{2121,2121}
temp	float	$tmp685.y	%read{2127,2127} %write{2122,2122}
temp	float	$tmp685.z	%read{2128,2128} %write{2123,2123}
temp	float	$tmp685.w	%read{2129,2129} %write{2124,2124}
temp	float	$tmp686.x	%read{2160,2160} %write{2155,2155}
temp	float	$tmp686.y	%read{2161,2161} %write{2156,2156}
temp	float	$tmp686.z	%read{2162,2162} %write{2157,2157}
temp	float	$tmp686.w	%read{2163,2163} %write{2158,2158}
temp	float	$tmp687.x	%read{2155,2155} %write{2145,2145}
temp	float	$tmp687.y	%read{2156,2156} %write{2146,2146}
temp	float	$tmp687.z	%read{2157,2157} %write{2147,2147}
temp	float	$tmp687.w	%read{2158,2158} %write{2148,2148}
temp	float	$tmp688.x	%read{2145,2145} %write{2135,2135}
temp	float	$tmp688.y	%read{2146,2146} %write{2136,2136}
temp	float	$tmp688.z	%read{2147,2147} %write{2137,2137}
temp	float	$tmp688.w	%read{2148,2148} %write{2138,2138}
temp	float	$tmp689.x	%read{2145,2145} %write{2140,2140}
temp	float	$tmp689.y	%read{2146,2146} %write{2141,2141}
temp	float	$tmp689.z	%read{2147,2147} %write{2142,2142}
temp	float	$tmp689.w	%read{2148,2148} %write{2143,2143}
temp	float	$tmp690.x	%read{2155,2155} %write{2150,2150}
temp	float	$tmp690.y	%read{2156,2156} %write{2151,2151}
temp	float	$tmp690.z	%read{2157,2157} %write{2152,2152}
temp	float	$tmp690.w	%read{2158,2158} %write{2153,2153}
temp	float	$tmp691.x	%read{2189,2189} %write{2184,2184}
temp	float	$tmp691.y	%read{2190,2190} %write{2185,2185}
temp	float	$tmp691.z	%read{2191,2191} %write{2186,2186}
temp	float	$tmp691.w	%read{2192,2192} %write{2187,2187}
temp	float	$tmp692.x	%read{2184,2184} %write{2174,2174}
temp	float	$tmp692.y	%read{2185,2185} %write{2175,2175}
temp	float	$tmp692.z	%read{2186,2186} %write{2176,2176}
temp	float	$tmp692.w	%read{2187,2187} %write{2177,2177}
temp	float	$tmp693.x	%read{2174,2174} %write{2164,2164}
temp	float	$tmp693.y	%read{2175,2175} %write{2165,2165}
temp	float	$tmp693.z	%read{2176,2176} %write{2166,2166}
temp	float	$tmp693.w	%read{2177,2177} %write{2167,2167}
temp	float	$tmp694.x	%read{2174,2174} %write{2169,2169}
temp	float	$tmp694.y	%read{2175,2175} %write{2170,2170}
temp	float	$tmp694.z	%read{2176,2176} %write{2171,2171}
temp	float	$tmp694.w	%read{2177,2177} %write{2172,2172}
temp	float	$tmp695.x	%read{2184,2184} %write{2179,2179}
temp	float	$tmp695.y	%read{2185,2185} %write{2180,2180}
temp	float	$tmp695.z	%read{2186,2186} %write{2181,2181}
temp	float	$tmp695.w	%read{2187,2187} %write{2182,2182}
temp	float	$tmp696.x	%read{2218,2218} %write{2213,2213}
temp	float	$tmp696.y	%read{2219,2219} %write{2214,2214}
temp	float	$tmp696.z	%read{2220,2220} %write{2215,2215}
temp	float	$tmp696.w	%read{2221,2221} %write{2216,2216}
temp	float	$tmp697.x	%read{2213,2213} %write{2203,2203}
temp	float	$tmp697.y	%read{2214,2214} %write{2204,2204}
temp	float	$tmp697.z	%read{2215,2215} %write{2205,2205}
temp	float	$tmp697.w	%read{2216,2216} %write{2206,2206}
temp	float	$tmp698.x	%read{2203,2203} %write{2193,2193}
temp	float	$tmp698.y	%read{2204,2204} %write{2194,2194}
temp	float	$tmp698.z	%read{2205,2205} %write{2195,2195}
temp	float	$tmp698.w	%read{2206,2206} %write{2196,2196}
temp	float	$tmp699.x	%read{2203,2203} %write{2198,2198}
temp	float	$tmp699.y	%read{2204,2204} %write{2199,2199}
temp	float	$tmp699.z	%read{2205,2205} %write{2200,2200}
temp	float	$tmp699.w	%read{2206,2206} %write{2201,2201}
temp	float	$tmp700.x	%read{2213,2213} %write{2208,2208}
temp	float	$tmp700.y	%read{2214,2214} %write{2209,2209}
temp	float	$tmp700.z	%read{2215,2215} %write{2210,2210}
temp	float	$tmp700.w	%read{2216,2216} %write{2211,2211}
temp	float	$tmp701.x	%read{2227,2227} %write{2222,2222}
temp	float	$tmp701.y	%read{2228,2228} %write{2223,2223}
temp	float	$tmp702.x	%read{2227,2227} %write{2224,2224}
temp	float	$tmp702.y	%read{2228,2228} %write{2225,2225}
temp	float	$tmp703	%read{2231,2231} %write{2230,2230}
temp	float	$tmp704	%read{2235,2235} %write{2234,2234}
temp	color	$tmp705	%read{2239,2239} %write{2237,2237}
temp	color	$tmp706	%read{2239,2239} %write{2238,2238}
temp	float	$tmp707	%read{2243,2243} %write{2242,2242}
temp	float	$tmp708	%read{2244,2244} %write{2243,2243}
temp	color	$tmp709	%read{2245,2245} %write{2244,2244}
temp	closure color	$tmp710	%read{2249,2249} %write{2246,2246}
temp	color	$tmp711	%read{2248,2248} %write{2247,2247}
temp	color	$tmp712	%read{2249,2249} %write{2248,2248}
const	string	$const81	"mx_sheen_bsdf"		%read{2256,2256} %write{2147483647,-1}
temp	int	$tmp713	%read{2258,2258} %write{2257,2257}
temp	vector	$tmp714	%read{2263,2263} %write{2262,2262}
temp	float	$tmp715	%read{2265,2265} %write{2264,2264}
temp	float	$tmp716	%read{2268,2268} %write{2267,2267}
temp	float	$tmp717	%read{2283,2283} %write{2282,2282}
const	string	$const82	"mx_imageworks_sheen_dir_albedo"		%read{2269,2269} %write{2147483647,-1}
const	string	$const83	"mx_imageworks_sheen_dir_albedo_analytic"		%read{2270,2270} %write{2147483647,-1}
const	float	$const84	5.25248003		%read{2272,2272} %write{2147483647,-1}
const	float	$const85	7.66024017		%read{2271,2271} %write{2147483647,-1}
temp	float	$tmp718	%read{2272,2272} %write{2271,2271}
temp	float	$tmp719	%read{2274,2274} %write{2272,2272}
const	float	$const86	14.2637701		%read{2273,2273} %write{2147483647,-1}
temp	float	$tmp720	%read{2274,2274} %write{2273,2273}
const	float	$const87	30.6644897		%read{2275,2275} %write{2147483647,-1}
temp	float	$tmp721	%read{2276,2276} %write{2275,2275}
temp	float	$tmp722	%read{2278,2278} %write{2276,2276}
const	float	$const88	32.5341988		%read{2277,2277} %write{2147483647,-1}
temp	float	$tmp723	%read{2278,2278} %write{2277,2277}
temp	float	$tmp724	%read{2282,2282} %write{2281,2281}
temp	closure color	$tmp725	%read{2286,2286} %write{2284,2284}
const	string	$const89	"diffuse"		%read{2284,2284} %write{2147483647,-1}
temp	color	$tmp726	%read{2286,2286} %write{2285,2285}
temp	float	$tmp727	%read{2289,2289} %write{2288,2288}
temp	color	$tmp728	%read{2290,2290} %write{2289,2289}
const	string	$const90	"mx_translucent_bsdf"		%read{2295,2295} %write{2147483647,-1}
temp	closure color	$tmp729	%read{2298,2298} %write{2296,2296}
const	string	$const91	"translucent"		%read{2296,2306} %write{2147483647,-1}
temp	color	$tmp730	%read{2298,2298} %write{2297,2297}
const	string	$const92	"mx_subsurface_bsdf"		%read{2305,2305} %write{2147483647,-1}
temp	closure color	$tmp731	%read{2308,2308} %write{2306,2306}
temp	color	$tmp732	%read{2308,2308} %write{2307,2307}
const	string	$const93	"mix"		%read{2315,2379} %write{2147483647,-1}
temp	float	$tmp733	%read{2317,2317} %write{2316,2316}
temp	closure color	$tmp734	%read{2319,2319} %write{2317,2317}
temp	closure color	$tmp735	%read{2319,2319} %write{2318,2318}
const	string	$const94	"mx_oren_nayar_diffuse_bsdf"		%read{2327,2327} %write{2147483647,-1}
temp	closure color	$tmp736	%read{2330,2330} %write{2328,2328}
const	string	$const95	"oren_nayar"		%read{2328,2328} %write{2147483647,-1}
temp	color	$tmp737	%read{2330,2330} %write{2329,2329}
temp	float	$tmp738	%read{2339,2339} %write{2338,2338}
temp	closure color	$tmp739	%read{2341,2341} %write{2339,2339}
temp	closure color	$tmp740	%read{2341,2341} %write{2340,2340}
temp	closure color	$tmp741	%read{2350,2350} %write{2349,2349}
temp	float	$tmp742	%read{2360,2360} %write{2359,2359}
temp	closure color	$tmp743	%read{2362,2362} %write{2360,2360}
temp	closure color	$tmp744	%read{2362,2362} %write{2361,2361}
temp	closure color	$tmp745	%read{2371,2371} %write{2370,2370}
temp	float	$tmp746	%read{2381,2381} %write{2380,2380}
temp	closure color	$tmp747	%read{2383,2383} %write{2381,2381}
temp	closure color	$tmp748	%read{2383,2383} %write{2382,2382}
temp	color	$tmp749	%read{2391,2391} %write{2387,2387}
temp	color	$tmp750	%read{2390,2390} %write{2388,2388}
temp	color	$tmp751	%read{2391,2391} %write{2390,2390}
temp	closure color	$tmp752	%read{2405,2405} %write{2404,2404}
temp	closure color	$tmp753	%read{2410,2410} %write{2409,2409}
const	string	$const96	"emission"		%read{2409,2409} %write{2147483647,-1}
temp	float	$tmp754	%read{2415,2415} %write{2412,2412}
const	string	$const97	"mx_surface"		%read{2413,2413} %write{2147483647,-1}
temp	float	$tmp755	%read{2416,2416} %write{2415,2415}
temp	closure color	$tmp756	%read{2418,2418} %write{2417,2417}
temp	closure color	$tmp757	%read{2422,2422} %write{2418,2418}
temp	closure color	$tmp758	%read{2421,2421} %write{2419,2419}
const	string	$const98	"transparent"		%read{2419,2419} %write{2147483647,-1}
temp	float	$tmp759	%read{2421,2421} %write{2420,2420}
temp	closure color	$tmp760	%read{2422,2422} %write{2421,2421}
code ___main___
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:601
#     vector geomprop_Nworld_out = transform(geomprop_Nworld_space, N);
	assign		null_closure $const1 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{601} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:602
#     vector geomprop_Tworld_out = transform(geomprop_Tworld_space, normalize(dPdu));
	functioncall	$const2 3 	%line{602} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:261
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	geomprop_Nworld_out $const3 geomprop_Nworld_space N 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{261} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:603
#     surfaceshader SR_gold_out = null_closure;
	normalize	$tmp1 dPdu 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{603} %argrw{"wr"}
	functioncall	$const2 6 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:262
# vector transform (string to, vector p) { return transform("common",to,p); }
	transformv	geomprop_Tworld_out $const3 geomprop_Tworld_space $tmp1 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{262} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:604
#     NG_standard_surface_surfaceshader_100(base, base_color, diffuse_roughness, metalness, specular, specular_color, specular_roughness, specular_IOR, specular_anisotropy, specular_rotation, transmission, transmission_color, transmission_depth, transmission_scatter, transmission_scatter_anisotropy, transmission_dispersion, transmission_extra_roughness, subsurface1, subsurface_color, subsurface_radius, subsurface_scale, subsurface_anisotropy, sheen, sheen_color, sheen_roughness, coat, coat_color, coat_roughness, coat_anisotropy, coat_rotation, coat_IOR, geomprop_Nworld_out, coat_affect_color, coat_affect_roughness, thin_film_thickness, thin_film_IOR, emission1, emission_color, opacity, thin_walled, geomprop_Nworld_out, geomprop_Tworld_out, SR_gold_out);
	assign		SR_gold_out null_closure 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{604} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:605
#     out = SR_gold_out;
	functioncall	$const4 2424 	%line{605} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:350
#     vector2 coat_roughness_vector_out = vector2(0.0, 0.0);
	assign		___781_null_closure $const1 	%line{350} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:351
#     mx_roughness_anisotropy(coat_roughness, coat_anisotropy, coat_roughness_vector_out);
	assign		___781_coat_roughness_vector_out.x $const5 	%line{351} %argrw{"wr"}
	assign		___781_coat_roughness_vector_out.y $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:352
#     float coat_tangent_rotate_degree_in2_tmp = 360;
	functioncall	$const6 30 	%line{352} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:19
#     if (anisotropy > 0.0)
	mul		$tmp2 coat_roughness coat_roughness 	%line{19} %argrw{"wrr"}
	functioncall	$const9 16 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp3 $tmp2 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___741_roughness_sqr $tmp3 $const7 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:20
#     {
	gt		$tmp4 coat_anisotropy $const5 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{20} %argrw{"wrr"}
	if		$tmp4 28 30 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:22
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const9 21 	%line{22} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp6 coat_anisotropy $const10 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp5 $tmp6 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:22
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp7 $const8 $tmp5 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{22} %argrw{"wrr"}
	sqrt		___742_aspect $tmp7 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:23
#         result.y = roughness_sqr * aspect;
	div		$tmp8 ___741_roughness_sqr ___742_aspect 	%line{23} %argrw{"wrr"}
	min		___781_coat_roughness_vector_out.x $tmp8 $const8 	%argrw{"wrr"}
	assign		___781_coat_roughness_vector_out.x ___781_coat_roughness_vector_out.x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:24
#     }
	mul		___781_coat_roughness_vector_out.y ___741_roughness_sqr ___742_aspect 	%line{24} %argrw{"wrr"}
	assign		___781_coat_roughness_vector_out.y ___781_coat_roughness_vector_out.y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:28
#         result.y = roughness_sqr;
	assign		___781_coat_roughness_vector_out.x ___741_roughness_sqr 	%line{28} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:29
#     }
	assign		___781_coat_roughness_vector_out.y ___741_roughness_sqr 	%line{29} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:353
#     float coat_tangent_rotate_degree_out = coat_rotation * coat_tangent_rotate_degree_in2_tmp;
	assign		___781_coat_tangent_rotate_degree_in2_tmp $const11 	%line{353} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:354
#     color metal_reflectivity_out = base_color * base;
	mul		___781_coat_tangent_rotate_degree_out coat_rotation ___781_coat_tangent_rotate_degree_in2_tmp 	%line{354} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:355
#     color metal_edgecolor_out = specular_color * specular;
	mul		___781_metal_reflectivity_out base_color base 	%line{355} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:356
#     float coat_affect_roughness_multiply1_out = coat_affect_roughness * coat;
	mul		___781_metal_edgecolor_out specular_color specular 	%line{356} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:357
#     float tangent_rotate_degree_in2_tmp = 360;
	mul		___781_coat_affect_roughness_multiply1_out coat_affect_roughness coat 	%line{357} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:358
#     float tangent_rotate_degree_out = specular_rotation * tangent_rotate_degree_in2_tmp;
	assign		___781_tangent_rotate_degree_in2_tmp $const11 	%line{358} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:359
#     float coat_clamped_low_tmp = 0;
	mul		___781_tangent_rotate_degree_out specular_rotation ___781_tangent_rotate_degree_in2_tmp 	%line{359} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:360
#     float coat_clamped_high_tmp = 1;
	assign		___781_coat_clamped_low_tmp $const1 	%line{360} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:361
#     float coat_clamped_out = clamp(coat, coat_clamped_low_tmp, coat_clamped_high_tmp);
	assign		___781_coat_clamped_high_tmp $const12 	%line{361} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:362
#     vector subsurface_radius_vector_out = vector(subsurface_radius[0], subsurface_radius[1], subsurface_radius[2]);
	functioncall	$const9 42 	%line{362} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp9 coat ___781_coat_clamped_high_tmp 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___781_coat_clamped_out $tmp9 ___781_coat_clamped_low_tmp 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:363
#     float subsurface_selector_out = float(thin_walled);
	compref		$tmp10 subsurface_radius $const1 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{363} %argrw{"wrr"}
	compref		$tmp11 subsurface_radius $const12 	%argrw{"wrr"}
	compref		$tmp12 subsurface_radius $const13 	%argrw{"wrr"}
	vector		___781_subsurface_radius_vector_out $tmp10 $tmp11 $tmp12 	%argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:364
#     color coat_attenuation_bg_tmp = color(1, 1, 1);
	assign		$tmp13 thin_walled 	%line{364} %argrw{"wr"}
	assign		___781_subsurface_selector_out $tmp13 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:365
#     color coat_attenuation_out = mix(coat_attenuation_bg_tmp, coat_color, coat);
	assign		___781_coat_attenuation_bg_tmp $const14 	%line{365} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:366
#     color emission_weight_out = emission_color * emission1;
	mix		___781_coat_attenuation_out ___781_coat_attenuation_bg_tmp coat_color coat 	%line{366} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:367
#     color coat_emission_attenuation_bg_tmp = color(1, 1, 1);
	mul		___781_emission_weight_out emission_color emission1 	%line{367} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:368
#     color coat_emission_attenuation_out = mix(coat_emission_attenuation_bg_tmp, coat_color, coat);
	assign		___781_coat_emission_attenuation_bg_tmp $const14 	%line{368} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:369
#     color opacity_luminance_out = color(0.0);
	mix		___781_coat_emission_attenuation_out ___781_coat_emission_attenuation_bg_tmp coat_color coat 	%line{369} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:370
#     mx_luminance_color3(opacity, color(0.272229, 0.674082, 0.0536895), opacity_luminance_out);
	assign		___781_opacity_luminance_out $const15 	%line{370} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:371
#     vector coat_tangent_rotate_out = vector(0.0);
	functioncall	$const17 57 	%line{371} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:151
# }
	dot		$tmp15 opacity $const16 	%line{151} %argrw{"wrr"}
	assign		___781_opacity_luminance_out $tmp15 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:372
#     mx_rotate_vector3(tangent, coat_tangent_rotate_degree_out, coat_normal, coat_tangent_rotate_out);
	assign		___781_coat_tangent_rotate_out $const18 	%line{372} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:373
#     color artistic_ior_ior = color(0.0);
	functioncall	$const19 175 	%line{373} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:169
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const20 62 	%line{169} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp16 $const21 $const22 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___762_rotationRadians ___781_coat_tangent_rotate_degree_out $tmp16 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:170
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const23 125 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{170} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:156
#     float s = sin(angle);
	normalize	___761_nAxis geomprop_Nworld_out 	%line{156} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:157
#     float c = cos(angle);
	sin		___761_s ___762_rotationRadians 	%line{157} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:158
#     float oc = 1.0 - c;
	cos		___761_c ___762_rotationRadians 	%line{158} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:159
# 
	sub		___761_oc $const8 ___761_c 	%line{159} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:161
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp17 ___761_nAxis $const1 	%line{161} %argrw{"wrr"}
	mul		$tmp18 ___761_oc $tmp17 	%argrw{"wrr"}
	compref		$tmp19 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp20 $tmp18 $tmp19 	%argrw{"wrr"}
	add		$tmp21 $tmp20 ___761_c 	%argrw{"wrr"}
	compref		$tmp22 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp23 ___761_oc $tmp22 	%argrw{"wrr"}
	compref		$tmp24 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp25 $tmp23 $tmp24 	%argrw{"wrr"}
	compref		$tmp26 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp27 $tmp26 ___761_s 	%argrw{"wrr"}
	sub		$tmp28 $tmp25 $tmp27 	%argrw{"wrr"}
	compref		$tmp29 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp30 ___761_oc $tmp29 	%argrw{"wrr"}
	compref		$tmp31 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp32 $tmp30 $tmp31 	%argrw{"wrr"}
	compref		$tmp33 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp34 $tmp33 ___761_s 	%argrw{"wrr"}
	add		$tmp35 $tmp32 $tmp34 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:162
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp36 ___761_nAxis $const1 	%line{162} %argrw{"wrr"}
	mul		$tmp37 ___761_oc $tmp36 	%argrw{"wrr"}
	compref		$tmp38 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
	compref		$tmp40 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp41 $tmp40 ___761_s 	%argrw{"wrr"}
	add		$tmp42 $tmp39 $tmp41 	%argrw{"wrr"}
	compref		$tmp43 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp44 ___761_oc $tmp43 	%argrw{"wrr"}
	compref		$tmp45 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp46 $tmp44 $tmp45 	%argrw{"wrr"}
	add		$tmp47 $tmp46 ___761_c 	%argrw{"wrr"}
	compref		$tmp48 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp49 ___761_oc $tmp48 	%argrw{"wrr"}
	compref		$tmp50 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp51 $tmp49 $tmp50 	%argrw{"wrr"}
	compref		$tmp52 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp53 $tmp52 ___761_s 	%argrw{"wrr"}
	sub		$tmp54 $tmp51 $tmp53 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:163
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp55 ___761_nAxis $const13 	%line{163} %argrw{"wrr"}
	mul		$tmp56 ___761_oc $tmp55 	%argrw{"wrr"}
	compref		$tmp57 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp58 $tmp56 $tmp57 	%argrw{"wrr"}
	compref		$tmp59 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp60 $tmp59 ___761_s 	%argrw{"wrr"}
	sub		$tmp61 $tmp58 $tmp60 	%argrw{"wrr"}
	compref		$tmp62 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp63 ___761_oc $tmp62 	%argrw{"wrr"}
	compref		$tmp64 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp65 $tmp63 $tmp64 	%argrw{"wrr"}
	compref		$tmp66 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp67 $tmp66 ___761_s 	%argrw{"wrr"}
	add		$tmp68 $tmp65 $tmp67 	%argrw{"wrr"}
	compref		$tmp69 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp70 ___761_oc $tmp69 	%argrw{"wrr"}
	compref		$tmp71 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
	add		$tmp73 $tmp72 ___761_c 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:161
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___762_m $tmp21 $tmp28 $tmp35 $const5 $tmp42 $tmp47 $tmp54 $const5 $tmp61 $tmp68 $tmp73 $const5 $const5 $const5 $const5 $const8 	%line{161} %argrw{"wrrrrrrrrrrrrrrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:171
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp74.x geomprop_Tworld_out $const1 	%line{171} %argrw{"wrr"}
	compref		$tmp74.y geomprop_Tworld_out $const12 	%argrw{"wrr"}
	compref		$tmp74.z geomprop_Tworld_out $const13 	%argrw{"wrr"}
	assign		$tmp74.w $const8 	%argrw{"wr"}
	functioncall	$const2 174 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:386
#     return vector4 (M[0][0]*p.x + M[0][1]*p.y + M[0][2]*p.z + M[0][2]*p.w,
	mxcompref	$tmp75 ___762_m $const1 $const1 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{386} %argrw{"wrrr"}
	mul		$tmp76 $tmp75 $tmp74.x 	%argrw{"wrr"}
	mxcompref	$tmp77 ___762_m $const1 $const12 	%argrw{"wrrr"}
	mul		$tmp78 $tmp77 $tmp74.y 	%argrw{"wrr"}
	add		$tmp79 $tmp76 $tmp78 	%argrw{"wrr"}
	mxcompref	$tmp80 ___762_m $const1 $const13 	%argrw{"wrrr"}
	mul		$tmp81 $tmp80 $tmp74.z 	%argrw{"wrr"}
	add		$tmp82 $tmp79 $tmp81 	%argrw{"wrr"}
	mxcompref	$tmp83 ___762_m $const1 $const13 	%argrw{"wrrr"}
	mul		$tmp84 $tmp83 $tmp74.w 	%argrw{"wrr"}
	add		___762_trans.x $tmp82 $tmp84 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:387
#                     M[1][0]*p.x + M[1][1]*p.y + M[1][2]*p.z + M[1][2]*p.w,
	mxcompref	$tmp85 ___762_m $const12 $const1 	%line{387} %argrw{"wrrr"}
	mul		$tmp86 $tmp85 $tmp74.x 	%argrw{"wrr"}
	mxcompref	$tmp87 ___762_m $const12 $const12 	%argrw{"wrrr"}
	mul		$tmp88 $tmp87 $tmp74.y 	%argrw{"wrr"}
	add		$tmp89 $tmp86 $tmp88 	%argrw{"wrr"}
	mxcompref	$tmp90 ___762_m $const12 $const13 	%argrw{"wrrr"}
	mul		$tmp91 $tmp90 $tmp74.z 	%argrw{"wrr"}
	add		$tmp92 $tmp89 $tmp91 	%argrw{"wrr"}
	mxcompref	$tmp93 ___762_m $const12 $const13 	%argrw{"wrrr"}
	mul		$tmp94 $tmp93 $tmp74.w 	%argrw{"wrr"}
	add		___762_trans.y $tmp92 $tmp94 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:388
#                     M[2][0]*p.x + M[2][1]*p.y + M[2][2]*p.z + M[2][2]*p.w,
	mxcompref	$tmp95 ___762_m $const13 $const1 	%line{388} %argrw{"wrrr"}
	mul		$tmp96 $tmp95 $tmp74.x 	%argrw{"wrr"}
	mxcompref	$tmp97 ___762_m $const13 $const12 	%argrw{"wrrr"}
	mul		$tmp98 $tmp97 $tmp74.y 	%argrw{"wrr"}
	add		$tmp99 $tmp96 $tmp98 	%argrw{"wrr"}
	mxcompref	$tmp100 ___762_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp101 $tmp100 $tmp74.z 	%argrw{"wrr"}
	add		$tmp102 $tmp99 $tmp101 	%argrw{"wrr"}
	mxcompref	$tmp103 ___762_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp104 $tmp103 $tmp74.w 	%argrw{"wrr"}
	add		___762_trans.z $tmp102 $tmp104 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:389
#                     M[3][0]*p.x + M[3][1]*p.y + M[3][2]*p.z + M[3][2]*p.w);
	mxcompref	$tmp105 ___762_m $const24 $const1 	%line{389} %argrw{"wrrr"}
	mul		$tmp106 $tmp105 $tmp74.x 	%argrw{"wrr"}
	mxcompref	$tmp107 ___762_m $const24 $const12 	%argrw{"wrrr"}
	mul		$tmp108 $tmp107 $tmp74.y 	%argrw{"wrr"}
	add		$tmp109 $tmp106 $tmp108 	%argrw{"wrr"}
	mxcompref	$tmp110 ___762_m $const24 $const13 	%argrw{"wrrr"}
	mul		$tmp111 $tmp110 $tmp74.z 	%argrw{"wrr"}
	add		$tmp112 $tmp109 $tmp111 	%argrw{"wrr"}
	mxcompref	$tmp113 ___762_m $const24 $const13 	%argrw{"wrrr"}
	mul		$tmp114 $tmp113 $tmp74.w 	%argrw{"wrr"}
	add		___762_trans.w $tmp112 $tmp114 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:172
# }
	vector		___781_coat_tangent_rotate_out ___762_trans.x ___762_trans.y ___762_trans.z 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{172} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:374
#     color artistic_ior_extinction = color(0.0);
	assign		___781_artistic_ior_ior $const15 	%line{374} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:375
#     mx_artistic_ior(metal_reflectivity_out, metal_edgecolor_out, artistic_ior_ior, artistic_ior_extinction);
	assign		___781_artistic_ior_extinction $const15 	%line{375} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:376
#     float coat_affect_roughness_multiply2_out = coat_affect_roughness_multiply1_out * coat_roughness;
	functioncall	$const25 202 	%line{376} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:180
#     color r_sqrt = sqrt(r);
	assign		$tmp115 $const5 	%line{180} %argrw{"wr"}
	assign		$tmp116 $const26 	%argrw{"wr"}
	functioncall	$const9 183 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp117 ___781_metal_reflectivity_out $tmp116 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___763_r $tmp117 $tmp115 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:181
#     color n_min = (1.0 - r) / (1.0 + r);
	sqrt		___763_r_sqrt ___763_r 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{181} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:182
#     color n_max = (1.0 + r_sqrt) / (1.0 - r_sqrt);
	sub		$tmp118 $const8 ___763_r 	%line{182} %argrw{"wrr"}
	add		$tmp119 $const8 ___763_r 	%argrw{"wrr"}
	div		___763_n_min $tmp118 $tmp119 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:183
#     ior = mix(n_max, n_min, edge_color);
	add		$tmp120 $const8 ___763_r_sqrt 	%line{183} %argrw{"wrr"}
	sub		$tmp121 $const8 ___763_r_sqrt 	%argrw{"wrr"}
	div		___763_n_max $tmp120 $tmp121 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:184
# 
	mix		___781_artistic_ior_ior ___763_n_max ___763_n_min ___781_metal_edgecolor_out 	%line{184} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:186
#     color nm1 = ior - 1.0;
	add		___763_np1 ___781_artistic_ior_ior $const8 	%line{186} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:187
#     color k2 = (np1*np1 * r - nm1*nm1) / (1.0 - r);
	sub		___763_nm1 ___781_artistic_ior_ior $const8 	%line{187} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:188
#     k2 = max(k2, 0.0);
	mul		$tmp122 ___763_np1 ___763_np1 	%line{188} %argrw{"wrr"}
	mul		$tmp123 $tmp122 ___763_r 	%argrw{"wrr"}
	mul		$tmp124 ___763_nm1 ___763_nm1 	%argrw{"wrr"}
	sub		$tmp125 $tmp123 $tmp124 	%argrw{"wrr"}
	sub		$tmp126 $const8 ___763_r 	%argrw{"wrr"}
	div		___763_k2 $tmp125 $tmp126 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:189
#     extinction = sqrt(k2);
	assign		$tmp127 $const5 	%line{189} %argrw{"wr"}
	max		___763_k2 ___763_k2 $tmp127 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:190
# }
	sqrt		___781_artistic_ior_extinction ___763_k2 	%line{190} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:377
#     vector tangent_rotate_out = vector(0.0);
	mul		___781_coat_affect_roughness_multiply2_out ___781_coat_affect_roughness_multiply1_out coat_roughness 	%line{377} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:378
#     mx_rotate_vector3(tangent, tangent_rotate_degree_out, normal1, tangent_rotate_out);
	assign		___781_tangent_rotate_out $const18 	%line{378} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:379
#     float coat_gamma_multiply_out = coat_clamped_out * coat_affect_color;
	functioncall	$const19 321 	%line{379} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:169
#     matrix m = rotationMatrix(axis, rotationRadians);
	functioncall	$const20 208 	%line{169} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp128 $const21 $const22 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		___762_rotationRadians ___781_tangent_rotate_degree_out $tmp128 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:170
#     vector4 trans = transform(m, vector4(_in[0], _in[1], _in[2], 1.0));
	functioncall	$const23 271 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{170} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:156
#     float s = sin(angle);
	normalize	___761_nAxis geomprop_Nworld_out 	%line{156} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:157
#     float c = cos(angle);
	sin		___761_s ___762_rotationRadians 	%line{157} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:158
#     float oc = 1.0 - c;
	cos		___761_c ___762_rotationRadians 	%line{158} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:159
# 
	sub		___761_oc $const8 ___761_c 	%line{159} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:161
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	compref		$tmp129 ___761_nAxis $const1 	%line{161} %argrw{"wrr"}
	mul		$tmp130 ___761_oc $tmp129 	%argrw{"wrr"}
	compref		$tmp131 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp132 $tmp130 $tmp131 	%argrw{"wrr"}
	add		$tmp133 $tmp132 ___761_c 	%argrw{"wrr"}
	compref		$tmp134 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp135 ___761_oc $tmp134 	%argrw{"wrr"}
	compref		$tmp136 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp137 $tmp135 $tmp136 	%argrw{"wrr"}
	compref		$tmp138 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp139 $tmp138 ___761_s 	%argrw{"wrr"}
	sub		$tmp140 $tmp137 $tmp139 	%argrw{"wrr"}
	compref		$tmp141 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp142 ___761_oc $tmp141 	%argrw{"wrr"}
	compref		$tmp143 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp144 $tmp142 $tmp143 	%argrw{"wrr"}
	compref		$tmp145 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp146 $tmp145 ___761_s 	%argrw{"wrr"}
	add		$tmp147 $tmp144 $tmp146 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:162
#                   oc * nAxis[2] * nAxis[0] - nAxis[1] * s,  oc * nAxis[1] * nAxis[2] + nAxis[0] * s,  oc * nAxis[2] * nAxis[2] + c,             0.0,
	compref		$tmp148 ___761_nAxis $const1 	%line{162} %argrw{"wrr"}
	mul		$tmp149 ___761_oc $tmp148 	%argrw{"wrr"}
	compref		$tmp150 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp151 $tmp149 $tmp150 	%argrw{"wrr"}
	compref		$tmp152 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp153 $tmp152 ___761_s 	%argrw{"wrr"}
	add		$tmp154 $tmp151 $tmp153 	%argrw{"wrr"}
	compref		$tmp155 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp156 ___761_oc $tmp155 	%argrw{"wrr"}
	compref		$tmp157 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp158 $tmp156 $tmp157 	%argrw{"wrr"}
	add		$tmp159 $tmp158 ___761_c 	%argrw{"wrr"}
	compref		$tmp160 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp161 ___761_oc $tmp160 	%argrw{"wrr"}
	compref		$tmp162 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp163 $tmp161 $tmp162 	%argrw{"wrr"}
	compref		$tmp164 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp165 $tmp164 ___761_s 	%argrw{"wrr"}
	sub		$tmp166 $tmp163 $tmp165 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:163
#                   0.0,                                      0.0,                                      0.0,                                      1.0);
	compref		$tmp167 ___761_nAxis $const13 	%line{163} %argrw{"wrr"}
	mul		$tmp168 ___761_oc $tmp167 	%argrw{"wrr"}
	compref		$tmp169 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp170 $tmp168 $tmp169 	%argrw{"wrr"}
	compref		$tmp171 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp172 $tmp171 ___761_s 	%argrw{"wrr"}
	sub		$tmp173 $tmp170 $tmp172 	%argrw{"wrr"}
	compref		$tmp174 ___761_nAxis $const12 	%argrw{"wrr"}
	mul		$tmp175 ___761_oc $tmp174 	%argrw{"wrr"}
	compref		$tmp176 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp177 $tmp175 $tmp176 	%argrw{"wrr"}
	compref		$tmp178 ___761_nAxis $const1 	%argrw{"wrr"}
	mul		$tmp179 $tmp178 ___761_s 	%argrw{"wrr"}
	add		$tmp180 $tmp177 $tmp179 	%argrw{"wrr"}
	compref		$tmp181 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp182 ___761_oc $tmp181 	%argrw{"wrr"}
	compref		$tmp183 ___761_nAxis $const13 	%argrw{"wrr"}
	mul		$tmp184 $tmp182 $tmp183 	%argrw{"wrr"}
	add		$tmp185 $tmp184 ___761_c 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:161
#                   oc * nAxis[0] * nAxis[1] + nAxis[2] * s,  oc * nAxis[1] * nAxis[1] + c,             oc * nAxis[1] * nAxis[2] - nAxis[0] * s,  0.0,
	matrix		___762_m $tmp133 $tmp140 $tmp147 $const5 $tmp154 $tmp159 $tmp166 $const5 $tmp173 $tmp180 $tmp185 $const5 $const5 $const5 $const5 $const8 	%line{161} %argrw{"wrrrrrrrrrrrrrrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:171
#     result = vector(trans.x, trans.y, trans.z);
	compref		$tmp186.x geomprop_Tworld_out $const1 	%line{171} %argrw{"wrr"}
	compref		$tmp186.y geomprop_Tworld_out $const12 	%argrw{"wrr"}
	compref		$tmp186.z geomprop_Tworld_out $const13 	%argrw{"wrr"}
	assign		$tmp186.w $const8 	%argrw{"wr"}
	functioncall	$const2 320 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:386
#     return vector4 (M[0][0]*p.x + M[0][1]*p.y + M[0][2]*p.z + M[0][2]*p.w,
	mxcompref	$tmp187 ___762_m $const1 $const1 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{386} %argrw{"wrrr"}
	mul		$tmp188 $tmp187 $tmp186.x 	%argrw{"wrr"}
	mxcompref	$tmp189 ___762_m $const1 $const12 	%argrw{"wrrr"}
	mul		$tmp190 $tmp189 $tmp186.y 	%argrw{"wrr"}
	add		$tmp191 $tmp188 $tmp190 	%argrw{"wrr"}
	mxcompref	$tmp192 ___762_m $const1 $const13 	%argrw{"wrrr"}
	mul		$tmp193 $tmp192 $tmp186.z 	%argrw{"wrr"}
	add		$tmp194 $tmp191 $tmp193 	%argrw{"wrr"}
	mxcompref	$tmp195 ___762_m $const1 $const13 	%argrw{"wrrr"}
	mul		$tmp196 $tmp195 $tmp186.w 	%argrw{"wrr"}
	add		___762_trans.x $tmp194 $tmp196 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:387
#                     M[1][0]*p.x + M[1][1]*p.y + M[1][2]*p.z + M[1][2]*p.w,
	mxcompref	$tmp197 ___762_m $const12 $const1 	%line{387} %argrw{"wrrr"}
	mul		$tmp198 $tmp197 $tmp186.x 	%argrw{"wrr"}
	mxcompref	$tmp199 ___762_m $const12 $const12 	%argrw{"wrrr"}
	mul		$tmp200 $tmp199 $tmp186.y 	%argrw{"wrr"}
	add		$tmp201 $tmp198 $tmp200 	%argrw{"wrr"}
	mxcompref	$tmp202 ___762_m $const12 $const13 	%argrw{"wrrr"}
	mul		$tmp203 $tmp202 $tmp186.z 	%argrw{"wrr"}
	add		$tmp204 $tmp201 $tmp203 	%argrw{"wrr"}
	mxcompref	$tmp205 ___762_m $const12 $const13 	%argrw{"wrrr"}
	mul		$tmp206 $tmp205 $tmp186.w 	%argrw{"wrr"}
	add		___762_trans.y $tmp204 $tmp206 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:388
#                     M[2][0]*p.x + M[2][1]*p.y + M[2][2]*p.z + M[2][2]*p.w,
	mxcompref	$tmp207 ___762_m $const13 $const1 	%line{388} %argrw{"wrrr"}
	mul		$tmp208 $tmp207 $tmp186.x 	%argrw{"wrr"}
	mxcompref	$tmp209 ___762_m $const13 $const12 	%argrw{"wrrr"}
	mul		$tmp210 $tmp209 $tmp186.y 	%argrw{"wrr"}
	add		$tmp211 $tmp208 $tmp210 	%argrw{"wrr"}
	mxcompref	$tmp212 ___762_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp213 $tmp212 $tmp186.z 	%argrw{"wrr"}
	add		$tmp214 $tmp211 $tmp213 	%argrw{"wrr"}
	mxcompref	$tmp215 ___762_m $const13 $const13 	%argrw{"wrrr"}
	mul		$tmp216 $tmp215 $tmp186.w 	%argrw{"wrr"}
	add		___762_trans.z $tmp214 $tmp216 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:389
#                     M[3][0]*p.x + M[3][1]*p.y + M[3][2]*p.z + M[3][2]*p.w);
	mxcompref	$tmp217 ___762_m $const24 $const1 	%line{389} %argrw{"wrrr"}
	mul		$tmp218 $tmp217 $tmp186.x 	%argrw{"wrr"}
	mxcompref	$tmp219 ___762_m $const24 $const12 	%argrw{"wrrr"}
	mul		$tmp220 $tmp219 $tmp186.y 	%argrw{"wrr"}
	add		$tmp221 $tmp218 $tmp220 	%argrw{"wrr"}
	mxcompref	$tmp222 ___762_m $const24 $const13 	%argrw{"wrrr"}
	mul		$tmp223 $tmp222 $tmp186.z 	%argrw{"wrr"}
	add		$tmp224 $tmp221 $tmp223 	%argrw{"wrr"}
	mxcompref	$tmp225 ___762_m $const24 $const13 	%argrw{"wrrr"}
	mul		$tmp226 $tmp225 $tmp186.w 	%argrw{"wrr"}
	add		___762_trans.w $tmp224 $tmp226 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:172
# }
	vector		___781_tangent_rotate_out ___762_trans.x ___762_trans.y ___762_trans.z 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{172} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:380
#     vector subsurface_radius_scaled_out = subsurface_radius_vector_out * subsurface_scale;
	mul		___781_coat_gamma_multiply_out ___781_coat_clamped_out coat_affect_color 	%line{380} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:381
#     color emission_weight_attenuated_out = emission_weight_out * coat_emission_attenuation_out;
	mul		___781_subsurface_radius_scaled_out ___781_subsurface_radius_vector_out subsurface_scale 	%line{381} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:382
#     vector coat_tangent_rotate_normalize_out = normalize(coat_tangent_rotate_out);
	mul		___781_emission_weight_attenuated_out ___781_emission_weight_out ___781_coat_emission_attenuation_out 	%line{382} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:383
#     float coat_affected_roughness_fg_tmp = 1;
	normalize	___781_coat_tangent_rotate_normalize_out ___781_coat_tangent_rotate_out 	%line{383} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:384
#     float coat_affected_roughness_out = mix(specular_roughness, coat_affected_roughness_fg_tmp, coat_affect_roughness_multiply2_out);
	assign		___781_coat_affected_roughness_fg_tmp $const12 	%line{384} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:385
#     vector tangent_rotate_normalize_out = normalize(tangent_rotate_out);
	mix		___781_coat_affected_roughness_out specular_roughness ___781_coat_affected_roughness_fg_tmp ___781_coat_affect_roughness_multiply2_out 	%line{385} %argrw{"wrrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:386
#     float coat_gamma_in2_tmp = 1;
	normalize	___781_tangent_rotate_normalize_out ___781_tangent_rotate_out 	%line{386} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:387
#     float coat_gamma_out = mx_add(coat_gamma_multiply_out, coat_gamma_in2_tmp);
	assign		___781_coat_gamma_in2_tmp $const12 	%line{387} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:388
#     vector coat_tangent_out = vector(0.0);
	functioncall	$const27 331 	%line{388} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/mx_funcs.h:37
# float mx_add (float a, float b) { return a+b; }
	add		___781_coat_gamma_out ___781_coat_gamma_multiply_out ___781_coat_gamma_in2_tmp 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/mx_funcs.h"} %line{37} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:389
#     if (coat_anisotropy > 0)
	assign		___781_coat_tangent_out $const18 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{389} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:390
#     {
	gt		$tmp227 coat_anisotropy $const1 	%line{390} %argrw{"wrr"}
	if		$tmp227 335 336 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:392
#     }
	assign		___781_coat_tangent_out ___781_coat_tangent_rotate_normalize_out 	%line{392} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:396
#     }
	assign		___781_coat_tangent_out geomprop_Tworld_out 	%line{396} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:398
#     mx_roughness_anisotropy(coat_affected_roughness_out, specular_anisotropy, main_roughness_out);
	assign		___781_main_roughness_out.x $const5 	%line{398} %argrw{"wr"}
	assign		___781_main_roughness_out.y $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:399
#     vector main_tangent_out = vector(0.0);
	functioncall	$const6 357 	%line{399} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:19
#     if (anisotropy > 0.0)
	mul		$tmp228 ___781_coat_affected_roughness_out ___781_coat_affected_roughness_out 	%line{19} %argrw{"wrr"}
	functioncall	$const9 343 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp229 $tmp228 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___741_roughness_sqr $tmp229 $const7 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:20
#     {
	gt		$tmp230 specular_anisotropy $const5 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{20} %argrw{"wrr"}
	if		$tmp230 355 357 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:22
#         result.x = min(roughness_sqr / aspect, 1.0);
	functioncall	$const9 348 	%line{22} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp232 specular_anisotropy $const10 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp231 $tmp232 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:22
#         result.x = min(roughness_sqr / aspect, 1.0);
	sub		$tmp233 $const8 $tmp231 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{22} %argrw{"wrr"}
	sqrt		___742_aspect $tmp233 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:23
#         result.y = roughness_sqr * aspect;
	div		$tmp234 ___741_roughness_sqr ___742_aspect 	%line{23} %argrw{"wrr"}
	min		___781_main_roughness_out.x $tmp234 $const8 	%argrw{"wrr"}
	assign		___781_main_roughness_out.x ___781_main_roughness_out.x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:24
#     }
	mul		___781_main_roughness_out.y ___741_roughness_sqr ___742_aspect 	%line{24} %argrw{"wrr"}
	assign		___781_main_roughness_out.y ___781_main_roughness_out.y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:28
#         result.y = roughness_sqr;
	assign		___781_main_roughness_out.x ___741_roughness_sqr 	%line{28} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:29
#     }
	assign		___781_main_roughness_out.y ___741_roughness_sqr 	%line{29} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:400
#     if (specular_anisotropy > 0)
	assign		___781_main_tangent_out $const18 	%line{400} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:401
#     {
	gt		$tmp235 specular_anisotropy $const1 	%line{401} %argrw{"wrr"}
	if		$tmp235 361 362 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:403
#     }
	assign		___781_main_tangent_out ___781_tangent_rotate_normalize_out 	%line{403} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:407
#     }
	assign		___781_main_tangent_out geomprop_Tworld_out 	%line{407} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:409
#     color coat_affected_diffuse_color_out = pow(base_color, coat_gamma_out);
	pow		___781_coat_affected_subsurface_color_out subsurface_color ___781_coat_gamma_out 	%line{409} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:410
#     BSDF coat_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	pow		___781_coat_affected_diffuse_color_out base_color ___781_coat_gamma_out 	%line{410} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:411
#     mx_dielectric_bsdf(coat, color(1, 1, 1), coat_IOR, coat_roughness_vector_out, coat_normal, coat_tangent_out, "ggx", "R", coat_bsdf_out);
	assign		___781_coat_bsdf_out.response ___781_null_closure 	%line{411} %argrw{"wr"}
	assign		___781_coat_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_coat_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_coat_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:412
#     BSDF metal_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const30 899 	%line{412} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:256
#     {
	eq		$tmp237 $const29 $const31 	%line{256} %argrw{"wrr"}
	if		$tmp237 378 378 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:258
#         bsdf.throughput = tint * weight;
	closure		$tmp238 $const32 $const28 geomprop_Nworld_out ___781_coat_tangent_out ___781_coat_roughness_vector_out.x ___781_coat_roughness_vector_out.y coat_IOR $const12 	%line{258} %argrw{"wrrrrrrrr"}
	mul		$tmp239 $const14 coat 	%argrw{"wrr"}
	mul		___781_coat_bsdf_out.response $tmp238 $tmp239 	%argrw{"wrr"}
	assign		___781_coat_bsdf_out.response ___781_coat_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:259
#         return;
	mul		___781_coat_bsdf_out.throughput $const14 coat 	%line{259} %argrw{"wrr"}
	assign		___781_coat_bsdf_out.throughput ___781_coat_bsdf_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:260
#     }
	return	%line{260}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:263
#     float F0 = mx_ior_to_f0(ior);
	neg		$tmp241 I 	%line{263} %argrw{"wr"}
	dot		$tmp240 geomprop_Nworld_out $tmp241 	%argrw{"wrr"}
	functioncall	$const9 383 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp242 $tmp240 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_NdotV $tmp242 $const7 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:264
#     float F = mx_fresnel_schlick(NdotV, F0);
	functioncall	$const33 389 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{264} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:203
# }
	sub		$tmp243 coat_IOR $const8 	%line{203} %argrw{"wrr"}
	add		$tmp244 coat_IOR $const8 	%argrw{"wrr"}
	div		$tmp245 $tmp243 $tmp244 	%argrw{"wrr"}
	functioncall	$const34 389 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___771_F0 $tmp245 $tmp245 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:265
# 
	functioncall	$const35 403 	%line{265} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:75
#     float x5 = mx_pow5(x);
	sub		$tmp246 $const8 ___771_NdotV 	%line{75} %argrw{"wrr"}
	functioncall	$const9 394 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp247 $tmp246 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___750_x $tmp247 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:76
#     return F0 + (1.0 - F0) * x5;
	functioncall	$const36 400 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{76} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	functioncall	$const34 397 	%line{55} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp249 ___750_x ___750_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	functioncall	$const34 399 	%line{55} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp248 $tmp249 $tmp249 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	mul		___750_x5 $tmp248 ___750_x 	%line{55} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:77
# }
	sub		$tmp250 $const8 ___771_F0 	%line{77} %argrw{"wrr"}
	mul		$tmp251 $tmp250 ___750_x5 	%argrw{"wrr"}
	add		___771_F ___771_F0 $tmp251 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:271
#     float avgAlpha = mx_average_alpha(safeAlpha);
	functioncall	$const9 415 	%line{271} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:215
#     return clamp(in, vector2(low, low), vector2(high, high));
	assign		$tmp252.x $const7 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{215} %argrw{"wr"}
	assign		$tmp252.y $const7 	%argrw{"wr"}
	assign		$tmp253.x $const8 	%argrw{"wr"}
	assign		$tmp253.y $const8 	%argrw{"wr"}
	functioncall	$const9 415 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:209
#     return vector2 (clamp(in.x, low.x, high.x),
	functioncall	$const9 412 	%line{209} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp254 ___781_coat_roughness_vector_out.x $tmp253.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_safeAlpha.x $tmp254 $tmp252.x 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:210
#                     clamp(in.y, low.y, high.y));
	functioncall	$const9 415 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{210} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp255 ___781_coat_roughness_vector_out.y $tmp253.y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_safeAlpha.y $tmp255 $tmp252.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:272
#     float comp = mx_ggx_energy_compensation(NdotV, avgAlpha, F);
	functioncall	$const37 418 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{272} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:197
# }
	mul		$tmp256 ___771_safeAlpha.x ___771_safeAlpha.y 	%line{197} %argrw{"wrr"}
	sqrt		___771_avgAlpha $tmp256 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:273
# 
	functioncall	$const38 651 	%line{273} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:250
#     return result[0];
	assign		$tmp257 ___771_F 	%line{250} %argrw{"wr"}
	functioncall	$const38 650 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:244
#     return 1.0 + Fss * (1.0 - Ess) / Ess;
	functioncall	$const39 646 	%line{244} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:230
#     return result[0];
	assign		$tmp258 $const8 	%line{230} %argrw{"wr"}
	assign		$tmp259 $const8 	%argrw{"wr"}
	functioncall	$const39 645 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:209
#     float y = alpha;
	assign		___766_x ___771_NdotV 	%line{209} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:210
#     float x2 = mx_square(x);
	assign		___766_y ___771_avgAlpha 	%line{210} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:211
#     float y2 = mx_square(y);
	functioncall	$const34 429 	%line{211} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_x2 ___766_x ___766_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:212
#     vector4 r = vector4(0.1003, 0.9345, 1.0, 1.0) +
	functioncall	$const34 431 	%line{212} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_y2 ___766_y ___766_y 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:213
#                 vector4(-0.6303, -2.323, -1.765, 0.2281) * x +
	assign		$tmp267.x $const40 	%line{213} %argrw{"wr"}
	assign		$tmp267.y $const41 	%argrw{"wr"}
	assign		$tmp267.z $const8 	%argrw{"wr"}
	assign		$tmp267.w $const8 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:214
#                 vector4(9.748, 2.229, 8.263, 15.94) * y +
	assign		$tmp269.x $const42 	%line{214} %argrw{"wr"}
	assign		$tmp269.y $const43 	%argrw{"wr"}
	assign		$tmp269.z $const44 	%argrw{"wr"}
	assign		$tmp269.w $const45 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 449 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp270.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp270.y ___766_x 	%argrw{"wr"}
	assign		$tmp270.z ___766_x 	%argrw{"wr"}
	assign		$tmp270.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 449 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp268.x $tmp269.x $tmp270.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp268.y $tmp269.y $tmp270.y 	%argrw{"wrr"}
	mul		$tmp268.z $tmp269.z $tmp270.z 	%argrw{"wrr"}
	mul		$tmp268.w $tmp269.w $tmp270.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 454 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp266.x $tmp267.x $tmp268.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp266.y $tmp267.y $tmp268.y 	%argrw{"wrr"}
	add		$tmp266.z $tmp267.z $tmp268.z 	%argrw{"wrr"}
	add		$tmp266.w $tmp267.w $tmp268.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:215
#                 vector4(-2.038, -3.748, 11.53, -55.83) * x * y +
	assign		$tmp272.x $const48 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{215} %argrw{"wr"}
	assign		$tmp272.y $const49 	%argrw{"wr"}
	assign		$tmp272.z $const50 	%argrw{"wr"}
	assign		$tmp272.w $const51 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 468 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp273.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp273.y ___766_y 	%argrw{"wr"}
	assign		$tmp273.z ___766_y 	%argrw{"wr"}
	assign		$tmp273.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 468 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp271.x $tmp272.x $tmp273.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp271.y $tmp272.y $tmp273.y 	%argrw{"wrr"}
	mul		$tmp271.z $tmp272.z $tmp273.z 	%argrw{"wrr"}
	mul		$tmp271.w $tmp272.w $tmp273.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 473 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp265.x $tmp266.x $tmp271.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp265.y $tmp266.y $tmp271.y 	%argrw{"wrr"}
	add		$tmp265.z $tmp266.z $tmp271.z 	%argrw{"wrr"}
	add		$tmp265.w $tmp266.w $tmp271.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:216
#                 vector4(29.34, 1.424, 28.96, 13.08) * x2 +
	assign		$tmp276.x $const52 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{216} %argrw{"wr"}
	assign		$tmp276.y $const53 	%argrw{"wr"}
	assign		$tmp276.z $const54 	%argrw{"wr"}
	assign		$tmp276.w $const55 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 487 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp277.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp277.y ___766_x 	%argrw{"wr"}
	assign		$tmp277.z ___766_x 	%argrw{"wr"}
	assign		$tmp277.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 487 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp275.x $tmp276.x $tmp277.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp275.y $tmp276.y $tmp277.y 	%argrw{"wrr"}
	mul		$tmp275.z $tmp276.z $tmp277.z 	%argrw{"wrr"}
	mul		$tmp275.w $tmp276.w $tmp277.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 497 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp278.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp278.y ___766_y 	%argrw{"wr"}
	assign		$tmp278.z ___766_y 	%argrw{"wr"}
	assign		$tmp278.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 497 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp274.x $tmp275.x $tmp278.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp274.y $tmp275.y $tmp278.y 	%argrw{"wrr"}
	mul		$tmp274.z $tmp275.z $tmp278.z 	%argrw{"wrr"}
	mul		$tmp274.w $tmp275.w $tmp278.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 502 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp264.x $tmp265.x $tmp274.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp264.y $tmp265.y $tmp274.y 	%argrw{"wrr"}
	add		$tmp264.z $tmp265.z $tmp274.z 	%argrw{"wrr"}
	add		$tmp264.w $tmp265.w $tmp274.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:217
#                 vector4(-8.245, -0.7684, -7.507, 41.26) * y2 +
	assign		$tmp280.x $const56 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{217} %argrw{"wr"}
	assign		$tmp280.y $const57 	%argrw{"wr"}
	assign		$tmp280.z $const58 	%argrw{"wr"}
	assign		$tmp280.w $const59 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 516 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp281.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp281.y ___766_x2 	%argrw{"wr"}
	assign		$tmp281.z ___766_x2 	%argrw{"wr"}
	assign		$tmp281.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 516 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp279.x $tmp280.x $tmp281.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp279.y $tmp280.y $tmp281.y 	%argrw{"wrr"}
	mul		$tmp279.z $tmp280.z $tmp281.z 	%argrw{"wrr"}
	mul		$tmp279.w $tmp280.w $tmp281.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 521 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp263.x $tmp264.x $tmp279.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp263.y $tmp264.y $tmp279.y 	%argrw{"wrr"}
	add		$tmp263.z $tmp264.z $tmp279.z 	%argrw{"wrr"}
	add		$tmp263.w $tmp264.w $tmp279.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:218
#                 vector4(-26.44, 1.436, -36.11, 54.9) * x2 * y +
	assign		$tmp283.x $const60 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{218} %argrw{"wr"}
	assign		$tmp283.y $const61 	%argrw{"wr"}
	assign		$tmp283.z $const62 	%argrw{"wr"}
	assign		$tmp283.w $const63 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 535 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp284.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp284.y ___766_y2 	%argrw{"wr"}
	assign		$tmp284.z ___766_y2 	%argrw{"wr"}
	assign		$tmp284.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 535 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp282.x $tmp283.x $tmp284.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp282.y $tmp283.y $tmp284.y 	%argrw{"wrr"}
	mul		$tmp282.z $tmp283.z $tmp284.z 	%argrw{"wrr"}
	mul		$tmp282.w $tmp283.w $tmp284.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 540 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp262.x $tmp263.x $tmp282.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp262.y $tmp263.y $tmp282.y 	%argrw{"wrr"}
	add		$tmp262.z $tmp263.z $tmp282.z 	%argrw{"wrr"}
	add		$tmp262.w $tmp263.w $tmp282.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:219
#                 vector4(19.99, 0.2913, 15.86, 300.2) * x * y2 +
	assign		$tmp287.x $const64 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{219} %argrw{"wr"}
	assign		$tmp287.y $const65 	%argrw{"wr"}
	assign		$tmp287.z $const66 	%argrw{"wr"}
	assign		$tmp287.w $const67 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 554 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp288.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp288.y ___766_x2 	%argrw{"wr"}
	assign		$tmp288.z ___766_x2 	%argrw{"wr"}
	assign		$tmp288.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 554 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp286.x $tmp287.x $tmp288.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp286.y $tmp287.y $tmp288.y 	%argrw{"wrr"}
	mul		$tmp286.z $tmp287.z $tmp288.z 	%argrw{"wrr"}
	mul		$tmp286.w $tmp287.w $tmp288.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 564 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp289.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp289.y ___766_y 	%argrw{"wr"}
	assign		$tmp289.z ___766_y 	%argrw{"wr"}
	assign		$tmp289.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 564 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp285.x $tmp286.x $tmp289.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp285.y $tmp286.y $tmp289.y 	%argrw{"wrr"}
	mul		$tmp285.z $tmp286.z $tmp289.z 	%argrw{"wrr"}
	mul		$tmp285.w $tmp286.w $tmp289.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 569 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp261.x $tmp262.x $tmp285.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp261.y $tmp262.y $tmp285.y 	%argrw{"wrr"}
	add		$tmp261.z $tmp262.z $tmp285.z 	%argrw{"wrr"}
	add		$tmp261.w $tmp262.w $tmp285.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:220
#                 vector4(-5.448, 0.6286, 33.37, -285.1) * x2 * y2;
	assign		$tmp292.x $const68 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{220} %argrw{"wr"}
	assign		$tmp292.y $const69 	%argrw{"wr"}
	assign		$tmp292.z $const70 	%argrw{"wr"}
	assign		$tmp292.w $const71 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 583 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp293.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp293.y ___766_x 	%argrw{"wr"}
	assign		$tmp293.z ___766_x 	%argrw{"wr"}
	assign		$tmp293.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 583 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp291.x $tmp292.x $tmp293.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp291.y $tmp292.y $tmp293.y 	%argrw{"wrr"}
	mul		$tmp291.z $tmp292.z $tmp293.z 	%argrw{"wrr"}
	mul		$tmp291.w $tmp292.w $tmp293.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 593 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp294.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp294.y ___766_y2 	%argrw{"wr"}
	assign		$tmp294.z ___766_y2 	%argrw{"wr"}
	assign		$tmp294.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 593 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp290.x $tmp291.x $tmp294.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp290.y $tmp291.y $tmp294.y 	%argrw{"wrr"}
	mul		$tmp290.z $tmp291.z $tmp294.z 	%argrw{"wrr"}
	mul		$tmp290.w $tmp291.w $tmp294.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 598 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp260.x $tmp261.x $tmp290.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp260.y $tmp261.y $tmp290.y 	%argrw{"wrr"}
	add		$tmp260.z $tmp261.z $tmp290.z 	%argrw{"wrr"}
	add		$tmp260.w $tmp261.w $tmp290.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:221
#     vector2 AB = vector2(r.x, r.y) / vector2(r.z, r.w);
	assign		$tmp297.x $const72 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{221} %argrw{"wr"}
	assign		$tmp297.y $const73 	%argrw{"wr"}
	assign		$tmp297.z $const74 	%argrw{"wr"}
	assign		$tmp297.w $const75 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 612 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp298.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp298.y ___766_x2 	%argrw{"wr"}
	assign		$tmp298.z ___766_x2 	%argrw{"wr"}
	assign		$tmp298.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 612 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp296.x $tmp297.x $tmp298.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp296.y $tmp297.y $tmp298.y 	%argrw{"wrr"}
	mul		$tmp296.z $tmp297.z $tmp298.z 	%argrw{"wrr"}
	mul		$tmp296.w $tmp297.w $tmp298.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 622 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp299.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp299.y ___766_y2 	%argrw{"wr"}
	assign		$tmp299.z ___766_y2 	%argrw{"wr"}
	assign		$tmp299.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 622 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp295.x $tmp296.x $tmp299.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp295.y $tmp296.y $tmp299.y 	%argrw{"wrr"}
	mul		$tmp295.z $tmp296.z $tmp299.z 	%argrw{"wrr"}
	mul		$tmp295.w $tmp296.w $tmp299.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 627 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___766_r.x $tmp260.x $tmp295.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		___766_r.y $tmp260.y $tmp295.y 	%argrw{"wrr"}
	add		___766_r.z $tmp260.z $tmp295.z 	%argrw{"wrr"}
	add		___766_r.w $tmp260.w $tmp295.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:222
#     AB.x = clamp(AB.x, 0.0, 1.0);
	assign		$tmp300.x ___766_r.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{222} %argrw{"wr"}
	assign		$tmp300.y ___766_r.y 	%argrw{"wr"}
	assign		$tmp301.x ___766_r.z 	%argrw{"wr"}
	assign		$tmp301.y ___766_r.w 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const76 634 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___766_AB.x $tmp300.x $tmp301.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{103} %argrw{"wrr"}
	div		___766_AB.y $tmp300.y $tmp301.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	functioncall	$const9 637 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp302 ___766_AB.x $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.x $tmp302 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	assign		___766_AB.x ___766_AB.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	functioncall	$const9 641 	%line{224} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp303 ___766_AB.y $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.y $tmp303 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	assign		___766_AB.y ___766_AB.y 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{224} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:225
# }
	mul		$tmp304 $tmp258 ___766_AB.x 	%line{225} %argrw{"wrr"}
	mul		$tmp305 $tmp259 ___766_AB.y 	%argrw{"wrr"}
	add		___767_result $tmp304 $tmp305 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:231
# }
	compref		___769_Ess ___767_result $const1 	%line{231} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:245
# }
	sub		$tmp306 $const8 ___769_Ess 	%line{245} %argrw{"wrr"}
	mul		$tmp307 $tmp257 $tmp306 	%argrw{"wrr"}
	div		$tmp308 $tmp307 ___769_Ess 	%argrw{"wrr"}
	add		___770_result $const8 $tmp308 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:251
# }
	compref		___771_comp ___770_result $const1 	%line{251} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:275
#     {
	eq		$tmp309 $const29 $const29 	%line{275} %argrw{"wrr"}
	if		$tmp309 893 899 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:277
# 
	closure		$tmp310 $const32 $const28 geomprop_Nworld_out ___781_coat_tangent_out ___771_safeAlpha.x ___771_safeAlpha.y coat_IOR $const1 	%line{277} %argrw{"wrrrrrrrr"}
	mul		$tmp311 $const14 coat 	%argrw{"wrr"}
	mul		$tmp312 $tmp311 ___771_comp 	%argrw{"wrr"}
	mul		___781_coat_bsdf_out.response $tmp310 $tmp312 	%argrw{"wrr"}
	assign		___781_coat_bsdf_out.response ___781_coat_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:280
#         bsdf.throughput = 1.0 - dirAlbedo * weight;
	functioncall	$const39 888 	%line{280} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:236
#     return result[0];
	functioncall	$const33 665 	%line{236} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:203
# }
	sub		$tmp316 coat_IOR $const8 	%line{203} %argrw{"wrr"}
	add		$tmp317 coat_IOR $const8 	%argrw{"wrr"}
	div		$tmp318 $tmp316 $tmp317 	%argrw{"wrr"}
	functioncall	$const34 665 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp315 $tmp318 $tmp318 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:236
#     return result[0];
	assign		$tmp314 $tmp315 	%line{236} %argrw{"wr"}
	functioncall	$const39 887 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:209
#     float y = alpha;
	assign		___766_x ___771_NdotV 	%line{209} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:210
#     float x2 = mx_square(x);
	assign		___766_y ___771_avgAlpha 	%line{210} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:211
#     float y2 = mx_square(y);
	functioncall	$const34 671 	%line{211} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_x2 ___766_x ___766_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:212
#     vector4 r = vector4(0.1003, 0.9345, 1.0, 1.0) +
	functioncall	$const34 673 	%line{212} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_y2 ___766_y ___766_y 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:213
#                 vector4(-0.6303, -2.323, -1.765, 0.2281) * x +
	assign		$tmp327.x $const40 	%line{213} %argrw{"wr"}
	assign		$tmp327.y $const41 	%argrw{"wr"}
	assign		$tmp327.z $const8 	%argrw{"wr"}
	assign		$tmp327.w $const8 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:214
#                 vector4(9.748, 2.229, 8.263, 15.94) * y +
	assign		$tmp329.x $const42 	%line{214} %argrw{"wr"}
	assign		$tmp329.y $const43 	%argrw{"wr"}
	assign		$tmp329.z $const44 	%argrw{"wr"}
	assign		$tmp329.w $const45 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 691 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp330.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp330.y ___766_x 	%argrw{"wr"}
	assign		$tmp330.z ___766_x 	%argrw{"wr"}
	assign		$tmp330.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 691 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp328.x $tmp329.x $tmp330.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp328.y $tmp329.y $tmp330.y 	%argrw{"wrr"}
	mul		$tmp328.z $tmp329.z $tmp330.z 	%argrw{"wrr"}
	mul		$tmp328.w $tmp329.w $tmp330.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 696 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp326.x $tmp327.x $tmp328.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp326.y $tmp327.y $tmp328.y 	%argrw{"wrr"}
	add		$tmp326.z $tmp327.z $tmp328.z 	%argrw{"wrr"}
	add		$tmp326.w $tmp327.w $tmp328.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:215
#                 vector4(-2.038, -3.748, 11.53, -55.83) * x * y +
	assign		$tmp332.x $const48 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{215} %argrw{"wr"}
	assign		$tmp332.y $const49 	%argrw{"wr"}
	assign		$tmp332.z $const50 	%argrw{"wr"}
	assign		$tmp332.w $const51 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 710 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp333.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp333.y ___766_y 	%argrw{"wr"}
	assign		$tmp333.z ___766_y 	%argrw{"wr"}
	assign		$tmp333.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 710 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp331.x $tmp332.x $tmp333.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp331.y $tmp332.y $tmp333.y 	%argrw{"wrr"}
	mul		$tmp331.z $tmp332.z $tmp333.z 	%argrw{"wrr"}
	mul		$tmp331.w $tmp332.w $tmp333.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 715 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp325.x $tmp326.x $tmp331.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp325.y $tmp326.y $tmp331.y 	%argrw{"wrr"}
	add		$tmp325.z $tmp326.z $tmp331.z 	%argrw{"wrr"}
	add		$tmp325.w $tmp326.w $tmp331.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:216
#                 vector4(29.34, 1.424, 28.96, 13.08) * x2 +
	assign		$tmp336.x $const52 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{216} %argrw{"wr"}
	assign		$tmp336.y $const53 	%argrw{"wr"}
	assign		$tmp336.z $const54 	%argrw{"wr"}
	assign		$tmp336.w $const55 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 729 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp337.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp337.y ___766_x 	%argrw{"wr"}
	assign		$tmp337.z ___766_x 	%argrw{"wr"}
	assign		$tmp337.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 729 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp335.x $tmp336.x $tmp337.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp335.y $tmp336.y $tmp337.y 	%argrw{"wrr"}
	mul		$tmp335.z $tmp336.z $tmp337.z 	%argrw{"wrr"}
	mul		$tmp335.w $tmp336.w $tmp337.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 739 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp338.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp338.y ___766_y 	%argrw{"wr"}
	assign		$tmp338.z ___766_y 	%argrw{"wr"}
	assign		$tmp338.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 739 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp334.x $tmp335.x $tmp338.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp334.y $tmp335.y $tmp338.y 	%argrw{"wrr"}
	mul		$tmp334.z $tmp335.z $tmp338.z 	%argrw{"wrr"}
	mul		$tmp334.w $tmp335.w $tmp338.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 744 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp324.x $tmp325.x $tmp334.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp324.y $tmp325.y $tmp334.y 	%argrw{"wrr"}
	add		$tmp324.z $tmp325.z $tmp334.z 	%argrw{"wrr"}
	add		$tmp324.w $tmp325.w $tmp334.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:217
#                 vector4(-8.245, -0.7684, -7.507, 41.26) * y2 +
	assign		$tmp340.x $const56 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{217} %argrw{"wr"}
	assign		$tmp340.y $const57 	%argrw{"wr"}
	assign		$tmp340.z $const58 	%argrw{"wr"}
	assign		$tmp340.w $const59 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 758 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp341.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp341.y ___766_x2 	%argrw{"wr"}
	assign		$tmp341.z ___766_x2 	%argrw{"wr"}
	assign		$tmp341.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 758 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp339.x $tmp340.x $tmp341.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp339.y $tmp340.y $tmp341.y 	%argrw{"wrr"}
	mul		$tmp339.z $tmp340.z $tmp341.z 	%argrw{"wrr"}
	mul		$tmp339.w $tmp340.w $tmp341.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 763 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp323.x $tmp324.x $tmp339.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp323.y $tmp324.y $tmp339.y 	%argrw{"wrr"}
	add		$tmp323.z $tmp324.z $tmp339.z 	%argrw{"wrr"}
	add		$tmp323.w $tmp324.w $tmp339.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:218
#                 vector4(-26.44, 1.436, -36.11, 54.9) * x2 * y +
	assign		$tmp343.x $const60 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{218} %argrw{"wr"}
	assign		$tmp343.y $const61 	%argrw{"wr"}
	assign		$tmp343.z $const62 	%argrw{"wr"}
	assign		$tmp343.w $const63 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 777 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp344.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp344.y ___766_y2 	%argrw{"wr"}
	assign		$tmp344.z ___766_y2 	%argrw{"wr"}
	assign		$tmp344.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 777 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp342.x $tmp343.x $tmp344.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp342.y $tmp343.y $tmp344.y 	%argrw{"wrr"}
	mul		$tmp342.z $tmp343.z $tmp344.z 	%argrw{"wrr"}
	mul		$tmp342.w $tmp343.w $tmp344.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 782 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp322.x $tmp323.x $tmp342.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp322.y $tmp323.y $tmp342.y 	%argrw{"wrr"}
	add		$tmp322.z $tmp323.z $tmp342.z 	%argrw{"wrr"}
	add		$tmp322.w $tmp323.w $tmp342.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:219
#                 vector4(19.99, 0.2913, 15.86, 300.2) * x * y2 +
	assign		$tmp347.x $const64 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{219} %argrw{"wr"}
	assign		$tmp347.y $const65 	%argrw{"wr"}
	assign		$tmp347.z $const66 	%argrw{"wr"}
	assign		$tmp347.w $const67 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 796 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp348.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp348.y ___766_x2 	%argrw{"wr"}
	assign		$tmp348.z ___766_x2 	%argrw{"wr"}
	assign		$tmp348.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 796 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp346.x $tmp347.x $tmp348.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp346.y $tmp347.y $tmp348.y 	%argrw{"wrr"}
	mul		$tmp346.z $tmp347.z $tmp348.z 	%argrw{"wrr"}
	mul		$tmp346.w $tmp347.w $tmp348.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 806 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp349.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp349.y ___766_y 	%argrw{"wr"}
	assign		$tmp349.z ___766_y 	%argrw{"wr"}
	assign		$tmp349.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 806 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp345.x $tmp346.x $tmp349.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp345.y $tmp346.y $tmp349.y 	%argrw{"wrr"}
	mul		$tmp345.z $tmp346.z $tmp349.z 	%argrw{"wrr"}
	mul		$tmp345.w $tmp346.w $tmp349.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 811 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp321.x $tmp322.x $tmp345.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp321.y $tmp322.y $tmp345.y 	%argrw{"wrr"}
	add		$tmp321.z $tmp322.z $tmp345.z 	%argrw{"wrr"}
	add		$tmp321.w $tmp322.w $tmp345.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:220
#                 vector4(-5.448, 0.6286, 33.37, -285.1) * x2 * y2;
	assign		$tmp352.x $const68 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{220} %argrw{"wr"}
	assign		$tmp352.y $const69 	%argrw{"wr"}
	assign		$tmp352.z $const70 	%argrw{"wr"}
	assign		$tmp352.w $const71 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 825 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp353.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp353.y ___766_x 	%argrw{"wr"}
	assign		$tmp353.z ___766_x 	%argrw{"wr"}
	assign		$tmp353.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 825 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp351.x $tmp352.x $tmp353.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp351.y $tmp352.y $tmp353.y 	%argrw{"wrr"}
	mul		$tmp351.z $tmp352.z $tmp353.z 	%argrw{"wrr"}
	mul		$tmp351.w $tmp352.w $tmp353.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 835 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp354.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp354.y ___766_y2 	%argrw{"wr"}
	assign		$tmp354.z ___766_y2 	%argrw{"wr"}
	assign		$tmp354.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 835 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp350.x $tmp351.x $tmp354.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp350.y $tmp351.y $tmp354.y 	%argrw{"wrr"}
	mul		$tmp350.z $tmp351.z $tmp354.z 	%argrw{"wrr"}
	mul		$tmp350.w $tmp351.w $tmp354.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 840 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp320.x $tmp321.x $tmp350.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp320.y $tmp321.y $tmp350.y 	%argrw{"wrr"}
	add		$tmp320.z $tmp321.z $tmp350.z 	%argrw{"wrr"}
	add		$tmp320.w $tmp321.w $tmp350.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:221
#     vector2 AB = vector2(r.x, r.y) / vector2(r.z, r.w);
	assign		$tmp357.x $const72 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{221} %argrw{"wr"}
	assign		$tmp357.y $const73 	%argrw{"wr"}
	assign		$tmp357.z $const74 	%argrw{"wr"}
	assign		$tmp357.w $const75 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 854 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp358.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp358.y ___766_x2 	%argrw{"wr"}
	assign		$tmp358.z ___766_x2 	%argrw{"wr"}
	assign		$tmp358.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 854 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp356.x $tmp357.x $tmp358.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp356.y $tmp357.y $tmp358.y 	%argrw{"wrr"}
	mul		$tmp356.z $tmp357.z $tmp358.z 	%argrw{"wrr"}
	mul		$tmp356.w $tmp357.w $tmp358.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 864 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp359.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp359.y ___766_y2 	%argrw{"wr"}
	assign		$tmp359.z ___766_y2 	%argrw{"wr"}
	assign		$tmp359.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 864 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp355.x $tmp356.x $tmp359.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp355.y $tmp356.y $tmp359.y 	%argrw{"wrr"}
	mul		$tmp355.z $tmp356.z $tmp359.z 	%argrw{"wrr"}
	mul		$tmp355.w $tmp356.w $tmp359.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 869 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___766_r.x $tmp320.x $tmp355.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		___766_r.y $tmp320.y $tmp355.y 	%argrw{"wrr"}
	add		___766_r.z $tmp320.z $tmp355.z 	%argrw{"wrr"}
	add		___766_r.w $tmp320.w $tmp355.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:222
#     AB.x = clamp(AB.x, 0.0, 1.0);
	assign		$tmp360.x ___766_r.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{222} %argrw{"wr"}
	assign		$tmp360.y ___766_r.y 	%argrw{"wr"}
	assign		$tmp361.x ___766_r.z 	%argrw{"wr"}
	assign		$tmp361.y ___766_r.w 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const76 876 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___766_AB.x $tmp360.x $tmp361.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{103} %argrw{"wrr"}
	div		___766_AB.y $tmp360.y $tmp361.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	functioncall	$const9 879 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp362 ___766_AB.x $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.x $tmp362 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	assign		___766_AB.x ___766_AB.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	functioncall	$const9 883 	%line{224} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp363 ___766_AB.y $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.y $tmp363 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	assign		___766_AB.y ___766_AB.y 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{224} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:225
# }
	mul		$tmp364 $tmp314 ___766_AB.x 	%line{225} %argrw{"wrr"}
	mul		$tmp365 $const14 ___766_AB.y 	%argrw{"wrr"}
	add		___768_result $tmp364 $tmp365 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:237
# }
	compref		$tmp313 ___768_result $const1 	%line{237} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:280
#         bsdf.throughput = 1.0 - dirAlbedo * weight;
	mul		___773_dirAlbedo $tmp313 ___771_comp 	%line{280} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:281
#     }
	mul		$tmp366 ___773_dirAlbedo coat 	%line{281} %argrw{"wrr"}
	sub		$tmp367 $const8 $tmp366 	%argrw{"wrr"}
	assign		$tmp368 $tmp367 	%argrw{"wr"}
	assign		___781_coat_bsdf_out.throughput $tmp368 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:285
#         bsdf.throughput = color(1.0);
	closure		$tmp369 $const32 $const28 geomprop_Nworld_out ___781_coat_tangent_out ___771_safeAlpha.x ___771_safeAlpha.y coat_IOR $const13 	%line{285} %argrw{"wrrrrrrrr"}
	mul		$tmp370 $const14 coat 	%argrw{"wrr"}
	mul		$tmp371 $tmp370 ___771_comp 	%argrw{"wrr"}
	mul		___781_coat_bsdf_out.response $tmp369 $tmp371 	%argrw{"wrr"}
	assign		___781_coat_bsdf_out.response ___781_coat_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:286
#     }
	assign		___781_coat_bsdf_out.throughput $const14 	%line{286} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:413
#     mx_conductor_bsdf(1, artistic_ior_ior, artistic_ior_extinction, main_roughness_out, normal1, main_tangent_out, "ggx", metal_bsdf_out);
	assign		___781_metal_bsdf_out.response ___781_null_closure 	%line{413} %argrw{"wr"}
	assign		___781_metal_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_metal_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_metal_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:414
#     BSDF specular_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const77 1180 	%line{414} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:293
# 
	assign		___781_metal_bsdf_out.throughput $const15 	%line{293} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:295
#     {
	lt		$tmp372 $const8 $const7 	%line{295} %argrw{"wrr"}
	if		$tmp372 909 909 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:297
#         return;
	assign		___781_metal_bsdf_out.response $const1 	%line{297} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:298
#     }
	return	%line{298}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:307
#     color F = mx_fresnel_conductor(NdotV, ior_n, ior_k);
	neg		$tmp374 I 	%line{307} %argrw{"wr"}
	dot		$tmp373 geomprop_Nworld_out $tmp374 	%argrw{"wrr"}
	fabs		___775_NdotV $tmp373 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:308
# 
	functioncall	$const78 930 	%line{308} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:60
#    vector n2_k2 = n*n + k*k;
	mul		___749_c2 ___775_NdotV ___775_NdotV 	%line{60} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:61
#    vector nc2 = 2.0 * n * cosTheta;
	mul		$tmp375 ___781_artistic_ior_ior ___781_artistic_ior_ior 	%line{61} %argrw{"wrr"}
	mul		$tmp376 ___781_artistic_ior_extinction ___781_artistic_ior_extinction 	%argrw{"wrr"}
	add		___749_n2_k2 $tmp375 $tmp376 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:62
# 
	mul		$tmp377 $const79 ___781_artistic_ior_ior 	%line{62} %argrw{"wrr"}
	mul		___749_nc2 $tmp377 ___775_NdotV 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:64
#    vector rp_a = n2_k2 * c2 + 1.0;
	add		___749_rs_a ___749_n2_k2 ___749_c2 	%line{64} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:65
#    vector rs = (rs_a - nc2) / (rs_a + nc2);
	mul		$tmp378 ___749_n2_k2 ___749_c2 	%line{65} %argrw{"wrr"}
	add		___749_rp_a $tmp378 $const8 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:66
#    vector rp = (rp_a - nc2) / (rp_a + nc2);
	sub		$tmp379 ___749_rs_a ___749_nc2 	%line{66} %argrw{"wrr"}
	add		$tmp380 ___749_rs_a ___749_nc2 	%argrw{"wrr"}
	div		___749_rs $tmp379 $tmp380 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:67
# 
	sub		$tmp381 ___749_rp_a ___749_nc2 	%line{67} %argrw{"wrr"}
	add		$tmp382 ___749_rp_a ___749_nc2 	%argrw{"wrr"}
	div		___749_rp $tmp381 $tmp382 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:69
# }
	add		$tmp383 ___749_rs ___749_rp 	%line{69} %argrw{"wrr"}
	mul		___775_F $const80 $tmp383 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:314
#     float avgAlpha = mx_average_alpha(safeAlpha);
	functioncall	$const9 942 	%line{314} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:215
#     return clamp(in, vector2(low, low), vector2(high, high));
	assign		$tmp384.x $const7 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{215} %argrw{"wr"}
	assign		$tmp384.y $const7 	%argrw{"wr"}
	assign		$tmp385.x $const8 	%argrw{"wr"}
	assign		$tmp385.y $const8 	%argrw{"wr"}
	functioncall	$const9 942 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:209
#     return vector2 (clamp(in.x, low.x, high.x),
	functioncall	$const9 939 	%line{209} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp386 ___781_main_roughness_out.x $tmp385.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___775_safeAlpha.x $tmp386 $tmp384.x 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:210
#                     clamp(in.y, low.y, high.y));
	functioncall	$const9 942 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{210} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp387 ___781_main_roughness_out.y $tmp385.y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___775_safeAlpha.y $tmp387 $tmp384.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:315
#     color comp = mx_ggx_energy_compensation(NdotV, avgAlpha, F);
	functioncall	$const37 945 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{315} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:197
# }
	mul		$tmp388 ___775_safeAlpha.x ___775_safeAlpha.y 	%line{197} %argrw{"wrr"}
	sqrt		___775_avgAlpha $tmp388 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:316
# 
	functioncall	$const38 1175 	%line{316} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:244
#     return 1.0 + Fss * (1.0 - Ess) / Ess;
	functioncall	$const39 1171 	%line{244} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:230
#     return result[0];
	assign		$tmp389 $const8 	%line{230} %argrw{"wr"}
	assign		$tmp390 $const8 	%argrw{"wr"}
	functioncall	$const39 1170 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:209
#     float y = alpha;
	assign		___766_x ___775_NdotV 	%line{209} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:210
#     float x2 = mx_square(x);
	assign		___766_y ___775_avgAlpha 	%line{210} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:211
#     float y2 = mx_square(y);
	functioncall	$const34 954 	%line{211} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_x2 ___766_x ___766_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:212
#     vector4 r = vector4(0.1003, 0.9345, 1.0, 1.0) +
	functioncall	$const34 956 	%line{212} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_y2 ___766_y ___766_y 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:213
#                 vector4(-0.6303, -2.323, -1.765, 0.2281) * x +
	assign		$tmp398.x $const40 	%line{213} %argrw{"wr"}
	assign		$tmp398.y $const41 	%argrw{"wr"}
	assign		$tmp398.z $const8 	%argrw{"wr"}
	assign		$tmp398.w $const8 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:214
#                 vector4(9.748, 2.229, 8.263, 15.94) * y +
	assign		$tmp400.x $const42 	%line{214} %argrw{"wr"}
	assign		$tmp400.y $const43 	%argrw{"wr"}
	assign		$tmp400.z $const44 	%argrw{"wr"}
	assign		$tmp400.w $const45 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 974 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp401.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp401.y ___766_x 	%argrw{"wr"}
	assign		$tmp401.z ___766_x 	%argrw{"wr"}
	assign		$tmp401.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 974 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp399.x $tmp400.x $tmp401.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp399.y $tmp400.y $tmp401.y 	%argrw{"wrr"}
	mul		$tmp399.z $tmp400.z $tmp401.z 	%argrw{"wrr"}
	mul		$tmp399.w $tmp400.w $tmp401.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 979 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp397.x $tmp398.x $tmp399.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp397.y $tmp398.y $tmp399.y 	%argrw{"wrr"}
	add		$tmp397.z $tmp398.z $tmp399.z 	%argrw{"wrr"}
	add		$tmp397.w $tmp398.w $tmp399.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:215
#                 vector4(-2.038, -3.748, 11.53, -55.83) * x * y +
	assign		$tmp403.x $const48 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{215} %argrw{"wr"}
	assign		$tmp403.y $const49 	%argrw{"wr"}
	assign		$tmp403.z $const50 	%argrw{"wr"}
	assign		$tmp403.w $const51 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 993 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp404.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp404.y ___766_y 	%argrw{"wr"}
	assign		$tmp404.z ___766_y 	%argrw{"wr"}
	assign		$tmp404.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 993 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp402.x $tmp403.x $tmp404.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp402.y $tmp403.y $tmp404.y 	%argrw{"wrr"}
	mul		$tmp402.z $tmp403.z $tmp404.z 	%argrw{"wrr"}
	mul		$tmp402.w $tmp403.w $tmp404.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 998 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp396.x $tmp397.x $tmp402.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp396.y $tmp397.y $tmp402.y 	%argrw{"wrr"}
	add		$tmp396.z $tmp397.z $tmp402.z 	%argrw{"wrr"}
	add		$tmp396.w $tmp397.w $tmp402.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:216
#                 vector4(29.34, 1.424, 28.96, 13.08) * x2 +
	assign		$tmp407.x $const52 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{216} %argrw{"wr"}
	assign		$tmp407.y $const53 	%argrw{"wr"}
	assign		$tmp407.z $const54 	%argrw{"wr"}
	assign		$tmp407.w $const55 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1012 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp408.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp408.y ___766_x 	%argrw{"wr"}
	assign		$tmp408.z ___766_x 	%argrw{"wr"}
	assign		$tmp408.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1012 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp406.x $tmp407.x $tmp408.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp406.y $tmp407.y $tmp408.y 	%argrw{"wrr"}
	mul		$tmp406.z $tmp407.z $tmp408.z 	%argrw{"wrr"}
	mul		$tmp406.w $tmp407.w $tmp408.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1022 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp409.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp409.y ___766_y 	%argrw{"wr"}
	assign		$tmp409.z ___766_y 	%argrw{"wr"}
	assign		$tmp409.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1022 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp405.x $tmp406.x $tmp409.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp405.y $tmp406.y $tmp409.y 	%argrw{"wrr"}
	mul		$tmp405.z $tmp406.z $tmp409.z 	%argrw{"wrr"}
	mul		$tmp405.w $tmp406.w $tmp409.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1027 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp395.x $tmp396.x $tmp405.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp395.y $tmp396.y $tmp405.y 	%argrw{"wrr"}
	add		$tmp395.z $tmp396.z $tmp405.z 	%argrw{"wrr"}
	add		$tmp395.w $tmp396.w $tmp405.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:217
#                 vector4(-8.245, -0.7684, -7.507, 41.26) * y2 +
	assign		$tmp411.x $const56 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{217} %argrw{"wr"}
	assign		$tmp411.y $const57 	%argrw{"wr"}
	assign		$tmp411.z $const58 	%argrw{"wr"}
	assign		$tmp411.w $const59 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1041 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp412.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp412.y ___766_x2 	%argrw{"wr"}
	assign		$tmp412.z ___766_x2 	%argrw{"wr"}
	assign		$tmp412.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1041 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp410.x $tmp411.x $tmp412.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp410.y $tmp411.y $tmp412.y 	%argrw{"wrr"}
	mul		$tmp410.z $tmp411.z $tmp412.z 	%argrw{"wrr"}
	mul		$tmp410.w $tmp411.w $tmp412.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1046 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp394.x $tmp395.x $tmp410.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp394.y $tmp395.y $tmp410.y 	%argrw{"wrr"}
	add		$tmp394.z $tmp395.z $tmp410.z 	%argrw{"wrr"}
	add		$tmp394.w $tmp395.w $tmp410.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:218
#                 vector4(-26.44, 1.436, -36.11, 54.9) * x2 * y +
	assign		$tmp414.x $const60 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{218} %argrw{"wr"}
	assign		$tmp414.y $const61 	%argrw{"wr"}
	assign		$tmp414.z $const62 	%argrw{"wr"}
	assign		$tmp414.w $const63 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1060 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp415.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp415.y ___766_y2 	%argrw{"wr"}
	assign		$tmp415.z ___766_y2 	%argrw{"wr"}
	assign		$tmp415.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1060 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp413.x $tmp414.x $tmp415.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp413.y $tmp414.y $tmp415.y 	%argrw{"wrr"}
	mul		$tmp413.z $tmp414.z $tmp415.z 	%argrw{"wrr"}
	mul		$tmp413.w $tmp414.w $tmp415.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1065 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp393.x $tmp394.x $tmp413.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp393.y $tmp394.y $tmp413.y 	%argrw{"wrr"}
	add		$tmp393.z $tmp394.z $tmp413.z 	%argrw{"wrr"}
	add		$tmp393.w $tmp394.w $tmp413.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:219
#                 vector4(19.99, 0.2913, 15.86, 300.2) * x * y2 +
	assign		$tmp418.x $const64 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{219} %argrw{"wr"}
	assign		$tmp418.y $const65 	%argrw{"wr"}
	assign		$tmp418.z $const66 	%argrw{"wr"}
	assign		$tmp418.w $const67 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1079 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp419.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp419.y ___766_x2 	%argrw{"wr"}
	assign		$tmp419.z ___766_x2 	%argrw{"wr"}
	assign		$tmp419.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1079 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp417.x $tmp418.x $tmp419.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp417.y $tmp418.y $tmp419.y 	%argrw{"wrr"}
	mul		$tmp417.z $tmp418.z $tmp419.z 	%argrw{"wrr"}
	mul		$tmp417.w $tmp418.w $tmp419.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1089 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp420.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp420.y ___766_y 	%argrw{"wr"}
	assign		$tmp420.z ___766_y 	%argrw{"wr"}
	assign		$tmp420.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1089 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp416.x $tmp417.x $tmp420.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp416.y $tmp417.y $tmp420.y 	%argrw{"wrr"}
	mul		$tmp416.z $tmp417.z $tmp420.z 	%argrw{"wrr"}
	mul		$tmp416.w $tmp417.w $tmp420.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1094 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp392.x $tmp393.x $tmp416.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp392.y $tmp393.y $tmp416.y 	%argrw{"wrr"}
	add		$tmp392.z $tmp393.z $tmp416.z 	%argrw{"wrr"}
	add		$tmp392.w $tmp393.w $tmp416.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:220
#                 vector4(-5.448, 0.6286, 33.37, -285.1) * x2 * y2;
	assign		$tmp423.x $const68 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{220} %argrw{"wr"}
	assign		$tmp423.y $const69 	%argrw{"wr"}
	assign		$tmp423.z $const70 	%argrw{"wr"}
	assign		$tmp423.w $const71 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1108 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp424.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp424.y ___766_x 	%argrw{"wr"}
	assign		$tmp424.z ___766_x 	%argrw{"wr"}
	assign		$tmp424.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1108 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp422.x $tmp423.x $tmp424.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp422.y $tmp423.y $tmp424.y 	%argrw{"wrr"}
	mul		$tmp422.z $tmp423.z $tmp424.z 	%argrw{"wrr"}
	mul		$tmp422.w $tmp423.w $tmp424.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1118 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp425.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp425.y ___766_y2 	%argrw{"wr"}
	assign		$tmp425.z ___766_y2 	%argrw{"wr"}
	assign		$tmp425.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1118 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp421.x $tmp422.x $tmp425.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp421.y $tmp422.y $tmp425.y 	%argrw{"wrr"}
	mul		$tmp421.z $tmp422.z $tmp425.z 	%argrw{"wrr"}
	mul		$tmp421.w $tmp422.w $tmp425.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1123 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp391.x $tmp392.x $tmp421.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp391.y $tmp392.y $tmp421.y 	%argrw{"wrr"}
	add		$tmp391.z $tmp392.z $tmp421.z 	%argrw{"wrr"}
	add		$tmp391.w $tmp392.w $tmp421.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:221
#     vector2 AB = vector2(r.x, r.y) / vector2(r.z, r.w);
	assign		$tmp428.x $const72 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{221} %argrw{"wr"}
	assign		$tmp428.y $const73 	%argrw{"wr"}
	assign		$tmp428.z $const74 	%argrw{"wr"}
	assign		$tmp428.w $const75 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1137 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp429.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp429.y ___766_x2 	%argrw{"wr"}
	assign		$tmp429.z ___766_x2 	%argrw{"wr"}
	assign		$tmp429.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1137 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp427.x $tmp428.x $tmp429.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp427.y $tmp428.y $tmp429.y 	%argrw{"wrr"}
	mul		$tmp427.z $tmp428.z $tmp429.z 	%argrw{"wrr"}
	mul		$tmp427.w $tmp428.w $tmp429.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1147 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp430.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp430.y ___766_y2 	%argrw{"wr"}
	assign		$tmp430.z ___766_y2 	%argrw{"wr"}
	assign		$tmp430.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1147 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp426.x $tmp427.x $tmp430.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp426.y $tmp427.y $tmp430.y 	%argrw{"wrr"}
	mul		$tmp426.z $tmp427.z $tmp430.z 	%argrw{"wrr"}
	mul		$tmp426.w $tmp427.w $tmp430.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1152 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___766_r.x $tmp391.x $tmp426.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		___766_r.y $tmp391.y $tmp426.y 	%argrw{"wrr"}
	add		___766_r.z $tmp391.z $tmp426.z 	%argrw{"wrr"}
	add		___766_r.w $tmp391.w $tmp426.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:222
#     AB.x = clamp(AB.x, 0.0, 1.0);
	assign		$tmp431.x ___766_r.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{222} %argrw{"wr"}
	assign		$tmp431.y ___766_r.y 	%argrw{"wr"}
	assign		$tmp432.x ___766_r.z 	%argrw{"wr"}
	assign		$tmp432.y ___766_r.w 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const76 1159 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___766_AB.x $tmp431.x $tmp432.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{103} %argrw{"wrr"}
	div		___766_AB.y $tmp431.y $tmp432.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	functioncall	$const9 1162 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp433 ___766_AB.x $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.x $tmp433 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	assign		___766_AB.x ___766_AB.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	functioncall	$const9 1166 	%line{224} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp434 ___766_AB.y $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.y $tmp434 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	assign		___766_AB.y ___766_AB.y 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{224} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:225
# }
	mul		$tmp435 $tmp389 ___766_AB.x 	%line{225} %argrw{"wrr"}
	mul		$tmp436 $tmp390 ___766_AB.y 	%argrw{"wrr"}
	add		___767_result $tmp435 $tmp436 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:231
# }
	compref		___769_Ess ___767_result $const1 	%line{231} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:245
# }
	sub		$tmp437 $const8 ___769_Ess 	%line{245} %argrw{"wrr"}
	mul		$tmp438 ___775_F $tmp437 	%argrw{"wrr"}
	div		$tmp439 $tmp438 ___769_Ess 	%argrw{"wrr"}
	add		___775_comp $const8 $tmp439 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:319
# }
	closure		$tmp440 $const32 $const28 geomprop_Nworld_out ___781_main_tangent_out ___775_safeAlpha.x ___775_safeAlpha.y $const5 $const1 	%line{319} %argrw{"wrrrrrrrr"}
	mul		$tmp441 ___775_F ___775_comp 	%argrw{"wrr"}
	mul		$tmp442 $tmp441 $const8 	%argrw{"wrr"}
	mul		___781_metal_bsdf_out.response $tmp440 $tmp442 	%argrw{"wrr"}
	assign		___781_metal_bsdf_out.response ___781_metal_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:415
#     specular_bsdf_out.ior = thin_film_IOR;
	assign		___781_specular_bsdf_out.response ___781_null_closure 	%line{415} %argrw{"wr"}
	assign		___781_specular_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_specular_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_specular_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:416
#     specular_bsdf_out.thickness = thin_film_thickness;
	assign		___781_specular_bsdf_out.ior thin_film_IOR 	%line{416} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:417
#     mx_dielectric_bsdf(specular, specular_color, specular_IOR, main_roughness_out, normal1, main_tangent_out, "ggx", "R", specular_bsdf_out);
	assign		___781_specular_bsdf_out.thickness thin_film_thickness 	%line{417} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:418
#     BSDF transmission_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const30 1717 	%line{418} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:256
#     {
	eq		$tmp443 $const29 $const31 	%line{256} %argrw{"wrr"}
	if		$tmp443 1196 1196 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:258
#         bsdf.throughput = tint * weight;
	closure		$tmp444 $const32 $const28 geomprop_Nworld_out ___781_main_tangent_out ___781_main_roughness_out.x ___781_main_roughness_out.y specular_IOR $const12 	%line{258} %argrw{"wrrrrrrrr"}
	mul		$tmp445 specular_color specular 	%argrw{"wrr"}
	mul		___781_specular_bsdf_out.response $tmp444 $tmp445 	%argrw{"wrr"}
	assign		___781_specular_bsdf_out.response ___781_specular_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:259
#         return;
	mul		___781_specular_bsdf_out.throughput specular_color specular 	%line{259} %argrw{"wrr"}
	assign		___781_specular_bsdf_out.throughput ___781_specular_bsdf_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:260
#     }
	return	%line{260}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:263
#     float F0 = mx_ior_to_f0(ior);
	neg		$tmp447 I 	%line{263} %argrw{"wr"}
	dot		$tmp446 geomprop_Nworld_out $tmp447 	%argrw{"wrr"}
	functioncall	$const9 1201 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp448 $tmp446 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_NdotV $tmp448 $const7 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:264
#     float F = mx_fresnel_schlick(NdotV, F0);
	functioncall	$const33 1207 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{264} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:203
# }
	sub		$tmp449 specular_IOR $const8 	%line{203} %argrw{"wrr"}
	add		$tmp450 specular_IOR $const8 	%argrw{"wrr"}
	div		$tmp451 $tmp449 $tmp450 	%argrw{"wrr"}
	functioncall	$const34 1207 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___771_F0 $tmp451 $tmp451 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:265
# 
	functioncall	$const35 1221 	%line{265} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:75
#     float x5 = mx_pow5(x);
	sub		$tmp452 $const8 ___771_NdotV 	%line{75} %argrw{"wrr"}
	functioncall	$const9 1212 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp453 $tmp452 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___750_x $tmp453 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:76
#     return F0 + (1.0 - F0) * x5;
	functioncall	$const36 1218 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{76} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	functioncall	$const34 1215 	%line{55} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp455 ___750_x ___750_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	functioncall	$const34 1217 	%line{55} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp454 $tmp455 $tmp455 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	mul		___750_x5 $tmp454 ___750_x 	%line{55} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:77
# }
	sub		$tmp456 $const8 ___771_F0 	%line{77} %argrw{"wrr"}
	mul		$tmp457 $tmp456 ___750_x5 	%argrw{"wrr"}
	add		___771_F ___771_F0 $tmp457 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:271
#     float avgAlpha = mx_average_alpha(safeAlpha);
	functioncall	$const9 1233 	%line{271} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:215
#     return clamp(in, vector2(low, low), vector2(high, high));
	assign		$tmp458.x $const7 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{215} %argrw{"wr"}
	assign		$tmp458.y $const7 	%argrw{"wr"}
	assign		$tmp459.x $const8 	%argrw{"wr"}
	assign		$tmp459.y $const8 	%argrw{"wr"}
	functioncall	$const9 1233 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:209
#     return vector2 (clamp(in.x, low.x, high.x),
	functioncall	$const9 1230 	%line{209} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp460 ___781_main_roughness_out.x $tmp459.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_safeAlpha.x $tmp460 $tmp458.x 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:210
#                     clamp(in.y, low.y, high.y));
	functioncall	$const9 1233 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{210} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp461 ___781_main_roughness_out.y $tmp459.y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_safeAlpha.y $tmp461 $tmp458.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:272
#     float comp = mx_ggx_energy_compensation(NdotV, avgAlpha, F);
	functioncall	$const37 1236 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{272} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:197
# }
	mul		$tmp462 ___771_safeAlpha.x ___771_safeAlpha.y 	%line{197} %argrw{"wrr"}
	sqrt		___771_avgAlpha $tmp462 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:273
# 
	functioncall	$const38 1469 	%line{273} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:250
#     return result[0];
	assign		$tmp463 ___771_F 	%line{250} %argrw{"wr"}
	functioncall	$const38 1468 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:244
#     return 1.0 + Fss * (1.0 - Ess) / Ess;
	functioncall	$const39 1464 	%line{244} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:230
#     return result[0];
	assign		$tmp464 $const8 	%line{230} %argrw{"wr"}
	assign		$tmp465 $const8 	%argrw{"wr"}
	functioncall	$const39 1463 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:209
#     float y = alpha;
	assign		___766_x ___771_NdotV 	%line{209} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:210
#     float x2 = mx_square(x);
	assign		___766_y ___771_avgAlpha 	%line{210} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:211
#     float y2 = mx_square(y);
	functioncall	$const34 1247 	%line{211} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_x2 ___766_x ___766_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:212
#     vector4 r = vector4(0.1003, 0.9345, 1.0, 1.0) +
	functioncall	$const34 1249 	%line{212} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_y2 ___766_y ___766_y 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:213
#                 vector4(-0.6303, -2.323, -1.765, 0.2281) * x +
	assign		$tmp473.x $const40 	%line{213} %argrw{"wr"}
	assign		$tmp473.y $const41 	%argrw{"wr"}
	assign		$tmp473.z $const8 	%argrw{"wr"}
	assign		$tmp473.w $const8 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:214
#                 vector4(9.748, 2.229, 8.263, 15.94) * y +
	assign		$tmp475.x $const42 	%line{214} %argrw{"wr"}
	assign		$tmp475.y $const43 	%argrw{"wr"}
	assign		$tmp475.z $const44 	%argrw{"wr"}
	assign		$tmp475.w $const45 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1267 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp476.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp476.y ___766_x 	%argrw{"wr"}
	assign		$tmp476.z ___766_x 	%argrw{"wr"}
	assign		$tmp476.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1267 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp474.x $tmp475.x $tmp476.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp474.y $tmp475.y $tmp476.y 	%argrw{"wrr"}
	mul		$tmp474.z $tmp475.z $tmp476.z 	%argrw{"wrr"}
	mul		$tmp474.w $tmp475.w $tmp476.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1272 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp472.x $tmp473.x $tmp474.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp472.y $tmp473.y $tmp474.y 	%argrw{"wrr"}
	add		$tmp472.z $tmp473.z $tmp474.z 	%argrw{"wrr"}
	add		$tmp472.w $tmp473.w $tmp474.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:215
#                 vector4(-2.038, -3.748, 11.53, -55.83) * x * y +
	assign		$tmp478.x $const48 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{215} %argrw{"wr"}
	assign		$tmp478.y $const49 	%argrw{"wr"}
	assign		$tmp478.z $const50 	%argrw{"wr"}
	assign		$tmp478.w $const51 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1286 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp479.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp479.y ___766_y 	%argrw{"wr"}
	assign		$tmp479.z ___766_y 	%argrw{"wr"}
	assign		$tmp479.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1286 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp477.x $tmp478.x $tmp479.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp477.y $tmp478.y $tmp479.y 	%argrw{"wrr"}
	mul		$tmp477.z $tmp478.z $tmp479.z 	%argrw{"wrr"}
	mul		$tmp477.w $tmp478.w $tmp479.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1291 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp471.x $tmp472.x $tmp477.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp471.y $tmp472.y $tmp477.y 	%argrw{"wrr"}
	add		$tmp471.z $tmp472.z $tmp477.z 	%argrw{"wrr"}
	add		$tmp471.w $tmp472.w $tmp477.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:216
#                 vector4(29.34, 1.424, 28.96, 13.08) * x2 +
	assign		$tmp482.x $const52 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{216} %argrw{"wr"}
	assign		$tmp482.y $const53 	%argrw{"wr"}
	assign		$tmp482.z $const54 	%argrw{"wr"}
	assign		$tmp482.w $const55 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1305 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp483.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp483.y ___766_x 	%argrw{"wr"}
	assign		$tmp483.z ___766_x 	%argrw{"wr"}
	assign		$tmp483.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1305 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp481.x $tmp482.x $tmp483.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp481.y $tmp482.y $tmp483.y 	%argrw{"wrr"}
	mul		$tmp481.z $tmp482.z $tmp483.z 	%argrw{"wrr"}
	mul		$tmp481.w $tmp482.w $tmp483.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1315 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp484.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp484.y ___766_y 	%argrw{"wr"}
	assign		$tmp484.z ___766_y 	%argrw{"wr"}
	assign		$tmp484.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1315 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp480.x $tmp481.x $tmp484.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp480.y $tmp481.y $tmp484.y 	%argrw{"wrr"}
	mul		$tmp480.z $tmp481.z $tmp484.z 	%argrw{"wrr"}
	mul		$tmp480.w $tmp481.w $tmp484.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1320 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp470.x $tmp471.x $tmp480.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp470.y $tmp471.y $tmp480.y 	%argrw{"wrr"}
	add		$tmp470.z $tmp471.z $tmp480.z 	%argrw{"wrr"}
	add		$tmp470.w $tmp471.w $tmp480.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:217
#                 vector4(-8.245, -0.7684, -7.507, 41.26) * y2 +
	assign		$tmp486.x $const56 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{217} %argrw{"wr"}
	assign		$tmp486.y $const57 	%argrw{"wr"}
	assign		$tmp486.z $const58 	%argrw{"wr"}
	assign		$tmp486.w $const59 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1334 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp487.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp487.y ___766_x2 	%argrw{"wr"}
	assign		$tmp487.z ___766_x2 	%argrw{"wr"}
	assign		$tmp487.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1334 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp485.x $tmp486.x $tmp487.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp485.y $tmp486.y $tmp487.y 	%argrw{"wrr"}
	mul		$tmp485.z $tmp486.z $tmp487.z 	%argrw{"wrr"}
	mul		$tmp485.w $tmp486.w $tmp487.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1339 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp469.x $tmp470.x $tmp485.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp469.y $tmp470.y $tmp485.y 	%argrw{"wrr"}
	add		$tmp469.z $tmp470.z $tmp485.z 	%argrw{"wrr"}
	add		$tmp469.w $tmp470.w $tmp485.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:218
#                 vector4(-26.44, 1.436, -36.11, 54.9) * x2 * y +
	assign		$tmp489.x $const60 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{218} %argrw{"wr"}
	assign		$tmp489.y $const61 	%argrw{"wr"}
	assign		$tmp489.z $const62 	%argrw{"wr"}
	assign		$tmp489.w $const63 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1353 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp490.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp490.y ___766_y2 	%argrw{"wr"}
	assign		$tmp490.z ___766_y2 	%argrw{"wr"}
	assign		$tmp490.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1353 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp488.x $tmp489.x $tmp490.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp488.y $tmp489.y $tmp490.y 	%argrw{"wrr"}
	mul		$tmp488.z $tmp489.z $tmp490.z 	%argrw{"wrr"}
	mul		$tmp488.w $tmp489.w $tmp490.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1358 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp468.x $tmp469.x $tmp488.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp468.y $tmp469.y $tmp488.y 	%argrw{"wrr"}
	add		$tmp468.z $tmp469.z $tmp488.z 	%argrw{"wrr"}
	add		$tmp468.w $tmp469.w $tmp488.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:219
#                 vector4(19.99, 0.2913, 15.86, 300.2) * x * y2 +
	assign		$tmp493.x $const64 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{219} %argrw{"wr"}
	assign		$tmp493.y $const65 	%argrw{"wr"}
	assign		$tmp493.z $const66 	%argrw{"wr"}
	assign		$tmp493.w $const67 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1372 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp494.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp494.y ___766_x2 	%argrw{"wr"}
	assign		$tmp494.z ___766_x2 	%argrw{"wr"}
	assign		$tmp494.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1372 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp492.x $tmp493.x $tmp494.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp492.y $tmp493.y $tmp494.y 	%argrw{"wrr"}
	mul		$tmp492.z $tmp493.z $tmp494.z 	%argrw{"wrr"}
	mul		$tmp492.w $tmp493.w $tmp494.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1382 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp495.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp495.y ___766_y 	%argrw{"wr"}
	assign		$tmp495.z ___766_y 	%argrw{"wr"}
	assign		$tmp495.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1382 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp491.x $tmp492.x $tmp495.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp491.y $tmp492.y $tmp495.y 	%argrw{"wrr"}
	mul		$tmp491.z $tmp492.z $tmp495.z 	%argrw{"wrr"}
	mul		$tmp491.w $tmp492.w $tmp495.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1387 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp467.x $tmp468.x $tmp491.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp467.y $tmp468.y $tmp491.y 	%argrw{"wrr"}
	add		$tmp467.z $tmp468.z $tmp491.z 	%argrw{"wrr"}
	add		$tmp467.w $tmp468.w $tmp491.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:220
#                 vector4(-5.448, 0.6286, 33.37, -285.1) * x2 * y2;
	assign		$tmp498.x $const68 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{220} %argrw{"wr"}
	assign		$tmp498.y $const69 	%argrw{"wr"}
	assign		$tmp498.z $const70 	%argrw{"wr"}
	assign		$tmp498.w $const71 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1401 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp499.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp499.y ___766_x 	%argrw{"wr"}
	assign		$tmp499.z ___766_x 	%argrw{"wr"}
	assign		$tmp499.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1401 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp497.x $tmp498.x $tmp499.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp497.y $tmp498.y $tmp499.y 	%argrw{"wrr"}
	mul		$tmp497.z $tmp498.z $tmp499.z 	%argrw{"wrr"}
	mul		$tmp497.w $tmp498.w $tmp499.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1411 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp500.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp500.y ___766_y2 	%argrw{"wr"}
	assign		$tmp500.z ___766_y2 	%argrw{"wr"}
	assign		$tmp500.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1411 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp496.x $tmp497.x $tmp500.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp496.y $tmp497.y $tmp500.y 	%argrw{"wrr"}
	mul		$tmp496.z $tmp497.z $tmp500.z 	%argrw{"wrr"}
	mul		$tmp496.w $tmp497.w $tmp500.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1416 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp466.x $tmp467.x $tmp496.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp466.y $tmp467.y $tmp496.y 	%argrw{"wrr"}
	add		$tmp466.z $tmp467.z $tmp496.z 	%argrw{"wrr"}
	add		$tmp466.w $tmp467.w $tmp496.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:221
#     vector2 AB = vector2(r.x, r.y) / vector2(r.z, r.w);
	assign		$tmp503.x $const72 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{221} %argrw{"wr"}
	assign		$tmp503.y $const73 	%argrw{"wr"}
	assign		$tmp503.z $const74 	%argrw{"wr"}
	assign		$tmp503.w $const75 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1430 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp504.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp504.y ___766_x2 	%argrw{"wr"}
	assign		$tmp504.z ___766_x2 	%argrw{"wr"}
	assign		$tmp504.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1430 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp502.x $tmp503.x $tmp504.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp502.y $tmp503.y $tmp504.y 	%argrw{"wrr"}
	mul		$tmp502.z $tmp503.z $tmp504.z 	%argrw{"wrr"}
	mul		$tmp502.w $tmp503.w $tmp504.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1440 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp505.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp505.y ___766_y2 	%argrw{"wr"}
	assign		$tmp505.z ___766_y2 	%argrw{"wr"}
	assign		$tmp505.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1440 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp501.x $tmp502.x $tmp505.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp501.y $tmp502.y $tmp505.y 	%argrw{"wrr"}
	mul		$tmp501.z $tmp502.z $tmp505.z 	%argrw{"wrr"}
	mul		$tmp501.w $tmp502.w $tmp505.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1445 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___766_r.x $tmp466.x $tmp501.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		___766_r.y $tmp466.y $tmp501.y 	%argrw{"wrr"}
	add		___766_r.z $tmp466.z $tmp501.z 	%argrw{"wrr"}
	add		___766_r.w $tmp466.w $tmp501.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:222
#     AB.x = clamp(AB.x, 0.0, 1.0);
	assign		$tmp506.x ___766_r.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{222} %argrw{"wr"}
	assign		$tmp506.y ___766_r.y 	%argrw{"wr"}
	assign		$tmp507.x ___766_r.z 	%argrw{"wr"}
	assign		$tmp507.y ___766_r.w 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const76 1452 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___766_AB.x $tmp506.x $tmp507.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{103} %argrw{"wrr"}
	div		___766_AB.y $tmp506.y $tmp507.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	functioncall	$const9 1455 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp508 ___766_AB.x $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.x $tmp508 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	assign		___766_AB.x ___766_AB.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	functioncall	$const9 1459 	%line{224} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp509 ___766_AB.y $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.y $tmp509 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	assign		___766_AB.y ___766_AB.y 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{224} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:225
# }
	mul		$tmp510 $tmp464 ___766_AB.x 	%line{225} %argrw{"wrr"}
	mul		$tmp511 $tmp465 ___766_AB.y 	%argrw{"wrr"}
	add		___767_result $tmp510 $tmp511 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:231
# }
	compref		___769_Ess ___767_result $const1 	%line{231} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:245
# }
	sub		$tmp512 $const8 ___769_Ess 	%line{245} %argrw{"wrr"}
	mul		$tmp513 $tmp463 $tmp512 	%argrw{"wrr"}
	div		$tmp514 $tmp513 ___769_Ess 	%argrw{"wrr"}
	add		___770_result $const8 $tmp514 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:251
# }
	compref		___771_comp ___770_result $const1 	%line{251} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:275
#     {
	eq		$tmp515 $const29 $const29 	%line{275} %argrw{"wrr"}
	if		$tmp515 1711 1717 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:277
# 
	closure		$tmp516 $const32 $const28 geomprop_Nworld_out ___781_main_tangent_out ___771_safeAlpha.x ___771_safeAlpha.y specular_IOR $const1 	%line{277} %argrw{"wrrrrrrrr"}
	mul		$tmp517 specular_color specular 	%argrw{"wrr"}
	mul		$tmp518 $tmp517 ___771_comp 	%argrw{"wrr"}
	mul		___781_specular_bsdf_out.response $tmp516 $tmp518 	%argrw{"wrr"}
	assign		___781_specular_bsdf_out.response ___781_specular_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:280
#         bsdf.throughput = 1.0 - dirAlbedo * weight;
	functioncall	$const39 1706 	%line{280} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:236
#     return result[0];
	functioncall	$const33 1483 	%line{236} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:203
# }
	sub		$tmp522 specular_IOR $const8 	%line{203} %argrw{"wrr"}
	add		$tmp523 specular_IOR $const8 	%argrw{"wrr"}
	div		$tmp524 $tmp522 $tmp523 	%argrw{"wrr"}
	functioncall	$const34 1483 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp521 $tmp524 $tmp524 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:236
#     return result[0];
	assign		$tmp520 $tmp521 	%line{236} %argrw{"wr"}
	functioncall	$const39 1705 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:209
#     float y = alpha;
	assign		___766_x ___771_NdotV 	%line{209} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:210
#     float x2 = mx_square(x);
	assign		___766_y ___771_avgAlpha 	%line{210} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:211
#     float y2 = mx_square(y);
	functioncall	$const34 1489 	%line{211} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_x2 ___766_x ___766_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:212
#     vector4 r = vector4(0.1003, 0.9345, 1.0, 1.0) +
	functioncall	$const34 1491 	%line{212} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_y2 ___766_y ___766_y 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:213
#                 vector4(-0.6303, -2.323, -1.765, 0.2281) * x +
	assign		$tmp533.x $const40 	%line{213} %argrw{"wr"}
	assign		$tmp533.y $const41 	%argrw{"wr"}
	assign		$tmp533.z $const8 	%argrw{"wr"}
	assign		$tmp533.w $const8 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:214
#                 vector4(9.748, 2.229, 8.263, 15.94) * y +
	assign		$tmp535.x $const42 	%line{214} %argrw{"wr"}
	assign		$tmp535.y $const43 	%argrw{"wr"}
	assign		$tmp535.z $const44 	%argrw{"wr"}
	assign		$tmp535.w $const45 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1509 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp536.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp536.y ___766_x 	%argrw{"wr"}
	assign		$tmp536.z ___766_x 	%argrw{"wr"}
	assign		$tmp536.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1509 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp534.x $tmp535.x $tmp536.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp534.y $tmp535.y $tmp536.y 	%argrw{"wrr"}
	mul		$tmp534.z $tmp535.z $tmp536.z 	%argrw{"wrr"}
	mul		$tmp534.w $tmp535.w $tmp536.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1514 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp532.x $tmp533.x $tmp534.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp532.y $tmp533.y $tmp534.y 	%argrw{"wrr"}
	add		$tmp532.z $tmp533.z $tmp534.z 	%argrw{"wrr"}
	add		$tmp532.w $tmp533.w $tmp534.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:215
#                 vector4(-2.038, -3.748, 11.53, -55.83) * x * y +
	assign		$tmp538.x $const48 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{215} %argrw{"wr"}
	assign		$tmp538.y $const49 	%argrw{"wr"}
	assign		$tmp538.z $const50 	%argrw{"wr"}
	assign		$tmp538.w $const51 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1528 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp539.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp539.y ___766_y 	%argrw{"wr"}
	assign		$tmp539.z ___766_y 	%argrw{"wr"}
	assign		$tmp539.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1528 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp537.x $tmp538.x $tmp539.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp537.y $tmp538.y $tmp539.y 	%argrw{"wrr"}
	mul		$tmp537.z $tmp538.z $tmp539.z 	%argrw{"wrr"}
	mul		$tmp537.w $tmp538.w $tmp539.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1533 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp531.x $tmp532.x $tmp537.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp531.y $tmp532.y $tmp537.y 	%argrw{"wrr"}
	add		$tmp531.z $tmp532.z $tmp537.z 	%argrw{"wrr"}
	add		$tmp531.w $tmp532.w $tmp537.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:216
#                 vector4(29.34, 1.424, 28.96, 13.08) * x2 +
	assign		$tmp542.x $const52 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{216} %argrw{"wr"}
	assign		$tmp542.y $const53 	%argrw{"wr"}
	assign		$tmp542.z $const54 	%argrw{"wr"}
	assign		$tmp542.w $const55 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1547 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp543.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp543.y ___766_x 	%argrw{"wr"}
	assign		$tmp543.z ___766_x 	%argrw{"wr"}
	assign		$tmp543.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1547 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp541.x $tmp542.x $tmp543.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp541.y $tmp542.y $tmp543.y 	%argrw{"wrr"}
	mul		$tmp541.z $tmp542.z $tmp543.z 	%argrw{"wrr"}
	mul		$tmp541.w $tmp542.w $tmp543.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1557 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp544.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp544.y ___766_y 	%argrw{"wr"}
	assign		$tmp544.z ___766_y 	%argrw{"wr"}
	assign		$tmp544.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1557 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp540.x $tmp541.x $tmp544.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp540.y $tmp541.y $tmp544.y 	%argrw{"wrr"}
	mul		$tmp540.z $tmp541.z $tmp544.z 	%argrw{"wrr"}
	mul		$tmp540.w $tmp541.w $tmp544.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1562 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp530.x $tmp531.x $tmp540.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp530.y $tmp531.y $tmp540.y 	%argrw{"wrr"}
	add		$tmp530.z $tmp531.z $tmp540.z 	%argrw{"wrr"}
	add		$tmp530.w $tmp531.w $tmp540.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:217
#                 vector4(-8.245, -0.7684, -7.507, 41.26) * y2 +
	assign		$tmp546.x $const56 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{217} %argrw{"wr"}
	assign		$tmp546.y $const57 	%argrw{"wr"}
	assign		$tmp546.z $const58 	%argrw{"wr"}
	assign		$tmp546.w $const59 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1576 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp547.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp547.y ___766_x2 	%argrw{"wr"}
	assign		$tmp547.z ___766_x2 	%argrw{"wr"}
	assign		$tmp547.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1576 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp545.x $tmp546.x $tmp547.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp545.y $tmp546.y $tmp547.y 	%argrw{"wrr"}
	mul		$tmp545.z $tmp546.z $tmp547.z 	%argrw{"wrr"}
	mul		$tmp545.w $tmp546.w $tmp547.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1581 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp529.x $tmp530.x $tmp545.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp529.y $tmp530.y $tmp545.y 	%argrw{"wrr"}
	add		$tmp529.z $tmp530.z $tmp545.z 	%argrw{"wrr"}
	add		$tmp529.w $tmp530.w $tmp545.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:218
#                 vector4(-26.44, 1.436, -36.11, 54.9) * x2 * y +
	assign		$tmp549.x $const60 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{218} %argrw{"wr"}
	assign		$tmp549.y $const61 	%argrw{"wr"}
	assign		$tmp549.z $const62 	%argrw{"wr"}
	assign		$tmp549.w $const63 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1595 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp550.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp550.y ___766_y2 	%argrw{"wr"}
	assign		$tmp550.z ___766_y2 	%argrw{"wr"}
	assign		$tmp550.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1595 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp548.x $tmp549.x $tmp550.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp548.y $tmp549.y $tmp550.y 	%argrw{"wrr"}
	mul		$tmp548.z $tmp549.z $tmp550.z 	%argrw{"wrr"}
	mul		$tmp548.w $tmp549.w $tmp550.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1600 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp528.x $tmp529.x $tmp548.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp528.y $tmp529.y $tmp548.y 	%argrw{"wrr"}
	add		$tmp528.z $tmp529.z $tmp548.z 	%argrw{"wrr"}
	add		$tmp528.w $tmp529.w $tmp548.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:219
#                 vector4(19.99, 0.2913, 15.86, 300.2) * x * y2 +
	assign		$tmp553.x $const64 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{219} %argrw{"wr"}
	assign		$tmp553.y $const65 	%argrw{"wr"}
	assign		$tmp553.z $const66 	%argrw{"wr"}
	assign		$tmp553.w $const67 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1614 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp554.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp554.y ___766_x2 	%argrw{"wr"}
	assign		$tmp554.z ___766_x2 	%argrw{"wr"}
	assign		$tmp554.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1614 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp552.x $tmp553.x $tmp554.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp552.y $tmp553.y $tmp554.y 	%argrw{"wrr"}
	mul		$tmp552.z $tmp553.z $tmp554.z 	%argrw{"wrr"}
	mul		$tmp552.w $tmp553.w $tmp554.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1624 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp555.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp555.y ___766_y 	%argrw{"wr"}
	assign		$tmp555.z ___766_y 	%argrw{"wr"}
	assign		$tmp555.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1624 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp551.x $tmp552.x $tmp555.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp551.y $tmp552.y $tmp555.y 	%argrw{"wrr"}
	mul		$tmp551.z $tmp552.z $tmp555.z 	%argrw{"wrr"}
	mul		$tmp551.w $tmp552.w $tmp555.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1629 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp527.x $tmp528.x $tmp551.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp527.y $tmp528.y $tmp551.y 	%argrw{"wrr"}
	add		$tmp527.z $tmp528.z $tmp551.z 	%argrw{"wrr"}
	add		$tmp527.w $tmp528.w $tmp551.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:220
#                 vector4(-5.448, 0.6286, 33.37, -285.1) * x2 * y2;
	assign		$tmp558.x $const68 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{220} %argrw{"wr"}
	assign		$tmp558.y $const69 	%argrw{"wr"}
	assign		$tmp558.z $const70 	%argrw{"wr"}
	assign		$tmp558.w $const71 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1643 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp559.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp559.y ___766_x 	%argrw{"wr"}
	assign		$tmp559.z ___766_x 	%argrw{"wr"}
	assign		$tmp559.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1643 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp557.x $tmp558.x $tmp559.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp557.y $tmp558.y $tmp559.y 	%argrw{"wrr"}
	mul		$tmp557.z $tmp558.z $tmp559.z 	%argrw{"wrr"}
	mul		$tmp557.w $tmp558.w $tmp559.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1653 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp560.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp560.y ___766_y2 	%argrw{"wr"}
	assign		$tmp560.z ___766_y2 	%argrw{"wr"}
	assign		$tmp560.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1653 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp556.x $tmp557.x $tmp560.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp556.y $tmp557.y $tmp560.y 	%argrw{"wrr"}
	mul		$tmp556.z $tmp557.z $tmp560.z 	%argrw{"wrr"}
	mul		$tmp556.w $tmp557.w $tmp560.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1658 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp526.x $tmp527.x $tmp556.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp526.y $tmp527.y $tmp556.y 	%argrw{"wrr"}
	add		$tmp526.z $tmp527.z $tmp556.z 	%argrw{"wrr"}
	add		$tmp526.w $tmp527.w $tmp556.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:221
#     vector2 AB = vector2(r.x, r.y) / vector2(r.z, r.w);
	assign		$tmp563.x $const72 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{221} %argrw{"wr"}
	assign		$tmp563.y $const73 	%argrw{"wr"}
	assign		$tmp563.z $const74 	%argrw{"wr"}
	assign		$tmp563.w $const75 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1672 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp564.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp564.y ___766_x2 	%argrw{"wr"}
	assign		$tmp564.z ___766_x2 	%argrw{"wr"}
	assign		$tmp564.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1672 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp562.x $tmp563.x $tmp564.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp562.y $tmp563.y $tmp564.y 	%argrw{"wrr"}
	mul		$tmp562.z $tmp563.z $tmp564.z 	%argrw{"wrr"}
	mul		$tmp562.w $tmp563.w $tmp564.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1682 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp565.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp565.y ___766_y2 	%argrw{"wr"}
	assign		$tmp565.z ___766_y2 	%argrw{"wr"}
	assign		$tmp565.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1682 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp561.x $tmp562.x $tmp565.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp561.y $tmp562.y $tmp565.y 	%argrw{"wrr"}
	mul		$tmp561.z $tmp562.z $tmp565.z 	%argrw{"wrr"}
	mul		$tmp561.w $tmp562.w $tmp565.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1687 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___766_r.x $tmp526.x $tmp561.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		___766_r.y $tmp526.y $tmp561.y 	%argrw{"wrr"}
	add		___766_r.z $tmp526.z $tmp561.z 	%argrw{"wrr"}
	add		___766_r.w $tmp526.w $tmp561.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:222
#     AB.x = clamp(AB.x, 0.0, 1.0);
	assign		$tmp566.x ___766_r.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{222} %argrw{"wr"}
	assign		$tmp566.y ___766_r.y 	%argrw{"wr"}
	assign		$tmp567.x ___766_r.z 	%argrw{"wr"}
	assign		$tmp567.y ___766_r.w 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const76 1694 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___766_AB.x $tmp566.x $tmp567.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{103} %argrw{"wrr"}
	div		___766_AB.y $tmp566.y $tmp567.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	functioncall	$const9 1697 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp568 ___766_AB.x $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.x $tmp568 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	assign		___766_AB.x ___766_AB.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	functioncall	$const9 1701 	%line{224} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp569 ___766_AB.y $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.y $tmp569 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	assign		___766_AB.y ___766_AB.y 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{224} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:225
# }
	mul		$tmp570 $tmp520 ___766_AB.x 	%line{225} %argrw{"wrr"}
	mul		$tmp571 $const14 ___766_AB.y 	%argrw{"wrr"}
	add		___768_result $tmp570 $tmp571 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:237
# }
	compref		$tmp519 ___768_result $const1 	%line{237} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:280
#         bsdf.throughput = 1.0 - dirAlbedo * weight;
	mul		___773_dirAlbedo $tmp519 ___771_comp 	%line{280} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:281
#     }
	mul		$tmp572 ___773_dirAlbedo specular 	%line{281} %argrw{"wrr"}
	sub		$tmp573 $const8 $tmp572 	%argrw{"wrr"}
	assign		$tmp574 $tmp573 	%argrw{"wr"}
	assign		___781_specular_bsdf_out.throughput $tmp574 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:285
#         bsdf.throughput = color(1.0);
	closure		$tmp575 $const32 $const28 geomprop_Nworld_out ___781_main_tangent_out ___771_safeAlpha.x ___771_safeAlpha.y specular_IOR $const13 	%line{285} %argrw{"wrrrrrrrr"}
	mul		$tmp576 specular_color specular 	%argrw{"wrr"}
	mul		$tmp577 $tmp576 ___771_comp 	%argrw{"wrr"}
	mul		___781_specular_bsdf_out.response $tmp575 $tmp577 	%argrw{"wrr"}
	assign		___781_specular_bsdf_out.response ___781_specular_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:286
#     }
	assign		___781_specular_bsdf_out.throughput $const14 	%line{286} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:419
#     mx_dielectric_bsdf(1, transmission_color, specular_IOR, main_roughness_out, normal1, main_tangent_out, "ggx", "T", transmission_bsdf_out);
	assign		___781_transmission_bsdf_out.response ___781_null_closure 	%line{419} %argrw{"wr"}
	assign		___781_transmission_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_transmission_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_transmission_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:420
#     BSDF sheen_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const30 2252 	%line{420} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:256
#     {
	eq		$tmp578 $const31 $const31 	%line{256} %argrw{"wrr"}
	if		$tmp578 1731 1731 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:258
#         bsdf.throughput = tint * weight;
	closure		$tmp579 $const32 $const28 geomprop_Nworld_out ___781_main_tangent_out ___781_main_roughness_out.x ___781_main_roughness_out.y specular_IOR $const12 	%line{258} %argrw{"wrrrrrrrr"}
	mul		$tmp580 transmission_color $const8 	%argrw{"wrr"}
	mul		___781_transmission_bsdf_out.response $tmp579 $tmp580 	%argrw{"wrr"}
	assign		___781_transmission_bsdf_out.response ___781_transmission_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:259
#         return;
	mul		___781_transmission_bsdf_out.throughput transmission_color $const8 	%line{259} %argrw{"wrr"}
	assign		___781_transmission_bsdf_out.throughput ___781_transmission_bsdf_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:260
#     }
	return	%line{260}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:263
#     float F0 = mx_ior_to_f0(ior);
	neg		$tmp582 I 	%line{263} %argrw{"wr"}
	dot		$tmp581 geomprop_Nworld_out $tmp582 	%argrw{"wrr"}
	functioncall	$const9 1736 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp583 $tmp581 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_NdotV $tmp583 $const7 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:264
#     float F = mx_fresnel_schlick(NdotV, F0);
	functioncall	$const33 1742 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{264} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:203
# }
	sub		$tmp584 specular_IOR $const8 	%line{203} %argrw{"wrr"}
	add		$tmp585 specular_IOR $const8 	%argrw{"wrr"}
	div		$tmp586 $tmp584 $tmp585 	%argrw{"wrr"}
	functioncall	$const34 1742 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___771_F0 $tmp586 $tmp586 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:265
# 
	functioncall	$const35 1756 	%line{265} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:75
#     float x5 = mx_pow5(x);
	sub		$tmp587 $const8 ___771_NdotV 	%line{75} %argrw{"wrr"}
	functioncall	$const9 1747 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp588 $tmp587 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___750_x $tmp588 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:76
#     return F0 + (1.0 - F0) * x5;
	functioncall	$const36 1753 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{76} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	functioncall	$const34 1750 	%line{55} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp590 ___750_x ___750_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	functioncall	$const34 1752 	%line{55} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp589 $tmp590 $tmp590 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:55
# }
	mul		___750_x5 $tmp589 ___750_x 	%line{55} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:77
# }
	sub		$tmp591 $const8 ___771_F0 	%line{77} %argrw{"wrr"}
	mul		$tmp592 $tmp591 ___750_x5 	%argrw{"wrr"}
	add		___771_F ___771_F0 $tmp592 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:271
#     float avgAlpha = mx_average_alpha(safeAlpha);
	functioncall	$const9 1768 	%line{271} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:215
#     return clamp(in, vector2(low, low), vector2(high, high));
	assign		$tmp593.x $const7 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{215} %argrw{"wr"}
	assign		$tmp593.y $const7 	%argrw{"wr"}
	assign		$tmp594.x $const8 	%argrw{"wr"}
	assign		$tmp594.y $const8 	%argrw{"wr"}
	functioncall	$const9 1768 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:209
#     return vector2 (clamp(in.x, low.x, high.x),
	functioncall	$const9 1765 	%line{209} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp595 ___781_main_roughness_out.x $tmp594.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_safeAlpha.x $tmp595 $tmp593.x 	%argrw{"wrr"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:210
#                     clamp(in.y, low.y, high.y));
	functioncall	$const9 1768 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{210} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp596 ___781_main_roughness_out.y $tmp594.y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___771_safeAlpha.y $tmp596 $tmp593.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:272
#     float comp = mx_ggx_energy_compensation(NdotV, avgAlpha, F);
	functioncall	$const37 1771 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{272} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:197
# }
	mul		$tmp597 ___771_safeAlpha.x ___771_safeAlpha.y 	%line{197} %argrw{"wrr"}
	sqrt		___771_avgAlpha $tmp597 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:273
# 
	functioncall	$const38 2004 	%line{273} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:250
#     return result[0];
	assign		$tmp598 ___771_F 	%line{250} %argrw{"wr"}
	functioncall	$const38 2003 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:244
#     return 1.0 + Fss * (1.0 - Ess) / Ess;
	functioncall	$const39 1999 	%line{244} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:230
#     return result[0];
	assign		$tmp599 $const8 	%line{230} %argrw{"wr"}
	assign		$tmp600 $const8 	%argrw{"wr"}
	functioncall	$const39 1998 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:209
#     float y = alpha;
	assign		___766_x ___771_NdotV 	%line{209} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:210
#     float x2 = mx_square(x);
	assign		___766_y ___771_avgAlpha 	%line{210} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:211
#     float y2 = mx_square(y);
	functioncall	$const34 1782 	%line{211} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_x2 ___766_x ___766_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:212
#     vector4 r = vector4(0.1003, 0.9345, 1.0, 1.0) +
	functioncall	$const34 1784 	%line{212} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_y2 ___766_y ___766_y 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:213
#                 vector4(-0.6303, -2.323, -1.765, 0.2281) * x +
	assign		$tmp608.x $const40 	%line{213} %argrw{"wr"}
	assign		$tmp608.y $const41 	%argrw{"wr"}
	assign		$tmp608.z $const8 	%argrw{"wr"}
	assign		$tmp608.w $const8 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:214
#                 vector4(9.748, 2.229, 8.263, 15.94) * y +
	assign		$tmp610.x $const42 	%line{214} %argrw{"wr"}
	assign		$tmp610.y $const43 	%argrw{"wr"}
	assign		$tmp610.z $const44 	%argrw{"wr"}
	assign		$tmp610.w $const45 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1802 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp611.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp611.y ___766_x 	%argrw{"wr"}
	assign		$tmp611.z ___766_x 	%argrw{"wr"}
	assign		$tmp611.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1802 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp609.x $tmp610.x $tmp611.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp609.y $tmp610.y $tmp611.y 	%argrw{"wrr"}
	mul		$tmp609.z $tmp610.z $tmp611.z 	%argrw{"wrr"}
	mul		$tmp609.w $tmp610.w $tmp611.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1807 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp607.x $tmp608.x $tmp609.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp607.y $tmp608.y $tmp609.y 	%argrw{"wrr"}
	add		$tmp607.z $tmp608.z $tmp609.z 	%argrw{"wrr"}
	add		$tmp607.w $tmp608.w $tmp609.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:215
#                 vector4(-2.038, -3.748, 11.53, -55.83) * x * y +
	assign		$tmp613.x $const48 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{215} %argrw{"wr"}
	assign		$tmp613.y $const49 	%argrw{"wr"}
	assign		$tmp613.z $const50 	%argrw{"wr"}
	assign		$tmp613.w $const51 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1821 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp614.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp614.y ___766_y 	%argrw{"wr"}
	assign		$tmp614.z ___766_y 	%argrw{"wr"}
	assign		$tmp614.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1821 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp612.x $tmp613.x $tmp614.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp612.y $tmp613.y $tmp614.y 	%argrw{"wrr"}
	mul		$tmp612.z $tmp613.z $tmp614.z 	%argrw{"wrr"}
	mul		$tmp612.w $tmp613.w $tmp614.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1826 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp606.x $tmp607.x $tmp612.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp606.y $tmp607.y $tmp612.y 	%argrw{"wrr"}
	add		$tmp606.z $tmp607.z $tmp612.z 	%argrw{"wrr"}
	add		$tmp606.w $tmp607.w $tmp612.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:216
#                 vector4(29.34, 1.424, 28.96, 13.08) * x2 +
	assign		$tmp617.x $const52 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{216} %argrw{"wr"}
	assign		$tmp617.y $const53 	%argrw{"wr"}
	assign		$tmp617.z $const54 	%argrw{"wr"}
	assign		$tmp617.w $const55 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1840 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp618.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp618.y ___766_x 	%argrw{"wr"}
	assign		$tmp618.z ___766_x 	%argrw{"wr"}
	assign		$tmp618.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1840 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp616.x $tmp617.x $tmp618.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp616.y $tmp617.y $tmp618.y 	%argrw{"wrr"}
	mul		$tmp616.z $tmp617.z $tmp618.z 	%argrw{"wrr"}
	mul		$tmp616.w $tmp617.w $tmp618.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1850 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp619.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp619.y ___766_y 	%argrw{"wr"}
	assign		$tmp619.z ___766_y 	%argrw{"wr"}
	assign		$tmp619.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1850 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp615.x $tmp616.x $tmp619.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp615.y $tmp616.y $tmp619.y 	%argrw{"wrr"}
	mul		$tmp615.z $tmp616.z $tmp619.z 	%argrw{"wrr"}
	mul		$tmp615.w $tmp616.w $tmp619.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1855 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp605.x $tmp606.x $tmp615.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp605.y $tmp606.y $tmp615.y 	%argrw{"wrr"}
	add		$tmp605.z $tmp606.z $tmp615.z 	%argrw{"wrr"}
	add		$tmp605.w $tmp606.w $tmp615.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:217
#                 vector4(-8.245, -0.7684, -7.507, 41.26) * y2 +
	assign		$tmp621.x $const56 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{217} %argrw{"wr"}
	assign		$tmp621.y $const57 	%argrw{"wr"}
	assign		$tmp621.z $const58 	%argrw{"wr"}
	assign		$tmp621.w $const59 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1869 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp622.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp622.y ___766_x2 	%argrw{"wr"}
	assign		$tmp622.z ___766_x2 	%argrw{"wr"}
	assign		$tmp622.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1869 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp620.x $tmp621.x $tmp622.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp620.y $tmp621.y $tmp622.y 	%argrw{"wrr"}
	mul		$tmp620.z $tmp621.z $tmp622.z 	%argrw{"wrr"}
	mul		$tmp620.w $tmp621.w $tmp622.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1874 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp604.x $tmp605.x $tmp620.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp604.y $tmp605.y $tmp620.y 	%argrw{"wrr"}
	add		$tmp604.z $tmp605.z $tmp620.z 	%argrw{"wrr"}
	add		$tmp604.w $tmp605.w $tmp620.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:218
#                 vector4(-26.44, 1.436, -36.11, 54.9) * x2 * y +
	assign		$tmp624.x $const60 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{218} %argrw{"wr"}
	assign		$tmp624.y $const61 	%argrw{"wr"}
	assign		$tmp624.z $const62 	%argrw{"wr"}
	assign		$tmp624.w $const63 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1888 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp625.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp625.y ___766_y2 	%argrw{"wr"}
	assign		$tmp625.z ___766_y2 	%argrw{"wr"}
	assign		$tmp625.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1888 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp623.x $tmp624.x $tmp625.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp623.y $tmp624.y $tmp625.y 	%argrw{"wrr"}
	mul		$tmp623.z $tmp624.z $tmp625.z 	%argrw{"wrr"}
	mul		$tmp623.w $tmp624.w $tmp625.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1893 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp603.x $tmp604.x $tmp623.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp603.y $tmp604.y $tmp623.y 	%argrw{"wrr"}
	add		$tmp603.z $tmp604.z $tmp623.z 	%argrw{"wrr"}
	add		$tmp603.w $tmp604.w $tmp623.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:219
#                 vector4(19.99, 0.2913, 15.86, 300.2) * x * y2 +
	assign		$tmp628.x $const64 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{219} %argrw{"wr"}
	assign		$tmp628.y $const65 	%argrw{"wr"}
	assign		$tmp628.z $const66 	%argrw{"wr"}
	assign		$tmp628.w $const67 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1907 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp629.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp629.y ___766_x2 	%argrw{"wr"}
	assign		$tmp629.z ___766_x2 	%argrw{"wr"}
	assign		$tmp629.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1907 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp627.x $tmp628.x $tmp629.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp627.y $tmp628.y $tmp629.y 	%argrw{"wrr"}
	mul		$tmp627.z $tmp628.z $tmp629.z 	%argrw{"wrr"}
	mul		$tmp627.w $tmp628.w $tmp629.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1917 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp630.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp630.y ___766_y 	%argrw{"wr"}
	assign		$tmp630.z ___766_y 	%argrw{"wr"}
	assign		$tmp630.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1917 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp626.x $tmp627.x $tmp630.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp626.y $tmp627.y $tmp630.y 	%argrw{"wrr"}
	mul		$tmp626.z $tmp627.z $tmp630.z 	%argrw{"wrr"}
	mul		$tmp626.w $tmp627.w $tmp630.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1922 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp602.x $tmp603.x $tmp626.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp602.y $tmp603.y $tmp626.y 	%argrw{"wrr"}
	add		$tmp602.z $tmp603.z $tmp626.z 	%argrw{"wrr"}
	add		$tmp602.w $tmp603.w $tmp626.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:220
#                 vector4(-5.448, 0.6286, 33.37, -285.1) * x2 * y2;
	assign		$tmp633.x $const68 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{220} %argrw{"wr"}
	assign		$tmp633.y $const69 	%argrw{"wr"}
	assign		$tmp633.z $const70 	%argrw{"wr"}
	assign		$tmp633.w $const71 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1936 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp634.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp634.y ___766_x 	%argrw{"wr"}
	assign		$tmp634.z ___766_x 	%argrw{"wr"}
	assign		$tmp634.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1936 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp632.x $tmp633.x $tmp634.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp632.y $tmp633.y $tmp634.y 	%argrw{"wrr"}
	mul		$tmp632.z $tmp633.z $tmp634.z 	%argrw{"wrr"}
	mul		$tmp632.w $tmp633.w $tmp634.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1946 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp635.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp635.y ___766_y2 	%argrw{"wr"}
	assign		$tmp635.z ___766_y2 	%argrw{"wr"}
	assign		$tmp635.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1946 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp631.x $tmp632.x $tmp635.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp631.y $tmp632.y $tmp635.y 	%argrw{"wrr"}
	mul		$tmp631.z $tmp632.z $tmp635.z 	%argrw{"wrr"}
	mul		$tmp631.w $tmp632.w $tmp635.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1951 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp601.x $tmp602.x $tmp631.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp601.y $tmp602.y $tmp631.y 	%argrw{"wrr"}
	add		$tmp601.z $tmp602.z $tmp631.z 	%argrw{"wrr"}
	add		$tmp601.w $tmp602.w $tmp631.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:221
#     vector2 AB = vector2(r.x, r.y) / vector2(r.z, r.w);
	assign		$tmp638.x $const72 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{221} %argrw{"wr"}
	assign		$tmp638.y $const73 	%argrw{"wr"}
	assign		$tmp638.z $const74 	%argrw{"wr"}
	assign		$tmp638.w $const75 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1965 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp639.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp639.y ___766_x2 	%argrw{"wr"}
	assign		$tmp639.z ___766_x2 	%argrw{"wr"}
	assign		$tmp639.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1965 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp637.x $tmp638.x $tmp639.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp637.y $tmp638.y $tmp639.y 	%argrw{"wrr"}
	mul		$tmp637.z $tmp638.z $tmp639.z 	%argrw{"wrr"}
	mul		$tmp637.w $tmp638.w $tmp639.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1975 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp640.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp640.y ___766_y2 	%argrw{"wr"}
	assign		$tmp640.z ___766_y2 	%argrw{"wr"}
	assign		$tmp640.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 1975 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp636.x $tmp637.x $tmp640.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp636.y $tmp637.y $tmp640.y 	%argrw{"wrr"}
	mul		$tmp636.z $tmp637.z $tmp640.z 	%argrw{"wrr"}
	mul		$tmp636.w $tmp637.w $tmp640.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 1980 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___766_r.x $tmp601.x $tmp636.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		___766_r.y $tmp601.y $tmp636.y 	%argrw{"wrr"}
	add		___766_r.z $tmp601.z $tmp636.z 	%argrw{"wrr"}
	add		___766_r.w $tmp601.w $tmp636.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:222
#     AB.x = clamp(AB.x, 0.0, 1.0);
	assign		$tmp641.x ___766_r.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{222} %argrw{"wr"}
	assign		$tmp641.y ___766_r.y 	%argrw{"wr"}
	assign		$tmp642.x ___766_r.z 	%argrw{"wr"}
	assign		$tmp642.y ___766_r.w 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const76 1987 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___766_AB.x $tmp641.x $tmp642.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{103} %argrw{"wrr"}
	div		___766_AB.y $tmp641.y $tmp642.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	functioncall	$const9 1990 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp643 ___766_AB.x $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.x $tmp643 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	assign		___766_AB.x ___766_AB.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	functioncall	$const9 1994 	%line{224} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp644 ___766_AB.y $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.y $tmp644 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	assign		___766_AB.y ___766_AB.y 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{224} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:225
# }
	mul		$tmp645 $tmp599 ___766_AB.x 	%line{225} %argrw{"wrr"}
	mul		$tmp646 $tmp600 ___766_AB.y 	%argrw{"wrr"}
	add		___767_result $tmp645 $tmp646 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:231
# }
	compref		___769_Ess ___767_result $const1 	%line{231} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:245
# }
	sub		$tmp647 $const8 ___769_Ess 	%line{245} %argrw{"wrr"}
	mul		$tmp648 $tmp598 $tmp647 	%argrw{"wrr"}
	div		$tmp649 $tmp648 ___769_Ess 	%argrw{"wrr"}
	add		___770_result $const8 $tmp649 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:251
# }
	compref		___771_comp ___770_result $const1 	%line{251} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:275
#     {
	eq		$tmp650 $const31 $const29 	%line{275} %argrw{"wrr"}
	if		$tmp650 2246 2252 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:277
# 
	closure		$tmp651 $const32 $const28 geomprop_Nworld_out ___781_main_tangent_out ___771_safeAlpha.x ___771_safeAlpha.y specular_IOR $const1 	%line{277} %argrw{"wrrrrrrrr"}
	mul		$tmp652 transmission_color $const8 	%argrw{"wrr"}
	mul		$tmp653 $tmp652 ___771_comp 	%argrw{"wrr"}
	mul		___781_transmission_bsdf_out.response $tmp651 $tmp653 	%argrw{"wrr"}
	assign		___781_transmission_bsdf_out.response ___781_transmission_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:280
#         bsdf.throughput = 1.0 - dirAlbedo * weight;
	functioncall	$const39 2241 	%line{280} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:236
#     return result[0];
	functioncall	$const33 2018 	%line{236} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:203
# }
	sub		$tmp657 specular_IOR $const8 	%line{203} %argrw{"wrr"}
	add		$tmp658 specular_IOR $const8 	%argrw{"wrr"}
	div		$tmp659 $tmp657 $tmp658 	%argrw{"wrr"}
	functioncall	$const34 2018 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		$tmp656 $tmp659 $tmp659 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:236
#     return result[0];
	assign		$tmp655 $tmp656 	%line{236} %argrw{"wr"}
	functioncall	$const39 2240 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:209
#     float y = alpha;
	assign		___766_x ___771_NdotV 	%line{209} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:210
#     float x2 = mx_square(x);
	assign		___766_y ___771_avgAlpha 	%line{210} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:211
#     float y2 = mx_square(y);
	functioncall	$const34 2024 	%line{211} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_x2 ___766_x ___766_x 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:212
#     vector4 r = vector4(0.1003, 0.9345, 1.0, 1.0) +
	functioncall	$const34 2026 	%line{212} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:35
# }
	mul		___766_y2 ___766_y ___766_y 	%line{35} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:213
#                 vector4(-0.6303, -2.323, -1.765, 0.2281) * x +
	assign		$tmp668.x $const40 	%line{213} %argrw{"wr"}
	assign		$tmp668.y $const41 	%argrw{"wr"}
	assign		$tmp668.z $const8 	%argrw{"wr"}
	assign		$tmp668.w $const8 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:214
#                 vector4(9.748, 2.229, 8.263, 15.94) * y +
	assign		$tmp670.x $const42 	%line{214} %argrw{"wr"}
	assign		$tmp670.y $const43 	%argrw{"wr"}
	assign		$tmp670.z $const44 	%argrw{"wr"}
	assign		$tmp670.w $const45 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2044 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp671.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp671.y ___766_x 	%argrw{"wr"}
	assign		$tmp671.z ___766_x 	%argrw{"wr"}
	assign		$tmp671.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2044 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp669.x $tmp670.x $tmp671.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp669.y $tmp670.y $tmp671.y 	%argrw{"wrr"}
	mul		$tmp669.z $tmp670.z $tmp671.z 	%argrw{"wrr"}
	mul		$tmp669.w $tmp670.w $tmp671.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2049 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp667.x $tmp668.x $tmp669.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp667.y $tmp668.y $tmp669.y 	%argrw{"wrr"}
	add		$tmp667.z $tmp668.z $tmp669.z 	%argrw{"wrr"}
	add		$tmp667.w $tmp668.w $tmp669.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:215
#                 vector4(-2.038, -3.748, 11.53, -55.83) * x * y +
	assign		$tmp673.x $const48 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{215} %argrw{"wr"}
	assign		$tmp673.y $const49 	%argrw{"wr"}
	assign		$tmp673.z $const50 	%argrw{"wr"}
	assign		$tmp673.w $const51 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2063 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp674.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp674.y ___766_y 	%argrw{"wr"}
	assign		$tmp674.z ___766_y 	%argrw{"wr"}
	assign		$tmp674.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2063 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp672.x $tmp673.x $tmp674.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp672.y $tmp673.y $tmp674.y 	%argrw{"wrr"}
	mul		$tmp672.z $tmp673.z $tmp674.z 	%argrw{"wrr"}
	mul		$tmp672.w $tmp673.w $tmp674.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2068 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp666.x $tmp667.x $tmp672.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp666.y $tmp667.y $tmp672.y 	%argrw{"wrr"}
	add		$tmp666.z $tmp667.z $tmp672.z 	%argrw{"wrr"}
	add		$tmp666.w $tmp667.w $tmp672.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:216
#                 vector4(29.34, 1.424, 28.96, 13.08) * x2 +
	assign		$tmp677.x $const52 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{216} %argrw{"wr"}
	assign		$tmp677.y $const53 	%argrw{"wr"}
	assign		$tmp677.z $const54 	%argrw{"wr"}
	assign		$tmp677.w $const55 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2082 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp678.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp678.y ___766_x 	%argrw{"wr"}
	assign		$tmp678.z ___766_x 	%argrw{"wr"}
	assign		$tmp678.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2082 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp676.x $tmp677.x $tmp678.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp676.y $tmp677.y $tmp678.y 	%argrw{"wrr"}
	mul		$tmp676.z $tmp677.z $tmp678.z 	%argrw{"wrr"}
	mul		$tmp676.w $tmp677.w $tmp678.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2092 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp679.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp679.y ___766_y 	%argrw{"wr"}
	assign		$tmp679.z ___766_y 	%argrw{"wr"}
	assign		$tmp679.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2092 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp675.x $tmp676.x $tmp679.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp675.y $tmp676.y $tmp679.y 	%argrw{"wrr"}
	mul		$tmp675.z $tmp676.z $tmp679.z 	%argrw{"wrr"}
	mul		$tmp675.w $tmp676.w $tmp679.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2097 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp665.x $tmp666.x $tmp675.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp665.y $tmp666.y $tmp675.y 	%argrw{"wrr"}
	add		$tmp665.z $tmp666.z $tmp675.z 	%argrw{"wrr"}
	add		$tmp665.w $tmp666.w $tmp675.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:217
#                 vector4(-8.245, -0.7684, -7.507, 41.26) * y2 +
	assign		$tmp681.x $const56 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{217} %argrw{"wr"}
	assign		$tmp681.y $const57 	%argrw{"wr"}
	assign		$tmp681.z $const58 	%argrw{"wr"}
	assign		$tmp681.w $const59 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2111 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp682.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp682.y ___766_x2 	%argrw{"wr"}
	assign		$tmp682.z ___766_x2 	%argrw{"wr"}
	assign		$tmp682.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2111 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp680.x $tmp681.x $tmp682.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp680.y $tmp681.y $tmp682.y 	%argrw{"wrr"}
	mul		$tmp680.z $tmp681.z $tmp682.z 	%argrw{"wrr"}
	mul		$tmp680.w $tmp681.w $tmp682.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2116 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp664.x $tmp665.x $tmp680.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp664.y $tmp665.y $tmp680.y 	%argrw{"wrr"}
	add		$tmp664.z $tmp665.z $tmp680.z 	%argrw{"wrr"}
	add		$tmp664.w $tmp665.w $tmp680.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:218
#                 vector4(-26.44, 1.436, -36.11, 54.9) * x2 * y +
	assign		$tmp684.x $const60 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{218} %argrw{"wr"}
	assign		$tmp684.y $const61 	%argrw{"wr"}
	assign		$tmp684.z $const62 	%argrw{"wr"}
	assign		$tmp684.w $const63 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2130 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp685.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp685.y ___766_y2 	%argrw{"wr"}
	assign		$tmp685.z ___766_y2 	%argrw{"wr"}
	assign		$tmp685.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2130 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp683.x $tmp684.x $tmp685.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp683.y $tmp684.y $tmp685.y 	%argrw{"wrr"}
	mul		$tmp683.z $tmp684.z $tmp685.z 	%argrw{"wrr"}
	mul		$tmp683.w $tmp684.w $tmp685.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2135 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp663.x $tmp664.x $tmp683.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp663.y $tmp664.y $tmp683.y 	%argrw{"wrr"}
	add		$tmp663.z $tmp664.z $tmp683.z 	%argrw{"wrr"}
	add		$tmp663.w $tmp664.w $tmp683.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:219
#                 vector4(19.99, 0.2913, 15.86, 300.2) * x * y2 +
	assign		$tmp688.x $const64 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{219} %argrw{"wr"}
	assign		$tmp688.y $const65 	%argrw{"wr"}
	assign		$tmp688.z $const66 	%argrw{"wr"}
	assign		$tmp688.w $const67 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2149 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp689.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp689.y ___766_x2 	%argrw{"wr"}
	assign		$tmp689.z ___766_x2 	%argrw{"wr"}
	assign		$tmp689.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2149 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp687.x $tmp688.x $tmp689.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp687.y $tmp688.y $tmp689.y 	%argrw{"wrr"}
	mul		$tmp687.z $tmp688.z $tmp689.z 	%argrw{"wrr"}
	mul		$tmp687.w $tmp688.w $tmp689.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2159 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp690.x ___766_y 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp690.y ___766_y 	%argrw{"wr"}
	assign		$tmp690.z ___766_y 	%argrw{"wr"}
	assign		$tmp690.w ___766_y 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2159 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp686.x $tmp687.x $tmp690.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp686.y $tmp687.y $tmp690.y 	%argrw{"wrr"}
	mul		$tmp686.z $tmp687.z $tmp690.z 	%argrw{"wrr"}
	mul		$tmp686.w $tmp687.w $tmp690.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2164 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp662.x $tmp663.x $tmp686.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp662.y $tmp663.y $tmp686.y 	%argrw{"wrr"}
	add		$tmp662.z $tmp663.z $tmp686.z 	%argrw{"wrr"}
	add		$tmp662.w $tmp663.w $tmp686.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:220
#                 vector4(-5.448, 0.6286, 33.37, -285.1) * x2 * y2;
	assign		$tmp693.x $const68 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{220} %argrw{"wr"}
	assign		$tmp693.y $const69 	%argrw{"wr"}
	assign		$tmp693.z $const70 	%argrw{"wr"}
	assign		$tmp693.w $const71 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2178 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp694.x ___766_x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp694.y ___766_x 	%argrw{"wr"}
	assign		$tmp694.z ___766_x 	%argrw{"wr"}
	assign		$tmp694.w ___766_x 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2178 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp692.x $tmp693.x $tmp694.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp692.y $tmp693.y $tmp694.y 	%argrw{"wrr"}
	mul		$tmp692.z $tmp693.z $tmp694.z 	%argrw{"wrr"}
	mul		$tmp692.w $tmp693.w $tmp694.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2188 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp695.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp695.y ___766_y2 	%argrw{"wr"}
	assign		$tmp695.z ___766_y2 	%argrw{"wr"}
	assign		$tmp695.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2188 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp691.x $tmp692.x $tmp695.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp691.y $tmp692.y $tmp695.y 	%argrw{"wrr"}
	mul		$tmp691.z $tmp692.z $tmp695.z 	%argrw{"wrr"}
	mul		$tmp691.w $tmp692.w $tmp695.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2193 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp661.x $tmp662.x $tmp691.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		$tmp661.y $tmp662.y $tmp691.y 	%argrw{"wrr"}
	add		$tmp661.z $tmp662.z $tmp691.z 	%argrw{"wrr"}
	add		$tmp661.w $tmp662.w $tmp691.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:221
#     vector2 AB = vector2(r.x, r.y) / vector2(r.z, r.w);
	assign		$tmp698.x $const72 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{221} %argrw{"wr"}
	assign		$tmp698.y $const73 	%argrw{"wr"}
	assign		$tmp698.z $const74 	%argrw{"wr"}
	assign		$tmp698.w $const75 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2207 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp699.x ___766_x2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp699.y ___766_x2 	%argrw{"wr"}
	assign		$tmp699.z ___766_x2 	%argrw{"wr"}
	assign		$tmp699.w ___766_x2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2207 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp697.x $tmp698.x $tmp699.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp697.y $tmp698.y $tmp699.y 	%argrw{"wrr"}
	mul		$tmp697.z $tmp698.z $tmp699.z 	%argrw{"wrr"}
	mul		$tmp697.w $tmp698.w $tmp699.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2217 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp700.x ___766_y2 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp700.y ___766_y2 	%argrw{"wr"}
	assign		$tmp700.z ___766_y2 	%argrw{"wr"}
	assign		$tmp700.w ___766_y2 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const46 2217 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp696.x $tmp697.x $tmp700.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{81} %argrw{"wrr"}
	mul		$tmp696.y $tmp697.y $tmp700.y 	%argrw{"wrr"}
	mul		$tmp696.z $tmp697.z $tmp700.z 	%argrw{"wrr"}
	mul		$tmp696.w $tmp697.w $tmp700.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const47 2222 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h:31
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___766_r.x $tmp661.x $tmp696.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector4.h"} %line{31} %argrw{"wrr"}
	add		___766_r.y $tmp661.y $tmp696.y 	%argrw{"wrr"}
	add		___766_r.z $tmp661.z $tmp696.z 	%argrw{"wrr"}
	add		___766_r.w $tmp661.w $tmp696.w 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:222
#     AB.x = clamp(AB.x, 0.0, 1.0);
	assign		$tmp701.x ___766_r.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{222} %argrw{"wr"}
	assign		$tmp701.y ___766_r.y 	%argrw{"wr"}
	assign		$tmp702.x ___766_r.z 	%argrw{"wr"}
	assign		$tmp702.y ___766_r.w 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:608
# 
	functioncall	$const76 2229 	%line{608} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		___766_AB.x $tmp701.x $tmp702.x 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/vector2.h"} %line{103} %argrw{"wrr"}
	div		___766_AB.y $tmp701.y $tmp702.y 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	functioncall	$const9 2232 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp703 ___766_AB.x $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.x $tmp703 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:223
#     AB.y = clamp(AB.y, 0.0, 1.0);
	assign		___766_AB.x ___766_AB.x 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{223} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	functioncall	$const9 2236 	%line{224} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp704 ___766_AB.y $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___766_AB.y $tmp704 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:224
#     return F0 * AB.x + F90 * AB.y;
	assign		___766_AB.y ___766_AB.y 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{224} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:225
# }
	mul		$tmp705 $tmp655 ___766_AB.x 	%line{225} %argrw{"wrr"}
	mul		$tmp706 $const14 ___766_AB.y 	%argrw{"wrr"}
	add		___768_result $tmp705 $tmp706 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:237
# }
	compref		$tmp654 ___768_result $const1 	%line{237} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:280
#         bsdf.throughput = 1.0 - dirAlbedo * weight;
	mul		___773_dirAlbedo $tmp654 ___771_comp 	%line{280} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:281
#     }
	mul		$tmp707 ___773_dirAlbedo $const8 	%line{281} %argrw{"wrr"}
	sub		$tmp708 $const8 $tmp707 	%argrw{"wrr"}
	assign		$tmp709 $tmp708 	%argrw{"wr"}
	assign		___781_transmission_bsdf_out.throughput $tmp709 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:285
#         bsdf.throughput = color(1.0);
	closure		$tmp710 $const32 $const28 geomprop_Nworld_out ___781_main_tangent_out ___771_safeAlpha.x ___771_safeAlpha.y specular_IOR $const13 	%line{285} %argrw{"wrrrrrrrr"}
	mul		$tmp711 transmission_color $const8 	%argrw{"wrr"}
	mul		$tmp712 $tmp711 ___771_comp 	%argrw{"wrr"}
	mul		___781_transmission_bsdf_out.response $tmp710 $tmp712 	%argrw{"wrr"}
	assign		___781_transmission_bsdf_out.response ___781_transmission_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:286
#     }
	assign		___781_transmission_bsdf_out.throughput $const14 	%line{286} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:421
#     mx_sheen_bsdf(sheen, sheen_color, sheen_roughness, normal1, sheen_bsdf_out);
	assign		___781_sheen_bsdf_out.response ___781_null_closure 	%line{421} %argrw{"wr"}
	assign		___781_sheen_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_sheen_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_sheen_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:422
#     BSDF translucent_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const81 2291 	%line{422} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:130
#     {
	lt		$tmp713 sheen $const7 	%line{130} %argrw{"wrr"}
	if		$tmp713 2262 2262 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:132
#         bsdf.throughput = color(1.0);
	assign		___781_sheen_bsdf_out.response $const1 	%line{132} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:133
#         return;
	assign		___781_sheen_bsdf_out.throughput $const14 	%line{133} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:134
#     }
	return	%line{134}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:140
# 
	neg		$tmp714 I 	%line{140} %argrw{"wr"}
	normalize	___758_V $tmp714 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:142
#     float alpha = clamp(roughness, M_FLOAT_EPS, 1.0);
	dot		$tmp715 geomprop_Nworld_out ___758_V 	%line{142} %argrw{"wrr"}
	fabs		___758_NdotV $tmp715 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:143
#     float albedo = weight * mx_imageworks_sheen_dir_albedo(NdotV, alpha);
	functioncall	$const9 2269 	%line{143} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp716 sheen_roughness $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___758_alpha $tmp716 $const7 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:144
#     bsdf.response = albedo * Ks * diffuse(N);
	functioncall	$const82 2283 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{144} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:122
#     return clamp(dirAlbedo, 0.0, 1.0);
	functioncall	$const83 2280 	%line{122} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:115
#     float b = 1.0 + 30.66449 * NdotV + 32.53420 * roughness;
	mul		$tmp718 $const85 ___758_NdotV 	%line{115} %argrw{"wrr"}
	sub		$tmp719 $const84 $tmp718 	%argrw{"wrr"}
	mul		$tmp720 $const86 ___758_alpha 	%argrw{"wrr"}
	add		___756_a $tmp719 $tmp720 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:116
#     return a / b;
	mul		$tmp721 $const87 ___758_NdotV 	%line{116} %argrw{"wrr"}
	add		$tmp722 $const8 $tmp721 	%argrw{"wrr"}
	mul		$tmp723 $const88 ___758_alpha 	%argrw{"wrr"}
	add		___756_b $tmp722 $tmp723 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:117
# }
	div		___757_dirAlbedo ___756_a ___756_b 	%line{117} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:123
# }
	functioncall	$const9 2283 	%line{123} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp724 ___757_dirAlbedo $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp717 $tmp724 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:144
#     bsdf.response = albedo * Ks * diffuse(N);
	mul		___758_albedo sheen $tmp717 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{144} %argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:145
#     bsdf.throughput = 1.0 - albedo;
	closure		$tmp725 $const89 geomprop_Nworld_out 	%line{145} %argrw{"wrr"}
	mul		$tmp726 ___758_albedo sheen_color 	%argrw{"wrr"}
	mul		___781_sheen_bsdf_out.response $tmp725 $tmp726 	%argrw{"wrr"}
	assign		___781_sheen_bsdf_out.response ___781_sheen_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:146
# }
	sub		$tmp727 $const8 ___758_albedo 	%line{146} %argrw{"wrr"}
	assign		$tmp728 $tmp727 	%argrw{"wr"}
	assign		___781_sheen_bsdf_out.throughput $tmp728 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:423
#     mx_translucent_bsdf(1, coat_affected_subsurface_color_out, normal1, translucent_bsdf_out);
	assign		___781_translucent_bsdf_out.response ___781_null_closure 	%line{423} %argrw{"wr"}
	assign		___781_translucent_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_translucent_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_translucent_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:424
#     BSDF subsurface_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const90 2301 	%line{424} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:325
#     bsdf.throughput = color(0.0);
	closure		$tmp729 $const91 geomprop_Nworld_out 	%line{325} %argrw{"wrr"}
	mul		$tmp730 ___781_coat_affected_subsurface_color_out $const8 	%argrw{"wrr"}
	mul		___781_translucent_bsdf_out.response $tmp729 $tmp730 	%argrw{"wrr"}
	assign		___781_translucent_bsdf_out.response ___781_translucent_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:326
# }
	assign		___781_translucent_bsdf_out.throughput $const15 	%line{326} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:425
#     mx_subsurface_bsdf(1, coat_affected_subsurface_color_out, subsurface_radius_scaled_out, subsurface_anisotropy, normal1, subsurface_bsdf_out);
	assign		___781_subsurface_bsdf_out.response ___781_null_closure 	%line{425} %argrw{"wr"}
	assign		___781_subsurface_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_subsurface_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_subsurface_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:426
#     BSDF selected_subsurface_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const92 2311 	%line{426} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:332
#     bsdf.throughput = color(0.0);
	closure		$tmp731 $const91 geomprop_Nworld_out 	%line{332} %argrw{"wrr"}
	mul		$tmp732 ___781_coat_affected_subsurface_color_out $const8 	%argrw{"wrr"}
	mul		___781_subsurface_bsdf_out.response $tmp731 $tmp732 	%argrw{"wrr"}
	assign		___781_subsurface_bsdf_out.response ___781_subsurface_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:333
# }
	assign		___781_subsurface_bsdf_out.throughput $const15 	%line{333} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:427
#     selected_subsurface_bsdf_out.response = mix(subsurface_bsdf_out.response, translucent_bsdf_out.response, subsurface_selector_out);
	assign		___781_selected_subsurface_bsdf_out.response ___781_null_closure 	%line{427} %argrw{"wr"}
	assign		___781_selected_subsurface_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_selected_subsurface_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_selected_subsurface_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:428
#     selected_subsurface_bsdf_out.throughput = mix(subsurface_bsdf_out.throughput, translucent_bsdf_out.throughput, subsurface_selector_out);
	functioncall	$const93 2320 	%line{428} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp733 $const8 ___781_subsurface_selector_out 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp734 ___781_subsurface_bsdf_out.response $tmp733 	%argrw{"wrr"}
	mul		$tmp735 ___781_translucent_bsdf_out.response ___781_subsurface_selector_out 	%argrw{"wrr"}
	add		___781_selected_subsurface_bsdf_out.response $tmp734 $tmp735 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:428
#     selected_subsurface_bsdf_out.throughput = mix(subsurface_bsdf_out.throughput, translucent_bsdf_out.throughput, subsurface_selector_out);
	assign		___781_selected_subsurface_bsdf_out.response ___781_selected_subsurface_bsdf_out.response 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{428} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:429
#     BSDF diffuse_bsdf_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	mix		___781_selected_subsurface_bsdf_out.throughput ___781_subsurface_bsdf_out.throughput ___781_translucent_bsdf_out.throughput ___781_subsurface_selector_out 	%line{429} %argrw{"wrrr"}
	assign		___781_selected_subsurface_bsdf_out.throughput ___781_selected_subsurface_bsdf_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:430
#     mx_oren_nayar_diffuse_bsdf(base, coat_affected_diffuse_color_out, diffuse_roughness, normal1, diffuse_bsdf_out);
	assign		___781_diffuse_bsdf_out.response ___781_null_closure 	%line{430} %argrw{"wr"}
	assign		___781_diffuse_bsdf_out.throughput $const14 	%argrw{"wr"}
	assign		___781_diffuse_bsdf_out.thickness $const5 	%argrw{"wr"}
	assign		___781_diffuse_bsdf_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:431
#     BSDF subsurface_mix_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	functioncall	$const94 2333 	%line{431} %argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:338
#     bsdf.throughput = color(0.0);
	closure		$tmp736 $const95 geomprop_Nworld_out diffuse_roughness 	%line{338} %argrw{"wrrr"}
	mul		$tmp737 ___781_coat_affected_diffuse_color_out base 	%argrw{"wrr"}
	mul		___781_diffuse_bsdf_out.response $tmp736 $tmp737 	%argrw{"wrr"}
	assign		___781_diffuse_bsdf_out.response ___781_diffuse_bsdf_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:339
# }
	assign		___781_diffuse_bsdf_out.throughput $const15 	%line{339} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:432
#     subsurface_mix_out.response = mix(diffuse_bsdf_out.response, selected_subsurface_bsdf_out.response, subsurface1);
	assign		___781_subsurface_mix_out.response ___781_null_closure 	%line{432} %argrw{"wr"}
	assign		___781_subsurface_mix_out.throughput $const14 	%argrw{"wr"}
	assign		___781_subsurface_mix_out.thickness $const5 	%argrw{"wr"}
	assign		___781_subsurface_mix_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:433
#     subsurface_mix_out.throughput = mix(diffuse_bsdf_out.throughput, selected_subsurface_bsdf_out.throughput, subsurface1);
	functioncall	$const93 2342 	%line{433} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp738 $const8 subsurface1 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp739 ___781_diffuse_bsdf_out.response $tmp738 	%argrw{"wrr"}
	mul		$tmp740 ___781_selected_subsurface_bsdf_out.response subsurface1 	%argrw{"wrr"}
	add		___781_subsurface_mix_out.response $tmp739 $tmp740 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:433
#     subsurface_mix_out.throughput = mix(diffuse_bsdf_out.throughput, selected_subsurface_bsdf_out.throughput, subsurface1);
	assign		___781_subsurface_mix_out.response ___781_subsurface_mix_out.response 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{433} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:434
#     BSDF sheen_layer_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	mix		___781_subsurface_mix_out.throughput ___781_diffuse_bsdf_out.throughput ___781_selected_subsurface_bsdf_out.throughput subsurface1 	%line{434} %argrw{"wrrr"}
	assign		___781_subsurface_mix_out.throughput ___781_subsurface_mix_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:435
#     sheen_layer_out.response = sheen_bsdf_out.response + subsurface_mix_out.response * sheen_bsdf_out.throughput;
	assign		___781_sheen_layer_out.response ___781_null_closure 	%line{435} %argrw{"wr"}
	assign		___781_sheen_layer_out.throughput $const14 	%argrw{"wr"}
	assign		___781_sheen_layer_out.thickness $const5 	%argrw{"wr"}
	assign		___781_sheen_layer_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:436
#     sheen_layer_out.throughput = sheen_bsdf_out.throughput * subsurface_mix_out.throughput;
	mul		$tmp741 ___781_subsurface_mix_out.response ___781_sheen_bsdf_out.throughput 	%line{436} %argrw{"wrr"}
	add		___781_sheen_layer_out.response ___781_sheen_bsdf_out.response $tmp741 	%argrw{"wrr"}
	assign		___781_sheen_layer_out.response ___781_sheen_layer_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:437
#     BSDF transmission_mix_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	mul		___781_sheen_layer_out.throughput ___781_sheen_bsdf_out.throughput ___781_subsurface_mix_out.throughput 	%line{437} %argrw{"wrr"}
	assign		___781_sheen_layer_out.throughput ___781_sheen_layer_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:438
#     transmission_mix_out.response = mix(sheen_layer_out.response, transmission_bsdf_out.response, transmission);
	assign		___781_transmission_mix_out.response ___781_null_closure 	%line{438} %argrw{"wr"}
	assign		___781_transmission_mix_out.throughput $const14 	%argrw{"wr"}
	assign		___781_transmission_mix_out.thickness $const5 	%argrw{"wr"}
	assign		___781_transmission_mix_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:439
#     transmission_mix_out.throughput = mix(sheen_layer_out.throughput, transmission_bsdf_out.throughput, transmission);
	functioncall	$const93 2363 	%line{439} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp742 $const8 transmission 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp743 ___781_sheen_layer_out.response $tmp742 	%argrw{"wrr"}
	mul		$tmp744 ___781_transmission_bsdf_out.response transmission 	%argrw{"wrr"}
	add		___781_transmission_mix_out.response $tmp743 $tmp744 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:439
#     transmission_mix_out.throughput = mix(sheen_layer_out.throughput, transmission_bsdf_out.throughput, transmission);
	assign		___781_transmission_mix_out.response ___781_transmission_mix_out.response 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{439} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:440
#     BSDF specular_layer_with_thin_film_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	mix		___781_transmission_mix_out.throughput ___781_sheen_layer_out.throughput ___781_transmission_bsdf_out.throughput transmission 	%line{440} %argrw{"wrrr"}
	assign		___781_transmission_mix_out.throughput ___781_transmission_mix_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:441
#     specular_layer_with_thin_film_out.response = specular_bsdf_out.response + transmission_mix_out.response * specular_bsdf_out.throughput;
	assign		___781_specular_layer_with_thin_film_out.response ___781_null_closure 	%line{441} %argrw{"wr"}
	assign		___781_specular_layer_with_thin_film_out.throughput $const14 	%argrw{"wr"}
	assign		___781_specular_layer_with_thin_film_out.thickness $const5 	%argrw{"wr"}
	assign		___781_specular_layer_with_thin_film_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:442
#     specular_layer_with_thin_film_out.throughput = specular_bsdf_out.throughput * transmission_mix_out.throughput;
	mul		$tmp745 ___781_transmission_mix_out.response ___781_specular_bsdf_out.throughput 	%line{442} %argrw{"wrr"}
	add		___781_specular_layer_with_thin_film_out.response ___781_specular_bsdf_out.response $tmp745 	%argrw{"wrr"}
	assign		___781_specular_layer_with_thin_film_out.response ___781_specular_layer_with_thin_film_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:443
#     BSDF metalness_mix_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	mul		___781_specular_layer_with_thin_film_out.throughput ___781_specular_bsdf_out.throughput ___781_transmission_mix_out.throughput 	%line{443} %argrw{"wrr"}
	assign		___781_specular_layer_with_thin_film_out.throughput ___781_specular_layer_with_thin_film_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:444
#     metalness_mix_out.response = mix(specular_layer_with_thin_film_out.response, metal_bsdf_out.response, metalness);
	assign		___781_metalness_mix_out.response ___781_null_closure 	%line{444} %argrw{"wr"}
	assign		___781_metalness_mix_out.throughput $const14 	%argrw{"wr"}
	assign		___781_metalness_mix_out.thickness $const5 	%argrw{"wr"}
	assign		___781_metalness_mix_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:445
#     metalness_mix_out.throughput = mix(specular_layer_with_thin_film_out.throughput, metal_bsdf_out.throughput, metalness);
	functioncall	$const93 2384 	%line{445} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp746 $const8 metalness 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp747 ___781_specular_layer_with_thin_film_out.response $tmp746 	%argrw{"wrr"}
	mul		$tmp748 ___781_metal_bsdf_out.response metalness 	%argrw{"wrr"}
	add		___781_metalness_mix_out.response $tmp747 $tmp748 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:445
#     metalness_mix_out.throughput = mix(specular_layer_with_thin_film_out.throughput, metal_bsdf_out.throughput, metalness);
	assign		___781_metalness_mix_out.response ___781_metalness_mix_out.response 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{445} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:446
#     color metalness_mix_attenuated_out_in2_clamped = clamp(coat_attenuation_out, 0.0, 1.0);
	mix		___781_metalness_mix_out.throughput ___781_specular_layer_with_thin_film_out.throughput ___781_metal_bsdf_out.throughput metalness 	%line{446} %argrw{"wrrr"}
	assign		___781_metalness_mix_out.throughput ___781_metalness_mix_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:447
#     BSDF metalness_mix_attenuated_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	assign		$tmp749 $const5 	%line{447} %argrw{"wr"}
	assign		$tmp750 $const8 	%argrw{"wr"}
	functioncall	$const9 2392 	%argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:140
# color  clamp (color x, color minval, color maxval) { return max(min(x,maxval),minval); }
	min		$tmp751 ___781_coat_attenuation_out $tmp750 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{140} %argrw{"wrr"}
	max		___781_metalness_mix_attenuated_out_in2_clamped $tmp751 $tmp749 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:448
#     metalness_mix_attenuated_out.response = metalness_mix_out.response * metalness_mix_attenuated_out_in2_clamped;
	assign		___781_metalness_mix_attenuated_out.response ___781_null_closure 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{448} %argrw{"wr"}
	assign		___781_metalness_mix_attenuated_out.throughput $const14 	%argrw{"wr"}
	assign		___781_metalness_mix_attenuated_out.thickness $const5 	%argrw{"wr"}
	assign		___781_metalness_mix_attenuated_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:449
#     metalness_mix_attenuated_out.throughput = metalness_mix_out.throughput * metalness_mix_attenuated_out_in2_clamped;
	mul		___781_metalness_mix_attenuated_out.response ___781_metalness_mix_out.response ___781_metalness_mix_attenuated_out_in2_clamped 	%line{449} %argrw{"wrr"}
	assign		___781_metalness_mix_attenuated_out.response ___781_metalness_mix_attenuated_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:450
#     BSDF coat_layer_out = BSDF(null_closure, color(1.0), 0.0, 0.0);
	mul		___781_metalness_mix_attenuated_out.throughput ___781_metalness_mix_out.throughput ___781_metalness_mix_attenuated_out_in2_clamped 	%line{450} %argrw{"wrr"}
	assign		___781_metalness_mix_attenuated_out.throughput ___781_metalness_mix_attenuated_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:451
#     coat_layer_out.response = coat_bsdf_out.response + metalness_mix_attenuated_out.response * coat_bsdf_out.throughput;
	assign		___781_coat_layer_out.response ___781_null_closure 	%line{451} %argrw{"wr"}
	assign		___781_coat_layer_out.throughput $const14 	%argrw{"wr"}
	assign		___781_coat_layer_out.thickness $const5 	%argrw{"wr"}
	assign		___781_coat_layer_out.ior $const5 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:452
#     coat_layer_out.throughput = coat_bsdf_out.throughput * metalness_mix_attenuated_out.throughput;
	mul		$tmp752 ___781_metalness_mix_attenuated_out.response ___781_coat_bsdf_out.throughput 	%line{452} %argrw{"wrr"}
	add		___781_coat_layer_out.response ___781_coat_bsdf_out.response $tmp752 	%argrw{"wrr"}
	assign		___781_coat_layer_out.response ___781_coat_layer_out.response 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:453
#     EDF emission_edf_out = emission_weight_attenuated_out * emission();
	mul		___781_coat_layer_out.throughput ___781_coat_bsdf_out.throughput ___781_metalness_mix_attenuated_out.throughput 	%line{453} %argrw{"wrr"}
	assign		___781_coat_layer_out.throughput ___781_coat_layer_out.throughput 	%argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:454
#     surfaceshader shader_constructor_out = null_closure;
	closure		$tmp753 $const96 	%line{454} %argrw{"wr"}
	mul		___781_emission_edf_out $tmp753 ___781_emission_weight_attenuated_out 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:455
#     mx_surface(coat_layer_out, emission_edf_out, opacity_luminance_out[0], shader_constructor_out);
	assign		___781_shader_constructor_out ___781_null_closure 	%line{455} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:456
#     out = shader_constructor_out;
	compref		$tmp754 ___781_opacity_luminance_out $const1 	%line{456} %argrw{"wrr"}
	functioncall	$const97 2423 	%argrw{"r"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:344
#     result = (bsdf.response + edf) * opacity_weight + transparent() * (1.0 - opacity_weight);
	functioncall	$const9 2417 	%line{344} %argrw{"r"}
# Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp755 $tmp754 $const8 	%filename{"Applications/Blender.app/Contents/Resources/3.0/scripts/addons/cycles/shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___780_opacity_weight $tmp755 $const5 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:345
# }
	add		$tmp756 ___781_coat_layer_out.response ___781_emission_edf_out 	%filename{"Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl"} %line{345} %argrw{"wrr"}
	mul		$tmp757 $tmp756 ___780_opacity_weight 	%argrw{"wrr"}
	closure		$tmp758 $const98 	%argrw{"wr"}
	sub		$tmp759 $const8 ___780_opacity_weight 	%argrw{"wrr"}
	mul		$tmp760 $tmp758 $tmp759 	%argrw{"wrr"}
	add		___781_shader_constructor_out $tmp757 $tmp760 	%argrw{"wrr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:457
# }
	assign		SR_gold_out ___781_shader_constructor_out 	%line{457} %argrw{"wr"}
# Users/roblesch/Projects/mtlx-to-osl/samples/standard_surface_gold.osl:606
# }
	assign		out SR_gold_out 	%line{606} %argrw{"wr"}
	end
